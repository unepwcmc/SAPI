name: Deploy Frontend with Capistrano

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
      environment:
        required: true
        type: string
        description: 'Environment to deploy to (staging or production)'

jobs:
  deploy:
    runs-on: self-hosted
    environment: ${{ inputs.environment }}

    steps:
      - name: Set start time
        id: set_start_time
        run: echo "START_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> $GITHUB_ENV

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}

      - id: slack_start
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          payload-file-path: .github/notifications/slack/github-deploy-slack-started.json
          payload-file-path-parsed: true
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          REPOSITORY: ${{ github.repository }}
          RUNNER_NAME: ${{ runner.name }}
          ENVIRONMENT: ${{ inputs.environment }}
          START_TIME: ${{ env.START_TIME }}
          JOB_LINK: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Set Up Ruby 3.2.5
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.3'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install Dependencies
        run: bundle install

      - name: Start SSH Agent
        run: |
          eval "$(ssh-agent -s)"
          echo "SSH_AUTH_SOCK=$SSH_AUTH_SOCK" >> $GITHUB_ENV
          echo "SSH_AGENT_PID=$SSH_AGENT_PID" >> $GITHUB_ENV
        shell: bash

      - name: Add SSH Key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/temp_key
          chmod 600 /tmp/temp_key
          ssh-add /tmp/temp_key
          rm /tmp/temp_key
        env:
          SSH_AUTH_SOCK: ${{ env.SSH_AUTH_SOCK }}
          SSH_AGENT_PID: ${{ env.SSH_AGENT_PID }}

      - name: List SSH Identities
        run: ssh-add -l
        env:
          SSH_AUTH_SOCK: ${{ env.SSH_AUTH_SOCK }}
          SSH_AGENT_PID: ${{ env.SSH_AGENT_PID }}

      - name: Set Environment Variables
        run: |
          if [ "${{ inputs.environment }}" = "staging" ]; then
            echo "SERVER_HOST=sapi-staging.linode.unep-wcmc.org" >> $GITHUB_ENV
          elif [ "${{ inputs.environment }}" = "production" ]; then
            echo "SERVER_HOST=sapi-production.linode.unep-wcmc.org" >> $GITHUB_ENV
          else
            echo "Unknown environment: ${{ inputs.environment }}"
            exit 1
          fi

      - name: Add Server to Known Hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -t rsa ${{ env.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Check SSH Connection
        run: |
          ssh -vvv -o BatchMode=yes -o ConnectTimeout=5 wcmc@${{ env.SERVER_HOST }} echo "SSH connection successful"
        env:
          SSH_AUTH_SOCK: ${{ env.SSH_AUTH_SOCK }}
          SSH_AGENT_PID: ${{ env.SSH_AGENT_PID }}

      - name: Deploy to ${{ inputs.environment }}
        env:
          SSH_AUTH_SOCK: ${{ env.SSH_AUTH_SOCK }}
          SSH_AGENT_PID: ${{ env.SSH_AGENT_PID }}
        run: bundle exec cap ${{ inputs.environment }} deploy

      - name: Set end time
        id: set_end_time
        run: echo "END_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> $GITHUB_ENV

      - name: Update Slack notification
        if: success()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          payload-file-path: .github/notifications/slack/github-deploy-slack-success.json
          payload-file-path-parsed: true
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          REPOSITORY: ${{ github.repository }}
          RUNNER_NAME: ${{ runner.name }}
          ENVIRONMENT: ${{ inputs.environment }}
          START_TIME: ${{ env.START_TIME }}
          END_TIME: ${{ env.END_TIME }}
          JOB_LINK: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Slack Failure Notification
        if: failure() || cancelled()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          payload-file-path: .github/notifications/slack/github-deploy-slack-failure.json
          payload-file-path-parsed: true
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          REPOSITORY: ${{ github.repository }}
          RUNNER_NAME: ${{ runner.name }}
          ENVIRONMENT: ${{ inputs.environment }}
          START_TIME: ${{ env.START_TIME }}
          END_TIME: ${{ env.END_TIME }}
          JOB_LINK: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}