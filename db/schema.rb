# This file is auto-generated from the current state of the database. Instead
# of editing this file, please use the migrations feature of Active Record to
# incrementally modify your database, and then regenerate this schema definition.
#
# This file is the source Rails uses to define your schema when running `bin/rails
# db:schema:load`. When creating a new database, `bin/rails db:schema:load` tends to
# be faster and is potentially less error prone than running all of your
# migrations from scratch. Old migrations may fail to apply correctly if those
# migrations use external dependencies or application code.
#
# It's strongly recommended that you check this file into your version control system.

ActiveRecord::Schema[7.0].define(version: 2024_08_05_112027) do
  # These are extensions that must be enabled in order to support this database
  enable_extension "hstore"
  enable_extension "pg_trgm"
  enable_extension "plpgsql"
  enable_extension "tablefunc"
  enable_extension "unaccent"

  create_table "ahoy_events", id: :uuid, default: nil, force: :cascade do |t|
    t.uuid "visit_id"
    t.integer "user_id"
    t.string "name", limit: 255
    t.datetime "time", precision: nil
    t.jsonb "properties"
    t.index ["name", "time"], name: "index_ahoy_events_on_name_and_time"
    t.index ["time"], name: "index_ahoy_events_on_time"
    t.index ["user_id"], name: "index_ahoy_events_on_user_id"
    t.index ["visit_id"], name: "index_ahoy_events_on_visit_id"
  end

  create_table "ahoy_visits", id: :uuid, default: nil, force: :cascade do |t|
    t.uuid "visitor_id"
    t.string "ip", limit: 255
    t.text "user_agent"
    t.text "referrer"
    t.text "landing_page"
    t.integer "user_id"
    t.string "referring_domain", limit: 255
    t.string "search_keyword", limit: 255
    t.string "browser", limit: 255
    t.string "os", limit: 255
    t.string "device_type", limit: 255
    t.string "country", limit: 255
    t.string "city", limit: 255
    t.string "utm_source", limit: 255
    t.string "utm_medium", limit: 255
    t.string "utm_term", limit: 255
    t.string "utm_content", limit: 255
    t.string "utm_campaign", limit: 255
    t.datetime "started_at", precision: nil
    t.text "organization"
    t.index ["user_id"], name: "index_ahoy_visits_on_user_id"
    t.index ["visitor_id", "started_at"], name: "index_ahoy_visits_on_visitor_id_and_started_at"
  end

  create_table "analytics_events", id: :serial, force: :cascade do |t|
    t.string "event_type", limit: 255
    t.string "event_name", limit: 255
    t.datetime "created_at", precision: nil
    t.datetime "updated_at", precision: nil
  end

  create_table "annotations", id: :serial, force: :cascade do |t|
    t.string "symbol", limit: 255
    t.string "parent_symbol", limit: 255
    t.boolean "display_in_index", default: false, null: false
    t.boolean "display_in_footnote", default: false, null: false
    t.text "short_note_en"
    t.text "full_note_en"
    t.text "short_note_fr"
    t.text "full_note_fr"
    t.text "short_note_es"
    t.text "full_note_es"
    t.integer "original_id"
    t.integer "event_id"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.integer "import_row_id"
    t.integer "created_by_id"
    t.integer "updated_by_id"
  end

  create_table "api_requests", id: :serial, force: :cascade do |t|
    t.integer "user_id"
    t.string "controller", limit: 255
    t.string "action", limit: 255
    t.string "format", limit: 255
    t.text "params"
    t.string "ip", limit: 255
    t.integer "response_status"
    t.text "error_message"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.index ["created_at"], name: "index_api_requests_on_created_at"
  end

  create_table "author_year_import", id: false, force: :cascade do |t|
    t.string "name"
    t.string "rank"
    t.integer "legacy_id"
    t.string "parent_rank"
    t.integer "parent_id"
    t.string "status"
    t.string "author"
    t.string "notes"
  end

  create_table "auto_complete_taxon_concepts_mview", id: false, force: :cascade do |t|
    t.integer "id"
    t.boolean "taxonomy_is_cites_eu"
    t.string "name_status", limit: 255
    t.string "rank_name", limit: 255
    t.text "rank_display_name_en"
    t.text "rank_display_name_es"
    t.text "rank_display_name_fr"
    t.string "rank_order", limit: 255
    t.string "taxonomic_position", limit: 255
    t.boolean "show_in_species_plus_ac"
    t.boolean "show_in_checklist_ac"
    t.boolean "show_in_trade_ac"
    t.boolean "show_in_trade_internal_ac"
    t.text "name_for_matching"
    t.integer "matched_id"
    t.string "matched_name", limit: 255
    t.string "full_name", limit: 255
    t.string "author_year", limit: 255
    t.text "type_of_match"
    t.index ["name_for_matching", "taxonomy_is_cites_eu", "type_of_match", "show_in_checklist_ac"], name: "auto_complete_taxon_concepts__name_for_matching_taxonomy_i_idx4", opclass: { name_for_matching: :text_pattern_ops }
    t.index ["name_for_matching", "taxonomy_is_cites_eu", "type_of_match", "show_in_species_plus_ac"], name: "auto_complete_taxon_concepts__name_for_matching_taxonomy_i_idx3", opclass: { name_for_matching: :text_pattern_ops }
    t.index ["name_for_matching", "taxonomy_is_cites_eu", "type_of_match", "show_in_trade_ac"], name: "auto_complete_taxon_concepts__name_for_matching_taxonomy_i_idx5", opclass: { name_for_matching: :text_pattern_ops }
    t.index ["name_for_matching", "taxonomy_is_cites_eu", "type_of_match", "show_in_trade_internal_ac"], name: "auto_complete_taxon_concepts__name_for_matching_taxonomy_i_idx6", opclass: { name_for_matching: :text_pattern_ops }
  end

  create_table "change_types", id: :serial, force: :cascade do |t|
    t.string "name", limit: 255, null: false
    t.integer "designation_id", null: false
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.text "display_name_en", null: false
    t.text "display_name_es"
    t.text "display_name_fr"
  end

  create_table "child_cites_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.integer "event_id"
    t.string "geo_entity_type", limit: 255
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_cites_listing_chang_excluded_geo_entities_ids_idx1", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_cites_listing_changes_mvi_id_taxon_concept_id_idx1"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_cites_listing_chan_inclusion_taxon_concept_id_idx1"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_cites_listing_cha_is_current_change_type_name_idx1"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_cites_listing_changes_listed_geo_entities_ids_idx1", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_cites_listing_chang_original_taxon_concept_id_idx1"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_cites_listing_ch_show_in_downloads_taxon_conc_idx1"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_cites_listing_ch_show_in_timeline_taxon_conce_idx1"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_cites_listing_ch_taxon_concept_id_original_ta_idx1"
  end

  create_table "child_cms_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.integer "event_id"
    t.string "geo_entity_type", limit: 255
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_cms_listing_changes_excluded_geo_entities_ids_idx1", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_cms_listing_changes_mview_id_taxon_concept_id_idx1"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_cms_listing_change_inclusion_taxon_concept_id_idx1"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_cms_listing_chang_is_current_change_type_name_idx1"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_cms_listing_changes_m_listed_geo_entities_ids_idx1", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_cms_listing_changes_original_taxon_concept_id_idx1"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_cms_listing_chan_show_in_downloads_taxon_conc_idx1"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_cms_listing_chan_show_in_timeline_taxon_conce_idx1"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_cms_listing_chan_taxon_concept_id_original_ta_idx1"
  end

  create_table "child_eu_263_267_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.integer "event_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "geo_entity_type", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_eu_263_267_listing_c_excluded_geo_entities_ids_idx", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_eu_263_267_listing_changes_id_taxon_concept_id_idx"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_eu_263_267_listing__inclusion_taxon_concept_id_idx"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_eu_263_267_listing_is_current_change_type_name_idx"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_eu_263_267_listing_cha_listed_geo_entities_ids_idx", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_eu_263_267_listing_c_original_taxon_concept_id_idx"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_eu_263_267_listi_show_in_downloads_taxon_conce_idx"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_eu_263_267_listi_show_in_timeline_taxon_concep_idx"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_eu_263_267_listi_taxon_concept_id_original_tax_idx"
  end

  create_table "child_eu_263_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.integer "event_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "geo_entity_type", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_eu_263_listing_chang_excluded_geo_entities_ids_idx", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_eu_263_listing_changes_mvi_id_taxon_concept_id_idx"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_eu_263_listing_chan_inclusion_taxon_concept_id_idx"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_eu_263_listing_cha_is_current_change_type_name_idx"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_eu_263_listing_changes_listed_geo_entities_ids_idx", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_eu_263_listing_chang_original_taxon_concept_id_idx"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_eu_263_listing_c_show_in_downloads_taxon_conce_idx"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_eu_263_listing_c_show_in_timeline_taxon_concep_idx"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_eu_263_listing_c_taxon_concept_id_original_tax_idx"
  end

  create_table "child_eu_267_263_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.integer "event_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "geo_entity_type", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_eu_267_263_listing_c_excluded_geo_entities_ids_idx", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_eu_267_263_listing_changes_id_taxon_concept_id_idx"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_eu_267_263_listing__inclusion_taxon_concept_id_idx"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_eu_267_263_listing_is_current_change_type_name_idx"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_eu_267_263_listing_cha_listed_geo_entities_ids_idx", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_eu_267_263_listing_c_original_taxon_concept_id_idx"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_eu_267_263_listi_show_in_downloads_taxon_conce_idx"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_eu_267_263_listi_show_in_timeline_taxon_concep_idx"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_eu_267_263_listi_taxon_concept_id_original_tax_idx"
  end

  create_table "child_eu_268_322_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.integer "event_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "geo_entity_type", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_eu_268_322_listing__excluded_geo_entities_ids_idx1", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_eu_268_322_listing_change_id_taxon_concept_id_idx1"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_eu_268_322_listing_inclusion_taxon_concept_id_idx1"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_eu_268_322_listin_is_current_change_type_name_idx1"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_eu_268_322_listing_ch_listed_geo_entities_ids_idx1", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_eu_268_322_listing__original_taxon_concept_id_idx1"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_eu_268_322_listi_show_in_downloads_taxon_conc_idx1"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_eu_268_322_listi_show_in_timeline_taxon_conce_idx1"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_eu_268_322_listi_taxon_concept_id_original_ta_idx1"
  end

  create_table "child_eu_268_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.integer "event_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "geo_entity_type", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_eu_268_listing_chang_excluded_geo_entities_ids_idx", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_eu_268_listing_changes_mvi_id_taxon_concept_id_idx"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_eu_268_listing_chan_inclusion_taxon_concept_id_idx"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_eu_268_listing_cha_is_current_change_type_name_idx"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_eu_268_listing_changes_listed_geo_entities_ids_idx", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_eu_268_listing_chang_original_taxon_concept_id_idx"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_eu_268_listing_c_show_in_downloads_taxon_conce_idx"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_eu_268_listing_c_show_in_timeline_taxon_concep_idx"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_eu_268_listing_c_taxon_concept_id_original_tax_idx"
  end

  create_table "child_eu_322_339_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.integer "event_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "geo_entity_type", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_eu_322_339_listing_c_excluded_geo_entities_ids_idx", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_eu_322_339_listing_changes_id_taxon_concept_id_idx"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_eu_322_339_listing__inclusion_taxon_concept_id_idx"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_eu_322_339_listing_is_current_change_type_name_idx"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_eu_322_339_listing_cha_listed_geo_entities_ids_idx", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_eu_322_339_listing_c_original_taxon_concept_id_idx"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_eu_322_339_listi_show_in_downloads_taxon_conce_idx"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_eu_322_339_listi_show_in_timeline_taxon_concep_idx"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_eu_322_339_listi_taxon_concept_id_original_tax_idx"
  end

  create_table "child_eu_322_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.integer "event_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "geo_entity_type", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_eu_322_listing_chan_excluded_geo_entities_ids_idx1", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_eu_322_listing_changes_mv_id_taxon_concept_id_idx1"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_eu_322_listing_cha_inclusion_taxon_concept_id_idx1"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_eu_322_listing_ch_is_current_change_type_name_idx1"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_eu_322_listing_change_listed_geo_entities_ids_idx1", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_eu_322_listing_chan_original_taxon_concept_id_idx1"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_eu_322_listing_c_show_in_downloads_taxon_conc_idx1"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_eu_322_listing_c_show_in_timeline_taxon_conce_idx1"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_eu_322_listing_c_taxon_concept_id_original_ta_idx1"
  end

  create_table "child_eu_339_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.integer "event_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "geo_entity_type", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_eu_339_listing_chang_excluded_geo_entities_ids_idx", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_eu_339_listing_changes_mvi_id_taxon_concept_id_idx"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_eu_339_listing_chan_inclusion_taxon_concept_id_idx"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_eu_339_listing_cha_is_current_change_type_name_idx"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_eu_339_listing_changes_listed_geo_entities_ids_idx", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_eu_339_listing_chang_original_taxon_concept_id_idx"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_eu_339_listing_c_show_in_downloads_taxon_conce_idx"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_eu_339_listing_c_show_in_timeline_taxon_concep_idx"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_eu_339_listing_c_taxon_concept_id_original_tax_idx"
  end

  create_table "child_eu_361_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.integer "event_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "geo_entity_type", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_eu_361_listing_chan_excluded_geo_entities_ids_idx1", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_eu_361_listing_changes_mv_id_taxon_concept_id_idx1"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_eu_361_listing_cha_inclusion_taxon_concept_id_idx1"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_eu_361_listing_ch_is_current_change_type_name_idx1"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_eu_361_listing_change_listed_geo_entities_ids_idx1", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_eu_361_listing_chan_original_taxon_concept_id_idx1"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_eu_361_listing_c_show_in_downloads_taxon_conc_idx1"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_eu_361_listing_c_show_in_timeline_taxon_conce_idx1"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_eu_361_listing_c_taxon_concept_id_original_ta_idx1"
  end

  create_table "child_eu_41_55_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.integer "event_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "geo_entity_type", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_eu_41_55_listing_cha_excluded_geo_entities_ids_idx", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_eu_41_55_listing_changes_m_id_taxon_concept_id_idx"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_eu_41_55_listing_ch_inclusion_taxon_concept_id_idx"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_eu_41_55_listing_c_is_current_change_type_name_idx"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_eu_41_55_listing_chang_listed_geo_entities_ids_idx", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_eu_41_55_listing_cha_original_taxon_concept_id_idx"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_eu_41_55_listing_show_in_downloads_taxon_conce_idx"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_eu_41_55_listing_show_in_timeline_taxon_concep_idx"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_eu_41_55_listing_taxon_concept_id_original_tax_idx"
  end

  create_table "child_eu_42_44_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.integer "event_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "geo_entity_type", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_eu_42_44_listing_cha_excluded_geo_entities_ids_idx", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_eu_42_44_listing_changes_m_id_taxon_concept_id_idx"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_eu_42_44_listing_ch_inclusion_taxon_concept_id_idx"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_eu_42_44_listing_c_is_current_change_type_name_idx"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_eu_42_44_listing_chang_listed_geo_entities_ids_idx", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_eu_42_44_listing_cha_original_taxon_concept_id_idx"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_eu_42_44_listing_show_in_downloads_taxon_conce_idx"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_eu_42_44_listing_show_in_timeline_taxon_concep_idx"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_eu_42_44_listing_taxon_concept_id_original_tax_idx"
  end

  create_table "child_eu_42_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.integer "event_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "geo_entity_type", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_eu_42_listing_change_excluded_geo_entities_ids_idx", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_eu_42_listing_changes_mvie_id_taxon_concept_id_idx"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_eu_42_listing_chang_inclusion_taxon_concept_id_idx"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_eu_42_listing_chan_is_current_change_type_name_idx"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_eu_42_listing_changes__listed_geo_entities_ids_idx", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_eu_42_listing_change_original_taxon_concept_id_idx"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_eu_42_listing_ch_show_in_downloads_taxon_conce_idx"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_eu_42_listing_ch_show_in_timeline_taxon_concep_idx"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_eu_42_listing_ch_taxon_concept_id_original_tax_idx"
  end

  create_table "child_eu_47_42_44_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.integer "event_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "geo_entity_type", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_eu_47_42_44_listing__excluded_geo_entities_ids_idx", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_eu_47_42_44_listing_change_id_taxon_concept_id_idx"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_eu_47_42_44_listing_inclusion_taxon_concept_id_idx"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_eu_47_42_44_listin_is_current_change_type_name_idx"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_eu_47_42_44_listing_ch_listed_geo_entities_ids_idx", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_eu_47_42_44_listing__original_taxon_concept_id_idx"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_eu_47_42_44_list_show_in_downloads_taxon_conce_idx"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_eu_47_42_44_list_show_in_timeline_taxon_concep_idx"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_eu_47_42_44_list_taxon_concept_id_original_tax_idx"
  end

  create_table "child_eu_49_66_41_48_55_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.integer "event_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "geo_entity_type", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_eu_49_66_41_48_55_li_excluded_geo_entities_ids_idx", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_eu_49_66_41_48_55_listing__id_taxon_concept_id_idx"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_eu_49_66_41_48_55_l_inclusion_taxon_concept_id_idx"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_eu_49_66_41_48_55__is_current_change_type_name_idx"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_eu_49_66_41_48_55_list_listed_geo_entities_ids_idx", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_eu_49_66_41_48_55_li_original_taxon_concept_id_idx"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_eu_49_66_41_48_5_show_in_downloads_taxon_conce_idx"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_eu_49_66_41_48_5_show_in_timeline_taxon_concep_idx"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_eu_49_66_41_48_5_taxon_concept_id_original_tax_idx"
  end

  create_table "child_eu_54_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.integer "event_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "geo_entity_type", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_eu_54_listing_change_excluded_geo_entities_ids_idx", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_eu_54_listing_changes_mvie_id_taxon_concept_id_idx"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_eu_54_listing_chang_inclusion_taxon_concept_id_idx"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_eu_54_listing_chan_is_current_change_type_name_idx"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_eu_54_listing_changes__listed_geo_entities_ids_idx", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_eu_54_listing_change_original_taxon_concept_id_idx"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_eu_54_listing_ch_show_in_downloads_taxon_conce_idx"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_eu_54_listing_ch_show_in_timeline_taxon_concep_idx"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_eu_54_listing_ch_taxon_concept_id_original_tax_idx"
  end

  create_table "child_eu_55_41_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.integer "event_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "geo_entity_type", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_eu_55_41_listing_ch_excluded_geo_entities_ids_idx1", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_eu_55_41_listing_changes__id_taxon_concept_id_idx1"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_eu_55_41_listing_c_inclusion_taxon_concept_id_idx1"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_eu_55_41_listing__is_current_change_type_name_idx1"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_eu_55_41_listing_chan_listed_geo_entities_ids_idx1", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_eu_55_41_listing_ch_original_taxon_concept_id_idx1"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_eu_55_41_listing_show_in_downloads_taxon_conc_idx1"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_eu_55_41_listing_show_in_timeline_taxon_conce_idx1"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_eu_55_41_listing_taxon_concept_id_original_ta_idx1"
  end

  create_table "child_eu_55_49_66_41_48_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.integer "event_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "geo_entity_type", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_eu_55_49_66_41_48_l_excluded_geo_entities_ids_idx1", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_eu_55_49_66_41_48_listing_id_taxon_concept_id_idx1"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_eu_55_49_66_41_48__inclusion_taxon_concept_id_idx1"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_eu_55_49_66_41_48_is_current_change_type_name_idx1"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_eu_55_49_66_41_48_lis_listed_geo_entities_ids_idx1", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_eu_55_49_66_41_48_l_original_taxon_concept_id_idx1"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_eu_55_49_66_41_4_show_in_downloads_taxon_conc_idx1"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_eu_55_49_66_41_4_show_in_timeline_taxon_conce_idx1"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_eu_55_49_66_41_4_taxon_concept_id_original_ta_idx1"
  end

  create_table "child_eu_55_66_41_48_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.integer "event_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "geo_entity_type", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_eu_55_66_41_48_list_excluded_geo_entities_ids_idx1", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_eu_55_66_41_48_listing_ch_id_taxon_concept_id_idx1"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_eu_55_66_41_48_lis_inclusion_taxon_concept_id_idx1"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_eu_55_66_41_48_li_is_current_change_type_name_idx1"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_eu_55_66_41_48_listin_listed_geo_entities_ids_idx1", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_eu_55_66_41_48_list_original_taxon_concept_id_idx1"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_eu_55_66_41_48_l_show_in_downloads_taxon_conc_idx1"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_eu_55_66_41_48_l_show_in_timeline_taxon_conce_idx1"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_eu_55_66_41_48_l_taxon_concept_id_original_ta_idx1"
  end

  create_table "child_eu_55_66_41_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.integer "event_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "geo_entity_type", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_eu_55_66_41_listing_excluded_geo_entities_ids_idx1", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_eu_55_66_41_listing_chang_id_taxon_concept_id_idx1"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_eu_55_66_41_listin_inclusion_taxon_concept_id_idx1"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_eu_55_66_41_listi_is_current_change_type_name_idx1"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_eu_55_66_41_listing_c_listed_geo_entities_ids_idx1", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_eu_55_66_41_listing_original_taxon_concept_id_idx1"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_eu_55_66_41_list_show_in_downloads_taxon_conc_idx1"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_eu_55_66_41_list_show_in_timeline_taxon_conce_idx1"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_eu_55_66_41_list_taxon_concept_id_original_ta_idx1"
  end

  create_table "child_eu_62_54_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.integer "event_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "geo_entity_type", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_eu_62_54_listing_cha_excluded_geo_entities_ids_idx", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_eu_62_54_listing_changes_m_id_taxon_concept_id_idx"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_eu_62_54_listing_ch_inclusion_taxon_concept_id_idx"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_eu_62_54_listing_c_is_current_change_type_name_idx"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_eu_62_54_listing_chang_listed_geo_entities_ids_idx", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_eu_62_54_listing_cha_original_taxon_concept_id_idx"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_eu_62_54_listing_show_in_downloads_taxon_conce_idx"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_eu_62_54_listing_show_in_timeline_taxon_concep_idx"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_eu_62_54_listing_taxon_concept_id_original_tax_idx"
  end

  create_table "child_eu_65_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.integer "event_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "geo_entity_type", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_eu_65_listing_change_excluded_geo_entities_ids_idx", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_eu_65_listing_changes_mvie_id_taxon_concept_id_idx"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_eu_65_listing_chang_inclusion_taxon_concept_id_idx"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_eu_65_listing_chan_is_current_change_type_name_idx"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_eu_65_listing_changes__listed_geo_entities_ids_idx", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_eu_65_listing_change_original_taxon_concept_id_idx"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_eu_65_listing_ch_show_in_downloads_taxon_conce_idx"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_eu_65_listing_ch_show_in_timeline_taxon_concep_idx"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_eu_65_listing_ch_taxon_concept_id_original_tax_idx"
  end

  create_table "child_eu_66_41_48_55_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.integer "event_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "geo_entity_type", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_eu_66_41_48_55_listi_excluded_geo_entities_ids_idx", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_eu_66_41_48_55_listing_cha_id_taxon_concept_id_idx"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_eu_66_41_48_55_list_inclusion_taxon_concept_id_idx"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_eu_66_41_48_55_lis_is_current_change_type_name_idx"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_eu_66_41_48_55_listing_listed_geo_entities_ids_idx", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_eu_66_41_48_55_listi_original_taxon_concept_id_idx"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_eu_66_41_48_55_l_show_in_downloads_taxon_conce_idx"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_eu_66_41_48_55_l_show_in_timeline_taxon_concep_idx"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_eu_66_41_48_55_l_taxon_concept_id_original_tax_idx"
  end

  create_table "child_eu_66_41_55_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.integer "event_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "geo_entity_type", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_eu_66_41_55_listing__excluded_geo_entities_ids_idx", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_eu_66_41_55_listing_change_id_taxon_concept_id_idx"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_eu_66_41_55_listing_inclusion_taxon_concept_id_idx"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_eu_66_41_55_listin_is_current_change_type_name_idx"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_eu_66_41_55_listing_ch_listed_geo_entities_ids_idx", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_eu_66_41_55_listing__original_taxon_concept_id_idx"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_eu_66_41_55_list_show_in_downloads_taxon_conce_idx"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_eu_66_41_55_list_show_in_timeline_taxon_concep_idx"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_eu_66_41_55_list_taxon_concept_id_original_tax_idx"
  end

  create_table "child_eu_67_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.integer "event_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "geo_entity_type", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_eu_67_listing_change_excluded_geo_entities_ids_idx", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_eu_67_listing_changes_mvie_id_taxon_concept_id_idx"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_eu_67_listing_chang_inclusion_taxon_concept_id_idx"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_eu_67_listing_chan_is_current_change_type_name_idx"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_eu_67_listing_changes__listed_geo_entities_ids_idx", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_eu_67_listing_change_original_taxon_concept_id_idx"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_eu_67_listing_ch_show_in_downloads_taxon_conce_idx"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_eu_67_listing_ch_show_in_timeline_taxon_concep_idx"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_eu_67_listing_ch_taxon_concept_id_original_tax_idx"
  end

  create_table "child_eu_71_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.integer "event_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "geo_entity_type", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_eu_71_listing_change_excluded_geo_entities_ids_idx", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_eu_71_listing_changes_mvie_id_taxon_concept_id_idx"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_eu_71_listing_chang_inclusion_taxon_concept_id_idx"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_eu_71_listing_chan_is_current_change_type_name_idx"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_eu_71_listing_changes__listed_geo_entities_ids_idx", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_eu_71_listing_change_original_taxon_concept_id_idx"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_eu_71_listing_ch_show_in_downloads_taxon_conce_idx"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_eu_71_listing_ch_show_in_timeline_taxon_concep_idx"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_eu_71_listing_ch_taxon_concept_id_original_tax_idx"
  end

  create_table "child_eu_72_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.integer "event_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "geo_entity_type", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_eu_72_listing_change_excluded_geo_entities_ids_idx", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_eu_72_listing_changes_mvie_id_taxon_concept_id_idx"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_eu_72_listing_chang_inclusion_taxon_concept_id_idx"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_eu_72_listing_chan_is_current_change_type_name_idx"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_eu_72_listing_changes__listed_geo_entities_ids_idx", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_eu_72_listing_change_original_taxon_concept_id_idx"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_eu_72_listing_ch_show_in_downloads_taxon_conce_idx"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_eu_72_listing_ch_show_in_timeline_taxon_concep_idx"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_eu_72_listing_ch_taxon_concept_id_original_tax_idx"
  end

  create_table "child_eu_73_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.integer "event_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "geo_entity_type", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_eu_73_listing_change_excluded_geo_entities_ids_idx", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_eu_73_listing_changes_mvie_id_taxon_concept_id_idx"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_eu_73_listing_chang_inclusion_taxon_concept_id_idx"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_eu_73_listing_chan_is_current_change_type_name_idx"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_eu_73_listing_changes__listed_geo_entities_ids_idx", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_eu_73_listing_change_original_taxon_concept_id_idx"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_eu_73_listing_ch_show_in_downloads_taxon_conce_idx"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_eu_73_listing_ch_show_in_timeline_taxon_concep_idx"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_eu_73_listing_ch_taxon_concept_id_original_tax_idx"
  end

  create_table "child_eu_74_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.integer "event_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "geo_entity_type", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_eu_74_listing_change_excluded_geo_entities_ids_idx", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_eu_74_listing_changes_mvie_id_taxon_concept_id_idx"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_eu_74_listing_chang_inclusion_taxon_concept_id_idx"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_eu_74_listing_chan_is_current_change_type_name_idx"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_eu_74_listing_changes__listed_geo_entities_ids_idx", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_eu_74_listing_change_original_taxon_concept_id_idx"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_eu_74_listing_ch_show_in_downloads_taxon_conce_idx"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_eu_74_listing_ch_show_in_timeline_taxon_concep_idx"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_eu_74_listing_ch_taxon_concept_id_original_tax_idx"
  end

  create_table "child_eu_76_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.integer "event_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "geo_entity_type", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_eu_76_listing_change_excluded_geo_entities_ids_idx", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_eu_76_listing_changes_mvie_id_taxon_concept_id_idx"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_eu_76_listing_chang_inclusion_taxon_concept_id_idx"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_eu_76_listing_chan_is_current_change_type_name_idx"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_eu_76_listing_changes__listed_geo_entities_ids_idx", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_eu_76_listing_change_original_taxon_concept_id_idx"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_eu_76_listing_ch_show_in_downloads_taxon_conce_idx"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_eu_76_listing_ch_show_in_timeline_taxon_concep_idx"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_eu_76_listing_ch_taxon_concept_id_original_tax_idx"
  end

  create_table "child_eu_98_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.integer "event_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "geo_entity_type", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_eu_98_listing_change_excluded_geo_entities_ids_idx", using: :gin
    t.index ["id", "taxon_concept_id"], name: "tmp_cascaded_eu_98_listing_changes_mvie_id_taxon_concept_id_idx"
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_eu_98_listing_chang_inclusion_taxon_concept_id_idx"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_eu_98_listing_chan_is_current_change_type_name_idx"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_eu_98_listing_changes__listed_geo_entities_ids_idx", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_eu_98_listing_change_original_taxon_concept_id_idx"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_eu_98_listing_ch_show_in_downloads_taxon_conce_idx"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_eu_98_listing_ch_show_in_timeline_taxon_concep_idx"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_eu_98_listing_ch_taxon_concept_id_original_tax_idx"
  end

  create_table "child_eu_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.integer "event_id"
    t.string "geo_entity_type", limit: 255
    t.index ["excluded_geo_entities_ids"], name: "tmp_cascaded_eu_listing_changes__excluded_geo_entities_ids_idx1", using: :gin
    t.index ["inclusion_taxon_concept_id"], name: "tmp_cascaded_eu_listing_changes_inclusion_taxon_concept_id_idx1"
    t.index ["is_current", "change_type_name"], name: "tmp_cascaded_eu_listing_change_is_current_change_type_name_idx1"
    t.index ["listed_geo_entities_ids"], name: "tmp_cascaded_eu_listing_changes_mv_listed_geo_entities_ids_idx1", using: :gin
    t.index ["original_taxon_concept_id"], name: "tmp_cascaded_eu_listing_changes__original_taxon_concept_id_idx1"
    t.index ["show_in_downloads", "taxon_concept_id"], name: "tmp_cascaded_eu_listing_chang_show_in_downloads_taxon_conc_idx1"
    t.index ["show_in_timeline", "taxon_concept_id"], name: "tmp_cascaded_eu_listing_chang_show_in_timeline_taxon_conce_idx1"
    t.index ["taxon_concept_id", "original_taxon_concept_id", "change_type_id", "effective_at"], name: "tmp_cascaded_eu_listing_chang_taxon_concept_id_original_ta_idx1"
  end

  create_table "cites_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.integer "event_id"
    t.string "geo_entity_type", limit: 255
  end

  create_table "cites_processes", id: :serial, force: :cascade do |t|
    t.string "resolution", limit: 255
    t.integer "taxon_concept_id"
    t.integer "geo_entity_id"
    t.integer "start_event_id"
    t.datetime "start_date", precision: nil
    t.string "status", limit: 255
    t.text "document"
    t.string "type", limit: 255
    t.integer "created_by_id"
    t.integer "updated_by_id"
    t.text "notes"
    t.integer "case_id"
    t.datetime "created_at", precision: nil
    t.datetime "updated_at", precision: nil
    t.text "document_title"
    t.index ["taxon_concept_id"], name: "index_cites_processes_on_taxon_concept_id"
  end

  create_table "cites_species_listing_mview", id: false, force: :cascade do |t|
    t.integer "id"
    t.string "taxonomic_position", limit: 255
    t.integer "kingdom_id"
    t.integer "phylum_id"
    t.integer "class_id"
    t.integer "order_id"
    t.integer "family_id"
    t.integer "genus_id"
    t.string "kingdom_name", limit: 255
    t.string "phylum_name", limit: 255
    t.string "class_name", limit: 255
    t.string "order_name", limit: 255
    t.string "family_name", limit: 255
    t.string "genus_name", limit: 255
    t.string "species_name", limit: 255
    t.string "subspecies_name", limit: 255
    t.string "full_name", limit: 255
    t.string "author_year", limit: 255
    t.string "rank_name", limit: 255
    t.boolean "cites_listed"
    t.boolean "cites_nc"
    t.string "cites_listing_original"
    t.text "original_taxon_concept_party_iso_code"
    t.text "original_taxon_concept_full_name_with_spp"
    t.text "original_taxon_concept_full_note_en"
    t.text "original_taxon_concept_hash_full_note_en"
    t.integer "countries_ids_ary", array: true
    t.text "all_distribution"
    t.text "all_distribution_iso_codes"
    t.text "native_distribution"
    t.text "introduced_distribution"
    t.text "introduced_uncertain_distribution"
    t.text "reintroduced_distribution"
    t.text "extinct_distribution"
    t.text "extinct_uncertain_distribution"
    t.text "uncertain_distribution"
    t.index ["countries_ids_ary"], name: "cites_species_listing_mview_tmp_countries_ids_ary_idx1", using: :gin
  end

  create_table "cites_suspension_confirmations", id: :serial, force: :cascade do |t|
    t.integer "cites_suspension_id", null: false
    t.integer "cites_suspension_notification_id", null: false
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
  end

  create_table "cms_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.integer "event_id"
    t.string "geo_entity_type", limit: 255
  end

  create_table "cms_mappings", id: :serial, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.string "cms_uuid", limit: 255
    t.string "cms_taxon_name", limit: 255
    t.string "cms_author", limit: 255
    t.hstore "details"
    t.integer "accepted_name_id"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
  end

  create_table "cms_species_listing_mview", id: false, force: :cascade do |t|
    t.integer "id"
    t.string "taxonomic_position", limit: 255
    t.integer "kingdom_id"
    t.integer "phylum_id"
    t.integer "class_id"
    t.integer "order_id"
    t.integer "family_id"
    t.integer "genus_id"
    t.string "phylum_name", limit: 255
    t.string "class_name", limit: 255
    t.string "order_name", limit: 255
    t.string "family_name", limit: 255
    t.string "genus_name", limit: 255
    t.string "full_name", limit: 255
    t.string "author_year", limit: 255
    t.string "rank_name", limit: 255
    t.string "agreement"
    t.boolean "cms_listed"
    t.string "cms_listing_original"
    t.text "original_taxon_concept_full_name_with_spp"
    t.text "original_taxon_concept_effective_at"
    t.text "original_taxon_concept_full_note_en"
    t.integer "countries_ids_ary", array: true
    t.text "all_distribution"
    t.text "all_distribution_iso_codes"
    t.text "native_distribution"
    t.text "introduced_distribution"
    t.text "introduced_uncertain_distribution"
    t.text "reintroduced_distribution"
    t.text "extinct_distribution"
    t.text "extinct_uncertain_distribution"
    t.text "uncertain_distribution"
    t.index ["countries_ids_ary"], name: "cms_species_listing_mview_tmp_countries_ids_ary_idx1", using: :gin
  end

  create_table "comments", id: :serial, force: :cascade do |t|
    t.integer "commentable_id"
    t.string "commentable_type", limit: 255
    t.string "comment_type", limit: 255
    t.text "note"
    t.integer "created_by_id"
    t.integer "updated_by_id"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.index ["commentable_id", "commentable_type", "comment_type"], name: "index_comments_on_commentable_and_comment_type"
  end

  create_table "common_name_import", id: false, force: :cascade do |t|
    t.string "name"
    t.string "language"
    t.integer "legacy_id"
    t.string "rank"
    t.string "designation"
    t.string "reference_id"
    t.index ["name", "language", "rank"], name: "common_name_import_name_language_rank_idx"
  end

  create_table "common_names", id: :serial, force: :cascade do |t|
    t.string "name", limit: 255, null: false
    t.integer "language_id", null: false
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.integer "created_by_id"
    t.integer "updated_by_id"
  end

  create_table "designation_geo_entities", id: :serial, force: :cascade do |t|
    t.integer "designation_id", null: false
    t.integer "geo_entity_id", null: false
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
  end

  create_table "designations", id: :serial, force: :cascade do |t|
    t.string "name", limit: 255, null: false
    t.integer "taxonomy_id", default: 1, null: false
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
  end

  create_table "distribution_import", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.string "rank"
    t.string "geo_entity_type"
    t.string "iso2"
    t.integer "reference_id"
    t.string "designation"
  end

  create_table "distribution_references", id: :serial, force: :cascade do |t|
    t.integer "distribution_id", null: false
    t.integer "reference_id", null: false
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["distribution_id", "reference_id"], name: "index_distribution_refs_on_distribution_id_reference_id", unique: true
    t.index ["distribution_id"], name: "index_distribution_references_on_distribution_id"
    t.index ["reference_id"], name: "index_distribution_references_on_reference_id"
  end

  create_table "distribution_tags_import", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.string "rank"
    t.string "geo_entity_type"
    t.string "iso_code2"
    t.string "designation"
    t.string "tags"
  end

  create_table "distributions", id: :serial, force: :cascade do |t|
    t.integer "taxon_concept_id", null: false
    t.integer "geo_entity_id", null: false
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.integer "created_by_id"
    t.integer "updated_by_id"
    t.text "internal_notes"
    t.index ["taxon_concept_id"], name: "index_distributions_on_taxon_concept_id"
  end

  create_table "document_citation_geo_entities", id: :serial, force: :cascade do |t|
    t.integer "document_citation_id"
    t.integer "geo_entity_id"
    t.integer "created_by_id"
    t.integer "updated_by_id"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.index ["geo_entity_id", "document_citation_id"], name: "index_citation_geo_entities_on_geo_entity_id_citation_id", unique: true
  end

  create_table "document_citation_taxon_concepts", id: :serial, force: :cascade do |t|
    t.integer "document_citation_id"
    t.integer "taxon_concept_id"
    t.integer "created_by_id"
    t.integer "updated_by_id"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.index ["taxon_concept_id", "document_citation_id"], name: "index_citation_taxon_concepts_on_taxon_concept_id_citation_id", unique: true
  end

  create_table "document_citations", id: :serial, force: :cascade do |t|
    t.integer "document_id"
    t.integer "created_by_id"
    t.integer "updated_by_id"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.integer "elib_legacy_id"
    t.index ["document_id"], name: "index_document_citations_on_document_id"
  end

  create_table "document_tags", id: :serial, force: :cascade do |t|
    t.text "name", null: false
    t.string "type", limit: 255
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
  end

  create_table "document_tags_documents", id: false, force: :cascade do |t|
    t.integer "document_id"
    t.integer "document_tag_id"
    t.index ["document_id", "document_tag_id"], name: "index_document_tags_documents_composite"
    t.index ["document_tag_id"], name: "index_document_tags_documents_on_document_tag_id"
  end

  create_table "documents", id: :serial, force: :cascade do |t|
    t.text "title", null: false
    t.text "filename", null: false
    t.date "date", null: false
    t.string "type", limit: 255, null: false
    t.boolean "is_public", default: false, null: false
    t.integer "event_id"
    t.integer "language_id"
    t.integer "elib_legacy_id"
    t.integer "created_by_id"
    t.integer "updated_by_id"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.integer "sort_index"
    t.integer "primary_language_document_id"
    t.text "elib_legacy_file_name"
    t.integer "original_id"
    t.integer "discussion_id"
    t.integer "discussion_sort_index"
    t.integer "designation_id"
    t.text "manual_id"
    t.integer "volume"
    t.boolean "general_subtype"
    t.index "to_tsvector('simple'::regconfig, COALESCE(title, ''::text))", name: "index_documents_on_title_to_ts_vector", using: :gin
    t.index ["event_id"], name: "index_documents_on_event_id"
    t.index ["language_id", "primary_language_document_id"], name: "index_documents_on_language_id_and_primary_language_document_id", unique: true
  end

  create_table "downloads", id: :serial, force: :cascade do |t|
    t.string "doc_type", limit: 255
    t.string "format", limit: 255
    t.string "status", limit: 255, default: "working"
    t.string "path", limit: 255
    t.string "filename", limit: 255
    t.string "display_name", limit: 255
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
  end

  create_table "elibrary_citations_manual_vol1_import", id: false, force: :cascade do |t|
    t.text "splus_taxon_concept_id"
    t.text "manual_id"
  end

  create_table "elibrary_citations_manual_vol2_import", id: false, force: :cascade do |t|
    t.text "splus_taxon_concept_id"
    t.text "manual_id"
  end

  create_table "elibrary_citations_manual_vol3_import", id: false, force: :cascade do |t|
    t.text "splus_taxon_concept_id"
    t.text "manual_id"
  end

  create_table "elibrary_citations_manual_vol4_import", id: false, force: :cascade do |t|
    t.text "splus_taxon_concept_id"
    t.text "manual_id"
  end

  create_table "elibrary_citations_manual_vol5_import", id: false, force: :cascade do |t|
    t.text "splus_taxon_concept_id"
    t.text "manual_id"
  end

  create_table "elibrary_citations_manual_vol6_import", id: false, force: :cascade do |t|
    t.text "splus_taxon_concept_id"
    t.text "manual_id"
  end

  create_table "elibrary_citations_vc_link_import", id: false, force: :cascade do |t|
    t.text "splus_taxon_concept_id"
    t.text "manual_id"
  end

  create_table "elibrary_citations_vc_pdf_feb2023_import", id: false, force: :cascade do |t|
    t.text "splus_taxon_concept_id"
    t.text "manual_id"
  end

  create_table "elibrary_citations_vc_pdf_import", id: false, force: :cascade do |t|
    t.text "splus_taxon_concept_id"
    t.text "manual_id"
  end

  create_table "elibrary_documents_manual_vol1_import", id: false, force: :cascade do |t|
    t.text "documentdate"
    t.text "manual_id"
    t.text "documenttitle"
    t.text "languagename"
    t.text "master_document_id"
    t.integer "volume"
    t.text "type"
    t.text "generalsubtype"
    t.text "documentfilename"
  end

  create_table "elibrary_documents_manual_vol2_import", id: false, force: :cascade do |t|
    t.text "documentdate"
    t.text "manual_id"
    t.text "documenttitle"
    t.text "languagename"
    t.text "master_document_id"
    t.integer "volume"
    t.text "type"
    t.text "generalsubtype"
    t.text "documentfilename"
  end

  create_table "elibrary_documents_manual_vol3_import", id: false, force: :cascade do |t|
    t.text "documentdate"
    t.text "manual_id"
    t.text "documenttitle"
    t.text "languagename"
    t.text "master_document_id"
    t.integer "volume"
    t.text "type"
    t.text "generalsubtype"
    t.text "documentfilename"
  end

  create_table "elibrary_documents_manual_vol4_import", id: false, force: :cascade do |t|
    t.text "documentdate"
    t.text "manual_id"
    t.text "documenttitle"
    t.text "languagename"
    t.text "master_document_id"
    t.integer "volume"
    t.text "type"
    t.text "generalsubtype"
    t.text "documentfilename"
  end

  create_table "elibrary_documents_manual_vol5_import", id: false, force: :cascade do |t|
    t.text "documentdate"
    t.text "manual_id"
    t.text "documenttitle"
    t.text "languagename"
    t.text "master_document_id"
    t.integer "volume"
    t.text "type"
    t.text "generalsubtype"
    t.text "documentfilename"
  end

  create_table "elibrary_documents_manual_vol6_import", id: false, force: :cascade do |t|
    t.text "documentdate"
    t.text "manual_id"
    t.text "documenttitle"
    t.text "languagename"
    t.text "master_document_id"
    t.integer "volume"
    t.text "type"
    t.text "generalsubtype"
    t.text "documentfilename"
  end

  create_table "elibrary_documents_vc_link_import", id: false, force: :cascade do |t|
    t.text "documentdate"
    t.text "manual_id"
    t.text "documenttitle"
    t.text "languagename"
    t.text "master_document_id"
    t.integer "volume"
    t.text "type"
    t.text "generalsubtype"
    t.text "documentfilename"
  end

  create_table "elibrary_documents_vc_pdf_feb2023_import", id: false, force: :cascade do |t|
    t.text "documentdate"
    t.text "manual_id"
    t.text "documenttitle"
    t.text "languagename"
    t.text "master_document_id"
    t.integer "volume"
    t.text "type"
    t.text "generalsubtype"
    t.text "documentfilename"
  end

  create_table "elibrary_documents_vc_pdf_import", id: false, force: :cascade do |t|
    t.text "documentdate"
    t.text "manual_id"
    t.text "documenttitle"
    t.text "languagename"
    t.text "master_document_id"
    t.integer "volume"
    t.text "type"
    t.text "generalsubtype"
    t.text "documentfilename"
  end

  create_table "eu_country_dates", id: :serial, force: :cascade do |t|
    t.integer "geo_entity_id"
    t.integer "eu_accession_year"
    t.integer "eu_exit_year"
    t.datetime "created_at", precision: nil
    t.datetime "updated_at", precision: nil
  end

  create_table "eu_decision_confirmations", id: :serial, force: :cascade do |t|
    t.integer "eu_decision_id"
    t.integer "event_id"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
  end

  create_table "eu_decision_types", id: :serial, force: :cascade do |t|
    t.string "name", limit: 255
    t.string "tooltip", limit: 255
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.string "decision_type", limit: 255
  end

  create_table "eu_decisions", id: :serial, force: :cascade do |t|
    t.boolean "is_current", default: true
    t.text "notes"
    t.text "internal_notes"
    t.integer "taxon_concept_id"
    t.integer "geo_entity_id", null: false
    t.datetime "start_date", precision: nil
    t.integer "start_event_id"
    t.datetime "end_date", precision: nil
    t.integer "end_event_id"
    t.string "type", limit: 255
    t.boolean "conditions_apply"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.integer "eu_decision_type_id"
    t.integer "term_id"
    t.integer "source_id"
    t.integer "created_by_id"
    t.integer "updated_by_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_es"
    t.text "nomenclature_note_fr"
    t.integer "srg_history_id"
    t.integer "document_id"
    t.index ["document_id"], name: "index_eu_decisions_on_document_id"
  end

  create_table "eu_decisions_with_missing_source", id: false, force: :cascade do |t|
    t.text "full_name"
    t.text "rank_name"
    t.text "start_date"
    t.text "party_name"
    t.text "decision_type"
    t.text "source_code"
    t.text "term_code"
    t.text "notes"
  end

  create_table "eu_listing_changes_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "id"
    t.integer "original_taxon_concept_id"
    t.datetime "effective_at", precision: nil
    t.integer "species_listing_id"
    t.string "species_listing_name", limit: 255
    t.integer "change_type_id"
    t.string "change_type_name", limit: 255
    t.integer "designation_id"
    t.string "designation_name", limit: 255
    t.integer "parent_id"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_fr"
    t.text "nomenclature_note_es"
    t.integer "party_id"
    t.string "party_iso_code", limit: 255
    t.string "party_full_name_en", limit: 255
    t.string "party_full_name_es", limit: 255
    t.string "party_full_name_fr", limit: 255
    t.string "ann_symbol", limit: 255
    t.text "full_note_en"
    t.text "full_note_es"
    t.text "full_note_fr"
    t.text "short_note_en"
    t.text "short_note_es"
    t.text "short_note_fr"
    t.boolean "display_in_index"
    t.boolean "display_in_footnote"
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.text "hash_full_note_en"
    t.text "hash_full_note_es"
    t.text "hash_full_note_fr"
    t.integer "inclusion_taxon_concept_id"
    t.text "inherited_short_note_en"
    t.text "inherited_full_note_en"
    t.text "inherited_short_note_es"
    t.text "inherited_full_note_es"
    t.text "inherited_short_note_fr"
    t.text "inherited_full_note_fr"
    t.text "auto_note_en"
    t.text "auto_note_es"
    t.text "auto_note_fr"
    t.boolean "is_current"
    t.boolean "explicit_change"
    t.datetime "updated_at", precision: nil
    t.boolean "show_in_history"
    t.boolean "show_in_downloads"
    t.boolean "show_in_timeline"
    t.integer "listed_geo_entities_ids", array: true
    t.integer "excluded_geo_entities_ids", array: true
    t.integer "excluded_taxon_concept_ids", array: true
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.integer "event_id"
    t.string "geo_entity_type", limit: 255
  end

  create_table "eu_opinions_import", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.string "start_event_name"
    t.string "country_name"
    t.date "start_date"
    t.string "opinion_name"
    t.string "term_code"
    t.string "source_code"
    t.boolean "is_current"
    t.string "notes"
    t.string "internal_notes"
    t.string "nomenclature_note_en"
    t.string "nomenclature_note_es"
    t.string "nomenclature_note_fr"
  end

  create_table "eu_opinions_to_not_current", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.text "start_regulation_name"
    t.text "country_name"
    t.text "start_date"
    t.text "opinion_name"
    t.text "term_code"
    t.text "source_code"
    t.text "is_current"
  end

  create_table "eu_species_listing_mview", id: false, force: :cascade do |t|
    t.integer "id"
    t.string "taxonomic_position", limit: 255
    t.integer "kingdom_id"
    t.integer "phylum_id"
    t.integer "class_id"
    t.integer "order_id"
    t.integer "family_id"
    t.integer "genus_id"
    t.string "kingdom_name", limit: 255
    t.string "phylum_name", limit: 255
    t.string "class_name", limit: 255
    t.string "order_name", limit: 255
    t.string "family_name", limit: 255
    t.string "genus_name", limit: 255
    t.string "species_name", limit: 255
    t.string "subspecies_name", limit: 255
    t.string "full_name", limit: 255
    t.string "author_year", limit: 255
    t.string "rank_name", limit: 255
    t.boolean "eu_listed"
    t.string "eu_listing_original"
    t.string "cites_listing_original"
    t.text "original_taxon_concept_party_iso_code"
    t.text "original_taxon_concept_full_name_with_spp"
    t.text "original_taxon_concept_full_note_en"
    t.text "original_taxon_concept_hash_full_note_en"
    t.integer "countries_ids_ary", array: true
    t.text "all_distribution"
    t.text "all_distribution_iso_codes"
    t.text "native_distribution"
    t.text "introduced_distribution"
    t.text "introduced_uncertain_distribution"
    t.text "reintroduced_distribution"
    t.text "extinct_distribution"
    t.text "extinct_uncertain_distribution"
    t.text "uncertain_distribution"
    t.index ["countries_ids_ary"], name: "eu_species_listing_mview_tmp_countries_ids_ary_idx1", using: :gin
  end

  create_table "events", id: :serial, force: :cascade do |t|
    t.string "name", limit: 255
    t.integer "designation_id"
    t.text "description"
    t.text "url"
    t.boolean "is_current", default: false, null: false
    t.string "type", limit: 255, default: "Event", null: false
    t.datetime "effective_at", precision: nil
    t.datetime "published_at", precision: nil
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.integer "legacy_id"
    t.datetime "end_date", precision: nil
    t.string "subtype", limit: 255
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.text "extended_description"
    t.text "multilingual_url"
    t.integer "elib_legacy_id"
    t.text "private_url"
  end

  create_table "geo_entities", id: :serial, force: :cascade do |t|
    t.integer "geo_entity_type_id", null: false
    t.string "name_en", limit: 255, null: false
    t.string "name_fr", limit: 255
    t.string "name_es", limit: 255
    t.string "long_name", limit: 255
    t.string "iso_code2", limit: 255
    t.string "iso_code3", limit: 255
    t.integer "legacy_id"
    t.string "legacy_type", limit: 255
    t.boolean "is_current", default: true
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
  end

  create_table "geo_entity_types", id: :serial, force: :cascade do |t|
    t.string "name", limit: 255, null: false
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
  end

  create_table "geo_relationship_types", id: :serial, force: :cascade do |t|
    t.string "name", limit: 255, null: false
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
  end

  create_table "geo_relationships", id: :serial, force: :cascade do |t|
    t.integer "geo_entity_id", null: false
    t.integer "other_geo_entity_id", null: false
    t.integer "geo_relationship_type_id", null: false
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
  end

  create_table "instruments", id: :serial, force: :cascade do |t|
    t.integer "designation_id"
    t.string "name", limit: 255
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
  end

  create_table "iucn_mappings", id: :serial, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "iucn_taxon_id"
    t.string "iucn_taxon_name", limit: 255
    t.string "iucn_author", limit: 255
    t.string "iucn_category", limit: 255
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.hstore "details"
    t.integer "accepted_name_id"
  end

  create_table "languages", id: :serial, force: :cascade do |t|
    t.string "name_en", limit: 255, null: false
    t.string "name_fr", limit: 255
    t.string "name_es", limit: 255
    t.string "iso_code1", limit: 255
    t.string "iso_code3", limit: 255, null: false
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
  end

  create_table "listing_changes", id: :serial, force: :cascade do |t|
    t.integer "taxon_concept_id", null: false
    t.integer "species_listing_id"
    t.integer "change_type_id", null: false
    t.integer "annotation_id"
    t.integer "hash_annotation_id"
    t.datetime "effective_at", precision: nil, default: "2012-09-21 07:32:20", null: false
    t.boolean "is_current", default: false, null: false
    t.integer "parent_id"
    t.integer "inclusion_taxon_concept_id"
    t.integer "event_id"
    t.integer "original_id"
    t.boolean "explicit_change", default: true
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.integer "import_row_id"
    t.integer "created_by_id"
    t.integer "updated_by_id"
    t.text "internal_notes"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_es"
    t.text "nomenclature_note_fr"
    t.index ["annotation_id"], name: "index_listing_changes_on_annotation_id"
    t.index ["event_id"], name: "index_listing_changes_on_event_id"
    t.index ["hash_annotation_id"], name: "index_listing_changes_on_hash_annotation_id"
    t.index ["inclusion_taxon_concept_id"], name: "index_listing_changes_on_inclusion_taxon_concept_id"
    t.index ["parent_id"], name: "index_listing_changes_on_parent_id"
    t.index ["taxon_concept_id"], name: "index_listing_changes_on_taxon_concept_id"
  end

  create_table "listing_distributions", id: :serial, force: :cascade do |t|
    t.integer "listing_change_id", null: false
    t.integer "geo_entity_id", null: false
    t.boolean "is_party", default: true, null: false
    t.integer "original_id"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.integer "created_by_id"
    t.integer "updated_by_id"
    t.index ["geo_entity_id"], name: "index_listing_distributions_on_geo_entity_id"
    t.index ["listing_change_id"], name: "index_listing_distributions_on_listing_change_id"
  end

  create_table "nomenclature_change_inputs", id: :serial, force: :cascade do |t|
    t.integer "nomenclature_change_id", null: false
    t.integer "taxon_concept_id", null: false
    t.text "note_en", default: ""
    t.integer "created_by_id", null: false
    t.integer "updated_by_id", null: false
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.text "internal_note", default: ""
    t.text "note_es", default: ""
    t.text "note_fr", default: ""
  end

  create_table "nomenclature_change_output_reassignments", id: :serial, force: :cascade do |t|
    t.integer "nomenclature_change_output_id", null: false
    t.string "type", limit: 255, null: false
    t.string "reassignable_type", limit: 255
    t.integer "reassignable_id"
    t.text "note_en"
    t.integer "created_by_id", null: false
    t.integer "updated_by_id", null: false
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.text "note_es"
    t.text "note_fr"
    t.text "internal_note"
  end

  create_table "nomenclature_change_outputs", id: :serial, force: :cascade do |t|
    t.integer "nomenclature_change_id", null: false
    t.integer "taxon_concept_id"
    t.integer "new_taxon_concept_id"
    t.integer "new_parent_id"
    t.integer "new_rank_id"
    t.string "new_scientific_name", limit: 255
    t.string "new_author_year", limit: 255
    t.string "new_name_status", limit: 255
    t.text "note_en", default: ""
    t.integer "created_by_id", null: false
    t.integer "updated_by_id", null: false
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.text "internal_note", default: ""
    t.boolean "is_primary_output", default: true
    t.integer "parent_id"
    t.integer "rank_id"
    t.string "scientific_name", limit: 255
    t.string "author_year", limit: 255
    t.string "name_status", limit: 255
    t.text "note_es", default: ""
    t.text "note_fr", default: ""
    t.integer "taxonomy_id"
    t.text "tag_list", default: "--- []\n"
  end

  create_table "nomenclature_change_reassignment_targets", id: :serial, force: :cascade do |t|
    t.integer "nomenclature_change_reassignment_id", null: false
    t.integer "nomenclature_change_output_id", null: false
    t.integer "created_by_id", null: false
    t.integer "updated_by_id", null: false
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
  end

  create_table "nomenclature_change_reassignments", id: :serial, force: :cascade do |t|
    t.integer "nomenclature_change_input_id", null: false
    t.string "type", limit: 255, null: false
    t.string "reassignable_type", limit: 255
    t.integer "reassignable_id"
    t.text "note_en"
    t.integer "created_by_id", null: false
    t.integer "updated_by_id", null: false
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.text "note_es"
    t.text "note_fr"
    t.text "internal_note"
  end

  create_table "nomenclature_changes", id: :serial, force: :cascade do |t|
    t.integer "event_id"
    t.string "type", limit: 255, null: false
    t.string "status", limit: 255, null: false
    t.integer "created_by_id", null: false
    t.integer "updated_by_id", null: false
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
  end

  create_table "preset_tags", id: :serial, force: :cascade do |t|
    t.string "name", limit: 255
    t.string "model", limit: 255
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
  end

  create_table "proposal_details", id: :serial, force: :cascade do |t|
    t.integer "document_id"
    t.text "proposal_nature"
    t.integer "proposal_outcome_id"
    t.text "representation"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.text "proposal_number"
    t.index ["proposal_outcome_id"], name: "index_proposal_details_on_proposal_outcome_id"
  end

  create_table "ranks", id: :serial, force: :cascade do |t|
    t.string "name", limit: 255, null: false
    t.string "taxonomic_position", limit: 255, default: "0", null: false
    t.boolean "fixed_order", default: false, null: false
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.text "display_name_en", null: false
    t.text "display_name_es"
    t.text "display_name_fr"
  end

  create_table "references", id: :serial, force: :cascade do |t|
    t.text "title"
    t.string "year", limit: 255
    t.string "author", limit: 255
    t.text "citation", null: false
    t.text "publisher"
    t.integer "legacy_id"
    t.string "legacy_type", limit: 255
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.integer "updated_by_id"
    t.integer "created_by_id"
  end

  create_table "references_legacy_id_mapping", id: :serial, force: :cascade do |t|
    t.integer "legacy_id", null: false
    t.text "legacy_type", null: false
    t.integer "alias_legacy_id", null: false
  end

  create_table "review_details", id: :serial, force: :cascade do |t|
    t.integer "document_id"
    t.integer "review_phase_id"
    t.integer "process_stage_id"
    t.text "recommended_category"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.index ["process_stage_id"], name: "index_review_details_on_process_stage_id"
    t.index ["review_phase_id"], name: "index_review_details_on_review_phase_id"
  end

  create_table "species_import", id: false, force: :cascade do |t|
    t.string "name"
    t.string "rank"
    t.integer "legacy_id"
    t.string "parent_rank"
    t.integer "parent_id"
    t.string "status"
    t.string "author"
    t.string "notes"
    t.string "taxonomy"
    t.index ["name"], name: "species_import_name"
  end

  create_table "species_kew_id_import", id: false, force: :cascade do |t|
    t.string "name"
    t.string "rank"
    t.integer "kew_id"
    t.string "parent_rank"
    t.integer "parent_kew_id"
    t.string "status"
    t.string "author"
    t.string "notes"
    t.string "taxonomy"
  end

  create_table "species_listings", id: :serial, force: :cascade do |t|
    t.integer "designation_id", null: false
    t.string "name", limit: 255, null: false
    t.string "abbreviation", limit: 255
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
  end

  create_table "srg_histories", id: :serial, force: :cascade do |t|
    t.string "name", limit: 255
    t.string "tooltip", limit: 255
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
  end

  create_table "synonym_import", id: false, force: :cascade do |t|
    t.string "name"
    t.string "rank"
    t.integer "legacy_id"
    t.string "parent_rank"
    t.integer "parent_id"
    t.string "status"
    t.string "author"
    t.string "notes"
    t.string "taxonomy"
    t.string "accepted_rank"
    t.integer "accepted_id"
    t.index ["name"], name: "synonym_import_name"
  end

  create_table "synonym_kew_id_import", id: false, force: :cascade do |t|
    t.string "name"
    t.string "rank"
    t.integer "kew_id"
    t.string "parent_rank"
    t.integer "parent_kew_id"
    t.string "status"
    t.string "author"
    t.string "notes"
    t.string "taxonomy"
    t.string "accepted_rank"
    t.integer "accepted_kew_id"
  end

  create_table "taggings", id: :serial, force: :cascade do |t|
    t.integer "tag_id"
    t.integer "taggable_id"
    t.string "taggable_type", limit: 255
    t.integer "tagger_id"
    t.string "tagger_type", limit: 255
    t.string "context", limit: 128
    t.datetime "created_at", precision: nil
    t.index ["tag_id"], name: "index_taggings_on_tag_id"
    t.index ["taggable_id", "taggable_type", "context"], name: "index_taggings_on_taggable_id_and_taggable_type_and_context"
  end

  create_table "tags", id: :serial, force: :cascade do |t|
    t.string "name", limit: 255
    t.integer "taggings_count", default: 0
  end

  create_table "taxon_commons", id: :serial, force: :cascade do |t|
    t.integer "taxon_concept_id", null: false
    t.integer "common_name_id", null: false
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.integer "created_by_id"
    t.integer "updated_by_id"
  end

  create_table "taxon_concept_references", id: :serial, force: :cascade do |t|
    t.integer "taxon_concept_id", null: false
    t.integer "reference_id", null: false
    t.boolean "is_standard", default: false, null: false
    t.boolean "is_cascaded", default: false, null: false
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.integer "excluded_taxon_concepts_ids", array: true
    t.integer "created_by_id"
    t.integer "updated_by_id"
    t.index ["taxon_concept_id", "reference_id", "is_standard", "is_cascaded"], name: "index_taxon_concept_references_on_tc_id_is_std_is_cascaded", unique: true
  end

  create_table "taxon_concept_versions", id: :serial, force: :cascade do |t|
    t.string "item_type", limit: 255, null: false
    t.integer "item_id", null: false
    t.string "event", limit: 255, null: false
    t.string "whodunnit", limit: 255
    t.text "object_yml"
    t.datetime "created_at", precision: nil
    t.integer "taxon_concept_id", null: false
    t.text "taxonomy_name", null: false
    t.text "full_name", null: false
    t.text "author_year"
    t.text "name_status", null: false
    t.text "rank_name", null: false
    t.jsonb "object", default: {}
    t.index ["event"], name: "index_taxon_concept_versions_on_event"
    t.index ["full_name", "created_at"], name: "index_taxon_concept_versions_on_full_name_and_created_at"
    t.index ["taxonomy_name", "created_at"], name: "index_taxon_concept_versions_on_taxonomy_name_and_created_at"
  end

  create_table "taxon_concepts", id: :serial, force: :cascade do |t|
    t.integer "taxonomy_id", default: 1, null: false
    t.integer "parent_id"
    t.integer "rank_id", null: false
    t.integer "taxon_name_id", null: false
    t.string "author_year", limit: 255
    t.integer "legacy_id"
    t.string "legacy_type", limit: 255
    t.hstore "data"
    t.hstore "listing"
    t.text "notes"
    t.string "taxonomic_position", limit: 255, default: "0", null: false
    t.string "full_name", limit: 255
    t.string "name_status", limit: 255, default: "A", null: false
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.datetime "touched_at", precision: nil
    t.string "legacy_trade_code", limit: 255
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.datetime "dependents_updated_at", precision: nil
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_es"
    t.text "nomenclature_note_fr"
    t.text "internal_nomenclature_note"
    t.integer "dependents_updated_by_id"
    t.integer "kew_id"
    t.index "upper((full_name)::text) text_pattern_ops", name: "index_taxon_concepts_on_full_name"
    t.index ["created_by_id", "updated_by_id"], name: "index_taxon_concepts_on_created_by_id_and_updated_by_id"
    t.index ["legacy_trade_code"], name: "index_taxon_concepts_on_legacy_trade_code"
    t.index ["name_status"], name: "index_taxon_concepts_on_name_status"
    t.index ["parent_id"], name: "index_taxon_concepts_on_parent_id"
    t.index ["taxonomy_id"], name: "index_taxon_concepts_on_taxonomy_id"
  end

  create_table "taxon_concepts_and_terms_pairs_import", id: false, force: :cascade do |t|
    t.string "rank"
    t.string "taxon_family"
    t.string "term_code"
  end

  create_table "taxon_concepts_mview", id: false, force: :cascade do |t|
    t.integer "id"
    t.integer "parent_id"
    t.integer "taxonomy_id"
    t.boolean "taxonomy_is_cites_eu"
    t.string "full_name", limit: 255
    t.string "name_status", limit: 255
    t.integer "rank_id"
    t.string "rank_name", limit: 255
    t.string "rank_display_name_en", limit: 255
    t.string "rank_display_name_es", limit: 255
    t.string "rank_display_name_fr", limit: 255
    t.boolean "spp"
    t.boolean "cites_accepted"
    t.integer "kingdom_position"
    t.string "taxonomic_position", limit: 255
    t.string "kingdom_name", limit: 255
    t.string "phylum_name", limit: 255
    t.string "class_name", limit: 255
    t.string "order_name", limit: 255
    t.string "family_name", limit: 255
    t.string "subfamily_name", limit: 255
    t.string "genus_name", limit: 255
    t.string "species_name", limit: 255
    t.string "subspecies_name", limit: 255
    t.integer "kingdom_id"
    t.integer "phylum_id"
    t.integer "class_id"
    t.integer "order_id"
    t.integer "family_id"
    t.integer "subfamily_id"
    t.integer "genus_id"
    t.integer "species_id"
    t.integer "subspecies_id"
    t.boolean "cites_i"
    t.boolean "cites_ii"
    t.boolean "cites_iii"
    t.boolean "cites_listed"
    t.boolean "cites_listed_descendants"
    t.boolean "cites_show"
    t.string "cites_status", limit: 255
    t.string "cites_listing_original", limit: 255
    t.string "cites_listing", limit: 255
    t.datetime "cites_listing_updated_at", precision: nil
    t.string "ann_symbol", limit: 255
    t.string "hash_ann_symbol", limit: 255
    t.string "hash_ann_parent_symbol", limit: 255
    t.boolean "eu_listed"
    t.boolean "eu_show"
    t.string "eu_status", limit: 255
    t.string "eu_listing_original", limit: 255
    t.string "eu_listing", limit: 255
    t.datetime "eu_listing_updated_at", precision: nil
    t.boolean "cms_listed"
    t.boolean "cms_show"
    t.string "cms_status", limit: 255
    t.string "cms_listing_original", limit: 255
    t.string "cms_listing", limit: 255
    t.datetime "cms_listing_updated_at", precision: nil
    t.integer "species_listings_ids", array: true
    t.integer "species_listings_ids_aggregated", array: true
    t.string "author_year", limit: 255
    t.datetime "created_at", precision: nil
    t.datetime "updated_at", precision: nil
    t.datetime "dependents_updated_at", precision: nil
    t.integer "taxon_concept_id_com"
    t.string "english_names_ary", array: true
    t.string "spanish_names_ary", array: true
    t.string "french_names_ary", array: true
    t.integer "taxon_concept_id_syn"
    t.string "synonyms_ary", array: true
    t.string "synonyms_author_years_ary", array: true
    t.integer "countries_ids_ary", array: true
    t.string "all_distribution_iso_codes_ary", array: true
    t.string "all_distribution_ary_en", array: true
    t.string "native_distribution_ary_en", array: true
    t.string "introduced_distribution_ary_en", array: true
    t.string "introduced_uncertain_distribution_ary_en", array: true
    t.string "reintroduced_distribution_ary_en", array: true
    t.string "extinct_distribution_ary_en", array: true
    t.string "extinct_uncertain_distribution_ary_en", array: true
    t.string "uncertain_distribution_ary_en", array: true
    t.string "all_distribution_ary_es", array: true
    t.string "native_distribution_ary_es", array: true
    t.string "introduced_distribution_ary_es", array: true
    t.string "introduced_uncertain_distribution_ary_es", array: true
    t.string "reintroduced_distribution_ary_es", array: true
    t.string "extinct_distribution_ary_es", array: true
    t.string "extinct_uncertain_distribution_ary_es", array: true
    t.string "uncertain_distribution_ary_es", array: true
    t.string "all_distribution_ary_fr", array: true
    t.string "native_distribution_ary_fr", array: true
    t.string "introduced_distribution_ary_fr", array: true
    t.string "introduced_uncertain_distribution_ary_fr", array: true
    t.string "reintroduced_distribution_ary_fr", array: true
    t.string "extinct_distribution_ary_fr", array: true
    t.string "extinct_uncertain_distribution_ary_fr", array: true
    t.string "uncertain_distribution_ary_fr", array: true
    t.boolean "show_in_species_plus"
    t.boolean "dirty"
    t.timestamptz "expiry"
    t.index ["cites_show", "name_status", "cites_listing_original", "taxonomy_is_cites_eu", "rank_name"], name: "taxon_concepts_mview_tmp_cites_show_name_status_cites_list_idx1"
    t.index ["cms_show", "name_status", "cms_listing_original", "taxonomy_is_cites_eu", "rank_name"], name: "taxon_concepts_mview_tmp_cms_show_name_status_cms_listing__idx1"
    t.index ["countries_ids_ary"], name: "taxon_concepts_mview_tmp_countries_ids_ary_idx", using: :gin
    t.index ["eu_show", "name_status", "eu_listing_original", "taxonomy_is_cites_eu", "rank_name"], name: "taxon_concepts_mview_tmp_eu_show_name_status_eu_listing_or_idx1"
    t.index ["id"], name: "taxon_concepts_mview_tmp_id_idx1"
    t.index ["parent_id"], name: "taxon_concepts_mview_tmp_parent_id_idx1"
    t.index ["taxonomy_is_cites_eu", "cites_listed", "kingdom_position"], name: "taxon_concepts_mview_tmp_taxonomy_is_cites_eu_cites_listed_idx1"
  end

  create_table "taxon_instruments", id: :serial, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "instrument_id"
    t.datetime "effective_from", precision: nil
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.integer "created_by_id"
    t.integer "updated_by_id"
    t.index ["taxon_concept_id"], name: "index_taxon_instruments_on_taxon_concept_id"
  end

  create_table "taxon_names", id: :serial, force: :cascade do |t|
    t.string "scientific_name", limit: 255, null: false
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
  end

  create_table "taxon_relationship_types", id: :serial, force: :cascade do |t|
    t.string "name", limit: 255, null: false
    t.boolean "is_intertaxonomic", default: false, null: false
    t.boolean "is_bidirectional", default: false, null: false
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
  end

  create_table "taxon_relationships", id: :serial, force: :cascade do |t|
    t.integer "taxon_concept_id", null: false
    t.integer "other_taxon_concept_id", null: false
    t.integer "taxon_relationship_type_id", null: false
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.integer "created_by_id"
    t.integer "updated_by_id"
  end

  create_table "taxonomies", id: :serial, force: :cascade do |t|
    t.string "name", limit: 255, default: "DEAFAULT TAXONOMY", null: false
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
  end

  create_table "term_trade_codes_pairs", id: :serial, force: :cascade do |t|
    t.integer "term_id", null: false
    t.integer "trade_code_id"
    t.string "trade_code_type", limit: 255
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.index ["term_id", "trade_code_id", "trade_code_type"], name: "index_term_trade_codes_pairs_on_term_and_trade_code", unique: true
  end

  create_table "terms_and_purpose_pairs_import", id: false, force: :cascade do |t|
    t.string "term_code"
    t.string "purpose_code"
  end

  create_table "terms_and_unit_pairs_import", id: false, force: :cascade do |t|
    t.string "term_code"
    t.string "unit_code"
  end

  create_table "trade_annual_report_uploads", id: :serial, force: :cascade do |t|
    t.integer "created_by"
    t.integer "updated_by"
    t.datetime "created_at", precision: nil
    t.datetime "updated_at", precision: nil
    t.integer "number_of_rows"
    t.text "csv_source_file"
    t.integer "trading_country_id", null: false
    t.string "point_of_view", limit: 255, default: "E", null: false
    t.integer "created_by_id"
    t.integer "updated_by_id"
    t.boolean "is_from_web_service", default: false
    t.integer "number_of_records_submitted"
    t.datetime "auto_reminder_sent_at", precision: nil
    t.datetime "sandbox_transferred_at", precision: nil
    t.integer "sandbox_transferred_by_id"
    t.datetime "submitted_at", precision: nil
    t.integer "submitted_by_id"
    t.datetime "deleted_at", precision: nil
    t.integer "deleted_by_id"
    t.integer "epix_created_by_id"
    t.datetime "epix_created_at", precision: nil
    t.integer "epix_updated_by_id"
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_submitted_by_id"
    t.datetime "epix_submitted_at", precision: nil
    t.datetime "validated_at", precision: nil
    t.jsonb "validation_report"
    t.boolean "force_submit", default: false
    t.string "aws_storage_path", limit: 255
  end

  create_table "trade_codes", id: :serial, force: :cascade do |t|
    t.string "code", limit: 255, null: false
    t.string "type", limit: 255, null: false
    t.string "name_en", limit: 255, null: false
    t.string "name_es", limit: 255
    t.string "name_fr", limit: 255
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
  end

  create_table "trade_permits", id: :serial, force: :cascade do |t|
    t.string "number", limit: 255, null: false
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.index "upper((number)::text) gin_trgm_ops", name: "trade_permits_number_trigm_idx", using: :gin
    t.index "upper((number)::text) varchar_pattern_ops", name: "trade_permits_number_idx", unique: true
  end

  create_table "trade_plus_static", id: :serial, force: :cascade do |t|
    t.integer "year"
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.integer "taxon_id"
    t.string "group_name", limit: 255
    t.string "kingdom_name", limit: 255
    t.string "phylum_name", limit: 255
    t.string "class_name", limit: 255
    t.string "order_name", limit: 255
    t.string "family_name", limit: 255
    t.string "genus_name", limit: 255
    t.string "importer", limit: 255
    t.string "importer_iso", limit: 255
    t.string "exporter", limit: 255
    t.string "exporter_iso", limit: 255
    t.string "origin", limit: 255
    t.string "origin_iso", limit: 255
    t.string "importer_reported_quantity", limit: 255
    t.string "exporter_reported_quantity", limit: 255
    t.string "term", limit: 255
    t.string "term_converted", limit: 255
    t.string "unit", limit: 255
    t.string "unit_converted", limit: 255
    t.string "purpose", limit: 255
    t.string "source", limit: 255
  end

  create_table "trade_restriction_purposes", id: :serial, force: :cascade do |t|
    t.integer "trade_restriction_id"
    t.integer "purpose_id"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.integer "created_by_id"
    t.integer "updated_by_id"
  end

  create_table "trade_restriction_sources", id: :serial, force: :cascade do |t|
    t.integer "trade_restriction_id"
    t.integer "source_id"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.integer "created_by_id"
    t.integer "updated_by_id"
  end

  create_table "trade_restriction_terms", id: :serial, force: :cascade do |t|
    t.integer "trade_restriction_id"
    t.integer "term_id"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.integer "created_by_id"
    t.integer "updated_by_id"
  end

  create_table "trade_restrictions", id: :serial, force: :cascade do |t|
    t.boolean "is_current", default: true
    t.datetime "start_date", precision: nil
    t.datetime "end_date", precision: nil
    t.integer "geo_entity_id"
    t.float "quota"
    t.datetime "publication_date", precision: nil
    t.text "notes"
    t.string "type", limit: 255
    t.integer "unit_id"
    t.integer "taxon_concept_id"
    t.boolean "public_display", default: true
    t.text "url"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.integer "start_notification_id"
    t.integer "end_notification_id"
    t.integer "excluded_taxon_concepts_ids", array: true
    t.integer "original_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.text "internal_notes"
    t.text "nomenclature_note_en"
    t.text "nomenclature_note_es"
    t.text "nomenclature_note_fr"
    t.boolean "applies_to_import", default: false, null: false
    t.index "date_part('year'::text, start_date)", name: "trade_restrictions_extract_year_from_start_date", where: "((type)::text = 'Quota'::text)"
  end

  create_table "trade_sandbox_2096", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2096_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2096_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2096_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2096_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2096_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2096_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2096_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2096_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2096_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2096_unit_code_idx"
  end

  create_table "trade_sandbox_2097", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2097_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2097_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2097_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2097_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2097_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2097_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2097_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2097_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2097_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2097_unit_code_idx"
  end

  create_table "trade_sandbox_2101", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2101_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2101_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2101_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2101_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2101_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2101_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2101_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2101_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2101_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2101_unit_code_idx"
  end

  create_table "trade_sandbox_2102", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2102_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2102_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2102_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2102_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2102_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2102_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2102_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2102_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2102_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2102_unit_code_idx"
  end

  create_table "trade_sandbox_2106", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2106_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2106_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2106_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2106_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2106_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2106_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2106_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2106_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2106_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2106_unit_code_idx"
  end

  create_table "trade_sandbox_2107", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2107_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2107_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2107_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2107_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2107_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2107_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2107_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2107_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2107_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2107_unit_code_idx"
  end

  create_table "trade_sandbox_2108", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2108_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2108_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2108_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2108_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2108_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2108_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2108_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2108_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2108_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2108_unit_code_idx"
  end

  create_table "trade_sandbox_2109", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2109_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2109_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2109_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2109_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2109_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2109_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2109_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2109_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2109_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2109_unit_code_idx"
  end

  create_table "trade_sandbox_2110", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2110_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2110_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2110_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2110_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2110_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2110_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2110_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2110_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2110_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2110_unit_code_idx"
  end

  create_table "trade_sandbox_2111", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2111_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2111_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2111_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2111_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2111_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2111_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2111_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2111_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2111_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2111_unit_code_idx"
  end

  create_table "trade_sandbox_2112", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2112_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2112_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2112_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2112_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2112_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2112_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2112_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2112_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2112_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2112_unit_code_idx"
  end

  create_table "trade_sandbox_2117", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2117_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2117_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2117_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2117_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2117_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2117_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2117_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2117_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2117_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2117_unit_code_idx"
  end

  create_table "trade_sandbox_2118", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2118_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2118_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2118_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2118_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2118_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2118_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2118_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2118_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2118_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2118_unit_code_idx"
  end

  create_table "trade_sandbox_2119", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2119_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2119_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2119_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2119_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2119_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2119_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2119_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2119_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2119_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2119_unit_code_idx"
  end

  create_table "trade_sandbox_2120", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2120_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2120_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2120_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2120_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2120_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2120_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2120_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2120_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2120_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2120_unit_code_idx"
  end

  create_table "trade_sandbox_2121", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2121_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2121_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2121_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2121_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2121_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2121_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2121_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2121_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2121_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2121_unit_code_idx"
  end

  create_table "trade_sandbox_2125", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2125_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2125_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2125_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2125_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2125_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2125_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2125_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2125_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2125_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2125_unit_code_idx"
  end

  create_table "trade_sandbox_2126", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2126_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2126_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2126_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2126_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2126_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2126_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2126_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2126_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2126_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2126_unit_code_idx"
  end

  create_table "trade_sandbox_2127", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2127_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2127_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2127_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2127_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2127_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2127_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2127_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2127_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2127_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2127_unit_code_idx"
  end

  create_table "trade_sandbox_2128", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2128_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2128_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2128_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2128_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2128_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2128_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2128_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2128_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2128_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2128_unit_code_idx"
  end

  create_table "trade_sandbox_2130", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2130_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2130_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2130_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2130_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2130_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2130_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2130_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2130_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2130_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2130_unit_code_idx"
  end

  create_table "trade_sandbox_2131", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2131_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2131_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2131_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2131_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2131_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2131_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2131_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2131_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2131_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2131_unit_code_idx"
  end

  create_table "trade_sandbox_2132", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2132_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2132_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2132_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2132_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2132_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2132_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2132_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2132_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2132_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2132_unit_code_idx"
  end

  create_table "trade_sandbox_2134", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2134_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2134_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2134_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2134_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2134_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2134_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2134_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2134_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2134_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2134_unit_code_idx"
  end

  create_table "trade_sandbox_2135", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2135_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2135_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2135_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2135_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2135_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2135_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2135_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2135_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2135_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2135_unit_code_idx"
  end

  create_table "trade_sandbox_2136", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2136_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2136_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2136_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2136_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2136_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2136_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2136_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2136_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2136_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2136_unit_code_idx"
  end

  create_table "trade_sandbox_2137", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2137_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2137_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2137_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2137_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2137_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2137_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2137_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2137_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2137_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2137_unit_code_idx"
  end

  create_table "trade_sandbox_2138", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2138_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2138_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2138_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2138_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2138_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2138_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2138_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2138_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2138_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2138_unit_code_idx"
  end

  create_table "trade_sandbox_2139", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2139_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2139_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2139_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2139_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2139_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2139_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2139_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2139_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2139_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2139_unit_code_idx"
  end

  create_table "trade_sandbox_2140", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2140_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2140_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2140_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2140_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2140_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2140_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2140_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2140_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2140_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2140_unit_code_idx"
  end

  create_table "trade_sandbox_2141", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2141_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2141_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2141_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2141_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2141_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2141_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2141_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2141_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2141_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2141_unit_code_idx"
  end

  create_table "trade_sandbox_2142", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2142_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2142_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2142_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2142_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2142_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2142_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2142_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2142_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2142_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2142_unit_code_idx"
  end

  create_table "trade_sandbox_2144", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2144_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2144_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2144_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2144_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2144_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2144_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2144_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2144_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2144_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2144_unit_code_idx"
  end

  create_table "trade_sandbox_2145", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2145_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2145_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2145_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2145_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2145_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2145_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2145_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2145_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2145_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2145_unit_code_idx"
  end

  create_table "trade_sandbox_2146", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2146_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2146_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2146_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2146_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2146_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2146_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2146_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2146_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2146_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2146_unit_code_idx"
  end

  create_table "trade_sandbox_2147", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2147_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2147_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2147_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2147_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2147_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2147_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2147_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2147_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2147_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2147_unit_code_idx"
  end

  create_table "trade_sandbox_2148", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2148_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2148_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2148_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2148_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2148_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2148_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2148_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2148_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2148_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2148_unit_code_idx"
  end

  create_table "trade_sandbox_2149", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2149_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2149_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2149_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2149_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2149_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2149_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2149_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2149_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2149_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2149_unit_code_idx"
  end

  create_table "trade_sandbox_2151", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2151_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2151_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2151_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2151_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2151_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2151_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2151_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2151_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2151_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2151_unit_code_idx"
  end

  create_table "trade_sandbox_2152", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2152_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2152_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2152_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2152_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2152_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2152_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2152_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2152_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2152_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2152_unit_code_idx"
  end

  create_table "trade_sandbox_2153", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2153_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2153_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2153_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2153_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2153_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2153_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2153_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2153_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2153_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2153_unit_code_idx"
  end

  create_table "trade_sandbox_2154", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2154_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2154_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2154_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2154_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2154_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2154_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2154_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2154_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2154_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2154_unit_code_idx"
  end

  create_table "trade_sandbox_2155", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2155_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2155_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2155_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2155_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2155_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2155_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2155_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2155_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2155_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2155_unit_code_idx"
  end

  create_table "trade_sandbox_2156", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2156_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2156_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2156_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2156_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2156_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2156_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2156_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2156_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2156_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2156_unit_code_idx"
  end

  create_table "trade_sandbox_2157", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2157_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2157_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2157_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2157_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2157_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2157_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2157_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2157_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2157_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2157_unit_code_idx"
  end

  create_table "trade_sandbox_2158", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2158_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2158_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2158_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2158_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2158_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2158_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2158_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2158_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2158_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2158_unit_code_idx"
  end

  create_table "trade_sandbox_2159", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2159_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2159_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2159_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2159_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2159_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2159_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2159_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2159_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2159_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2159_unit_code_idx"
  end

  create_table "trade_sandbox_2160", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2160_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2160_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2160_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2160_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2160_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2160_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2160_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2160_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2160_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2160_unit_code_idx"
  end

  create_table "trade_sandbox_2161", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2161_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2161_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2161_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2161_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2161_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2161_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2161_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2161_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2161_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2161_unit_code_idx"
  end

  create_table "trade_sandbox_2162", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2162_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2162_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2162_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2162_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2162_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2162_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2162_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2162_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2162_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2162_unit_code_idx"
  end

  create_table "trade_sandbox_2165", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2165_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2165_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2165_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2165_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2165_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2165_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2165_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2165_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2165_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2165_unit_code_idx"
  end

  create_table "trade_sandbox_2166", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2166_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2166_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2166_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2166_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2166_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2166_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2166_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2166_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2166_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2166_unit_code_idx"
  end

  create_table "trade_sandbox_2167", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2167_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2167_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2167_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2167_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2167_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2167_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2167_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2167_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2167_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2167_unit_code_idx"
  end

  create_table "trade_sandbox_2168", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2168_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2168_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2168_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2168_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2168_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2168_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2168_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2168_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2168_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2168_unit_code_idx"
  end

  create_table "trade_sandbox_2169", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2169_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2169_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2169_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2169_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2169_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2169_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2169_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2169_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2169_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2169_unit_code_idx"
  end

  create_table "trade_sandbox_2172", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2172_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2172_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2172_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2172_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2172_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2172_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2172_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2172_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2172_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2172_unit_code_idx"
  end

  create_table "trade_sandbox_2173", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2173_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2173_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2173_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2173_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2173_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2173_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2173_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2173_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2173_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2173_unit_code_idx"
  end

  create_table "trade_sandbox_2174", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2174_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2174_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2174_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2174_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2174_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2174_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2174_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2174_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2174_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2174_unit_code_idx"
  end

  create_table "trade_sandbox_2175", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2175_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2175_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2175_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2175_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2175_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2175_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2175_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2175_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2175_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2175_unit_code_idx"
  end

  create_table "trade_sandbox_2176", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2176_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2176_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2176_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2176_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2176_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2176_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2176_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2176_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2176_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2176_unit_code_idx"
  end

  create_table "trade_sandbox_2179", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2179_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2179_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2179_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2179_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2179_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2179_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2179_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2179_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2179_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2179_unit_code_idx"
  end

  create_table "trade_sandbox_2180", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2180_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2180_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2180_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2180_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2180_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2180_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2180_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2180_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2180_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2180_unit_code_idx"
  end

  create_table "trade_sandbox_2181", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2181_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2181_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2181_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2181_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2181_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2181_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2181_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2181_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2181_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2181_unit_code_idx"
  end

  create_table "trade_sandbox_2183", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2183_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2183_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2183_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2183_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2183_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2183_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2183_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2183_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2183_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2183_unit_code_idx"
  end

  create_table "trade_sandbox_2184", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2184_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2184_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2184_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2184_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2184_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2184_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2184_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2184_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2184_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2184_unit_code_idx"
  end

  create_table "trade_sandbox_2187", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2187_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2187_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2187_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2187_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2187_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2187_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2187_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2187_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2187_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2187_unit_code_idx"
  end

  create_table "trade_sandbox_2189", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2189_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2189_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2189_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2189_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2189_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2189_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2189_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2189_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2189_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2189_unit_code_idx"
  end

  create_table "trade_sandbox_2190", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2190_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2190_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2190_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2190_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2190_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2190_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2190_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2190_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2190_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2190_unit_code_idx"
  end

  create_table "trade_sandbox_2191", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2191_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2191_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2191_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2191_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2191_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2191_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2191_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2191_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2191_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2191_unit_code_idx"
  end

  create_table "trade_sandbox_2192", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2192_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2192_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2192_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2192_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2192_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2192_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2192_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2192_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2192_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2192_unit_code_idx"
  end

  create_table "trade_sandbox_2193", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2193_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2193_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2193_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2193_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2193_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2193_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2193_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2193_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2193_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2193_unit_code_idx"
  end

  create_table "trade_sandbox_2194", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2194_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2194_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2194_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2194_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2194_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2194_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2194_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2194_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2194_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2194_unit_code_idx"
  end

  create_table "trade_sandbox_2195", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2195_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2195_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2195_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2195_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2195_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2195_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2195_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2195_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2195_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2195_unit_code_idx"
  end

  create_table "trade_sandbox_2196", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2196_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2196_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2196_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2196_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2196_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2196_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2196_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2196_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2196_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2196_unit_code_idx"
  end

  create_table "trade_sandbox_2197", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2197_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2197_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2197_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2197_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2197_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2197_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2197_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2197_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2197_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2197_unit_code_idx"
  end

  create_table "trade_sandbox_2198", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2198_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2198_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2198_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2198_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2198_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2198_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2198_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2198_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2198_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2198_unit_code_idx"
  end

  create_table "trade_sandbox_2199", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2199_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2199_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2199_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2199_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2199_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2199_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2199_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2199_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2199_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2199_unit_code_idx"
  end

  create_table "trade_sandbox_2200", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2200_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2200_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2200_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2200_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2200_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2200_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2200_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2200_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2200_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2200_unit_code_idx"
  end

  create_table "trade_sandbox_2202", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2202_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2202_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2202_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2202_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2202_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2202_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2202_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2202_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2202_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2202_unit_code_idx"
  end

  create_table "trade_sandbox_2203", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2203_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2203_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2203_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2203_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2203_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2203_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2203_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2203_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2203_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2203_unit_code_idx"
  end

  create_table "trade_sandbox_2204", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2204_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2204_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2204_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2204_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2204_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2204_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2204_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2204_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2204_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2204_unit_code_idx"
  end

  create_table "trade_sandbox_2205", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2205_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2205_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2205_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2205_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2205_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2205_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2205_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2205_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2205_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2205_unit_code_idx"
  end

  create_table "trade_sandbox_2206", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2206_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2206_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2206_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2206_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2206_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2206_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2206_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2206_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2206_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2206_unit_code_idx"
  end

  create_table "trade_sandbox_2207", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2207_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2207_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2207_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2207_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2207_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2207_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2207_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2207_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2207_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2207_unit_code_idx"
  end

  create_table "trade_sandbox_2208", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2208_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2208_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2208_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2208_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2208_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2208_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2208_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2208_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2208_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2208_unit_code_idx"
  end

  create_table "trade_sandbox_2210", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2210_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2210_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2210_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2210_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2210_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2210_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2210_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2210_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2210_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2210_unit_code_idx"
  end

  create_table "trade_sandbox_2211", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2211_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2211_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2211_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2211_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2211_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2211_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2211_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2211_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2211_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2211_unit_code_idx"
  end

  create_table "trade_sandbox_2213", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2213_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2213_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2213_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2213_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2213_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2213_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2213_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2213_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2213_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2213_unit_code_idx"
  end

  create_table "trade_sandbox_2214", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2214_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2214_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2214_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2214_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2214_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2214_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2214_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2214_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2214_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2214_unit_code_idx"
  end

  create_table "trade_sandbox_2215", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2215_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2215_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2215_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2215_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2215_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2215_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2215_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2215_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2215_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2215_unit_code_idx"
  end

  create_table "trade_sandbox_2216", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2216_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2216_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2216_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2216_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2216_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2216_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2216_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2216_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2216_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2216_unit_code_idx"
  end

  create_table "trade_sandbox_2218", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2218_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2218_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2218_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2218_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2218_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2218_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2218_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2218_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2218_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2218_unit_code_idx"
  end

  create_table "trade_sandbox_2219", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2219_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2219_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2219_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2219_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2219_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2219_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2219_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2219_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2219_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2219_unit_code_idx"
  end

  create_table "trade_sandbox_2220", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2220_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2220_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2220_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2220_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2220_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2220_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2220_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2220_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2220_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2220_unit_code_idx"
  end

  create_table "trade_sandbox_2222", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2222_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2222_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2222_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2222_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2222_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2222_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2222_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2222_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2222_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2222_unit_code_idx"
  end

  create_table "trade_sandbox_2223", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2223_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2223_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2223_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2223_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2223_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2223_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2223_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2223_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2223_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2223_unit_code_idx"
  end

  create_table "trade_sandbox_2224", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2224_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2224_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2224_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2224_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2224_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2224_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2224_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2224_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2224_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2224_unit_code_idx"
  end

  create_table "trade_sandbox_2225", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2225_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2225_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2225_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2225_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2225_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2225_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2225_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2225_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2225_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2225_unit_code_idx"
  end

  create_table "trade_sandbox_2226", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2226_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2226_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2226_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2226_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2226_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2226_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2226_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2226_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2226_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2226_unit_code_idx"
  end

  create_table "trade_sandbox_2227", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2227_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2227_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2227_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2227_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2227_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2227_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2227_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2227_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2227_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2227_unit_code_idx"
  end

  create_table "trade_sandbox_2228", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2228_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2228_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2228_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2228_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2228_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2228_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2228_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2228_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2228_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2228_unit_code_idx"
  end

  create_table "trade_sandbox_2229", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2229_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2229_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2229_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2229_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2229_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2229_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2229_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2229_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2229_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2229_unit_code_idx"
  end

  create_table "trade_sandbox_2230", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2230_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2230_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2230_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2230_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2230_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2230_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2230_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2230_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2230_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2230_unit_code_idx"
  end

  create_table "trade_sandbox_2231", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2231_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2231_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2231_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2231_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2231_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2231_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2231_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2231_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2231_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2231_unit_code_idx"
  end

  create_table "trade_sandbox_2232", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2232_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2232_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2232_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2232_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2232_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2232_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2232_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2232_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2232_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2232_unit_code_idx"
  end

  create_table "trade_sandbox_2233", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2233_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2233_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2233_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2233_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2233_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2233_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2233_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2233_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2233_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2233_unit_code_idx"
  end

  create_table "trade_sandbox_2234", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2234_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2234_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2234_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2234_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2234_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2234_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2234_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2234_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2234_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2234_unit_code_idx"
  end

  create_table "trade_sandbox_2236", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2236_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2236_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2236_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2236_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2236_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2236_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2236_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2236_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2236_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2236_unit_code_idx"
  end

  create_table "trade_sandbox_2237", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2237_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2237_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2237_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2237_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2237_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2237_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2237_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2237_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2237_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2237_unit_code_idx"
  end

  create_table "trade_sandbox_2238", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2238_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2238_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2238_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2238_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2238_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2238_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2238_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2238_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2238_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2238_unit_code_idx"
  end

  create_table "trade_sandbox_2240", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2240_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2240_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2240_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2240_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2240_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2240_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2240_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2240_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2240_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2240_unit_code_idx"
  end

  create_table "trade_sandbox_2241", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2241_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2241_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2241_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2241_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2241_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2241_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2241_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2241_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2241_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2241_unit_code_idx"
  end

  create_table "trade_sandbox_2242", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2242_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2242_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2242_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2242_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2242_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2242_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2242_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2242_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2242_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2242_unit_code_idx"
  end

  create_table "trade_sandbox_2243", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2243_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2243_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2243_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2243_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2243_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2243_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2243_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2243_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2243_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2243_unit_code_idx"
  end

  create_table "trade_sandbox_2245", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2245_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2245_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2245_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2245_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2245_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2245_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2245_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2245_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2245_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2245_unit_code_idx"
  end

  create_table "trade_sandbox_2246", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2246_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2246_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2246_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2246_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2246_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2246_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2246_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2246_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2246_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2246_unit_code_idx"
  end

  create_table "trade_sandbox_2247", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2247_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2247_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2247_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2247_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2247_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2247_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2247_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2247_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2247_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2247_unit_code_idx"
  end

  create_table "trade_sandbox_2248", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2248_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2248_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2248_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2248_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2248_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2248_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2248_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2248_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2248_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2248_unit_code_idx"
  end

  create_table "trade_sandbox_2249", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2249_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2249_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2249_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2249_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2249_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2249_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2249_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2249_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2249_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2249_unit_code_idx"
  end

  create_table "trade_sandbox_2250", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2250_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2250_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2250_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2250_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2250_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2250_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2250_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2250_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2250_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2250_unit_code_idx"
  end

  create_table "trade_sandbox_2251", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2251_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2251_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2251_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2251_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2251_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2251_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2251_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2251_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2251_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2251_unit_code_idx"
  end

  create_table "trade_sandbox_2252", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2252_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2252_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2252_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2252_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2252_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2252_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2252_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2252_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2252_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2252_unit_code_idx"
  end

  create_table "trade_sandbox_2253", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2253_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2253_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2253_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2253_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2253_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2253_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2253_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2253_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2253_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2253_unit_code_idx"
  end

  create_table "trade_sandbox_2254", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2254_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2254_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2254_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2254_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2254_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2254_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2254_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2254_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2254_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2254_unit_code_idx"
  end

  create_table "trade_sandbox_2255", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2255_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2255_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2255_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2255_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2255_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2255_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2255_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2255_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2255_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2255_unit_code_idx"
  end

  create_table "trade_sandbox_2256", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2256_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2256_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2256_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2256_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2256_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2256_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2256_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2256_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2256_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2256_unit_code_idx"
  end

  create_table "trade_sandbox_2257", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2257_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2257_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2257_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2257_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2257_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2257_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2257_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2257_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2257_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2257_unit_code_idx"
  end

  create_table "trade_sandbox_2258", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2258_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2258_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2258_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2258_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2258_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2258_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2258_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2258_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2258_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2258_unit_code_idx"
  end

  create_table "trade_sandbox_2260", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2260_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2260_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2260_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2260_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2260_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2260_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2260_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2260_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2260_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2260_unit_code_idx"
  end

  create_table "trade_sandbox_2261", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2261_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2261_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2261_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2261_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2261_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2261_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2261_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2261_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2261_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2261_unit_code_idx"
  end

  create_table "trade_sandbox_2262", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2262_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2262_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2262_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2262_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2262_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2262_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2262_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2262_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2262_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2262_unit_code_idx"
  end

  create_table "trade_sandbox_2265", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2265_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2265_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2265_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2265_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2265_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2265_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2265_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2265_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2265_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2265_unit_code_idx"
  end

  create_table "trade_sandbox_2266", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2266_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2266_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2266_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2266_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2266_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2266_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2266_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2266_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2266_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2266_unit_code_idx"
  end

  create_table "trade_sandbox_2268", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2268_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2268_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2268_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2268_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2268_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2268_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2268_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2268_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2268_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2268_unit_code_idx"
  end

  create_table "trade_sandbox_2269", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2269_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2269_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2269_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2269_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2269_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2269_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2269_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2269_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2269_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2269_unit_code_idx"
  end

  create_table "trade_sandbox_2270", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2270_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2270_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2270_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2270_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2270_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2270_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2270_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2270_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2270_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2270_unit_code_idx"
  end

  create_table "trade_sandbox_2271", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2271_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2271_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2271_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2271_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2271_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2271_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2271_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2271_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2271_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2271_unit_code_idx"
  end

  create_table "trade_sandbox_2272", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2272_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2272_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2272_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2272_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2272_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2272_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2272_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2272_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2272_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2272_unit_code_idx"
  end

  create_table "trade_sandbox_2273", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2273_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2273_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2273_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2273_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2273_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2273_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2273_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2273_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2273_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2273_unit_code_idx"
  end

  create_table "trade_sandbox_2274", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2274_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2274_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2274_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2274_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2274_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2274_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2274_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2274_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2274_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2274_unit_code_idx"
  end

  create_table "trade_sandbox_2275", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2275_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2275_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2275_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2275_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2275_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2275_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2275_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2275_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2275_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2275_unit_code_idx"
  end

  create_table "trade_sandbox_2276", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2276_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2276_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2276_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2276_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2276_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2276_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2276_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2276_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2276_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2276_unit_code_idx"
  end

  create_table "trade_sandbox_2277", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2277_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2277_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2277_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2277_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2277_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2277_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2277_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2277_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2277_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2277_unit_code_idx"
  end

  create_table "trade_sandbox_2278", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2278_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2278_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2278_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2278_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2278_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2278_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2278_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2278_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2278_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2278_unit_code_idx"
  end

  create_table "trade_sandbox_2280", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2280_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2280_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2280_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2280_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2280_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2280_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2280_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2280_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2280_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2280_unit_code_idx"
  end

  create_table "trade_sandbox_2281", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2281_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2281_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2281_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2281_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2281_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2281_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2281_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2281_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2281_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2281_unit_code_idx"
  end

  create_table "trade_sandbox_2282", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2282_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2282_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2282_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2282_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2282_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2282_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2282_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2282_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2282_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2282_unit_code_idx"
  end

  create_table "trade_sandbox_2283", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2283_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2283_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2283_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2283_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2283_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2283_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2283_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2283_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2283_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2283_unit_code_idx"
  end

  create_table "trade_sandbox_2284", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2284_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2284_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2284_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2284_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2284_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2284_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2284_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2284_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2284_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2284_unit_code_idx"
  end

  create_table "trade_sandbox_2285", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2285_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2285_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2285_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2285_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2285_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2285_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2285_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2285_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2285_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2285_unit_code_idx"
  end

  create_table "trade_sandbox_2287", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2287_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2287_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2287_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2287_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2287_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2287_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2287_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2287_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2287_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2287_unit_code_idx"
  end

  create_table "trade_sandbox_2288", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2288_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2288_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2288_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2288_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2288_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2288_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2288_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2288_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2288_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2288_unit_code_idx"
  end

  create_table "trade_sandbox_2289", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2289_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2289_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2289_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2289_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2289_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2289_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2289_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2289_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2289_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2289_unit_code_idx"
  end

  create_table "trade_sandbox_2290", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2290_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2290_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2290_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2290_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2290_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2290_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2290_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2290_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2290_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2290_unit_code_idx"
  end

  create_table "trade_sandbox_2291", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2291_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2291_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2291_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2291_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2291_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2291_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2291_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2291_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2291_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2291_unit_code_idx"
  end

  create_table "trade_sandbox_2292", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2292_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2292_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2292_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2292_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2292_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2292_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2292_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2292_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2292_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2292_unit_code_idx"
  end

  create_table "trade_sandbox_2293", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2293_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2293_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2293_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2293_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2293_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2293_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2293_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2293_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2293_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2293_unit_code_idx"
  end

  create_table "trade_sandbox_2296", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2296_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2296_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2296_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2296_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2296_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2296_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2296_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2296_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2296_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2296_unit_code_idx"
  end

  create_table "trade_sandbox_2297", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2297_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2297_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2297_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2297_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2297_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2297_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2297_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2297_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2297_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2297_unit_code_idx"
  end

  create_table "trade_sandbox_2298", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2298_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2298_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2298_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2298_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2298_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2298_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2298_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2298_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2298_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2298_unit_code_idx"
  end

  create_table "trade_sandbox_2299", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2299_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2299_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2299_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2299_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2299_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2299_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2299_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2299_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2299_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2299_unit_code_idx"
  end

  create_table "trade_sandbox_2300", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2300_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2300_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2300_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2300_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2300_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2300_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2300_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2300_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2300_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2300_unit_code_idx"
  end

  create_table "trade_sandbox_2301", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2301_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2301_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2301_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2301_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2301_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2301_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2301_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2301_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2301_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2301_unit_code_idx"
  end

  create_table "trade_sandbox_2302", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2302_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2302_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2302_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2302_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2302_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2302_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2302_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2302_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2302_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2302_unit_code_idx"
  end

  create_table "trade_sandbox_2303", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2303_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2303_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2303_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2303_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2303_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2303_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2303_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2303_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2303_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2303_unit_code_idx"
  end

  create_table "trade_sandbox_2304", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2304_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2304_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2304_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2304_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2304_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2304_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2304_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2304_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2304_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2304_unit_code_idx"
  end

  create_table "trade_sandbox_2305", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2305_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2305_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2305_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2305_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2305_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2305_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2305_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2305_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2305_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2305_unit_code_idx"
  end

  create_table "trade_sandbox_2306", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2306_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2306_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2306_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2306_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2306_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2306_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2306_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2306_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2306_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2306_unit_code_idx"
  end

  create_table "trade_sandbox_2307", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2307_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2307_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2307_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2307_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2307_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2307_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2307_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2307_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2307_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2307_unit_code_idx"
  end

  create_table "trade_sandbox_2308", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2308_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2308_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2308_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2308_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2308_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2308_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2308_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2308_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2308_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2308_unit_code_idx"
  end

  create_table "trade_sandbox_2309", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2309_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2309_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2309_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2309_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2309_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2309_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2309_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2309_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2309_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2309_unit_code_idx"
  end

  create_table "trade_sandbox_2310", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2310_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2310_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2310_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2310_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2310_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2310_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2310_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2310_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2310_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2310_unit_code_idx"
  end

  create_table "trade_sandbox_2311", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2311_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2311_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2311_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2311_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2311_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2311_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2311_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2311_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2311_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2311_unit_code_idx"
  end

  create_table "trade_sandbox_2313", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2313_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2313_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2313_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2313_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2313_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2313_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2313_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2313_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2313_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2313_unit_code_idx"
  end

  create_table "trade_sandbox_2314", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2314_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2314_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2314_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2314_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2314_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2314_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2314_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2314_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2314_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2314_unit_code_idx"
  end

  create_table "trade_sandbox_2315", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2315_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2315_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2315_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2315_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2315_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2315_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2315_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2315_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2315_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2315_unit_code_idx"
  end

  create_table "trade_sandbox_2316", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2316_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2316_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2316_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2316_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2316_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2316_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2316_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2316_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2316_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2316_unit_code_idx"
  end

  create_table "trade_sandbox_2317", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2317_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2317_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2317_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2317_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2317_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2317_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2317_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2317_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2317_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2317_unit_code_idx"
  end

  create_table "trade_sandbox_2318", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2318_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2318_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2318_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2318_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2318_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2318_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2318_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2318_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2318_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2318_unit_code_idx"
  end

  create_table "trade_sandbox_2319", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2319_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2319_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2319_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2319_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2319_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2319_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2319_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2319_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2319_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2319_unit_code_idx"
  end

  create_table "trade_sandbox_2320", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2320_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2320_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2320_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2320_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2320_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2320_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2320_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2320_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2320_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2320_unit_code_idx"
  end

  create_table "trade_sandbox_2321", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2321_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2321_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2321_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2321_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2321_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2321_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2321_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2321_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2321_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2321_unit_code_idx"
  end

  create_table "trade_sandbox_2322", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2322_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2322_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2322_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2322_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2322_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2322_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2322_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2322_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2322_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2322_unit_code_idx"
  end

  create_table "trade_sandbox_2323", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2323_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2323_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2323_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2323_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2323_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2323_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2323_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2323_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2323_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2323_unit_code_idx"
  end

  create_table "trade_sandbox_2324", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2324_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2324_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2324_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2324_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2324_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2324_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2324_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2324_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2324_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2324_unit_code_idx"
  end

  create_table "trade_sandbox_2325", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2325_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2325_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2325_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2325_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2325_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2325_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2325_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2325_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2325_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2325_unit_code_idx"
  end

  create_table "trade_sandbox_2326", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2326_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2326_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2326_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2326_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2326_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2326_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2326_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2326_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2326_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2326_unit_code_idx"
  end

  create_table "trade_sandbox_2327", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2327_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2327_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2327_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2327_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2327_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2327_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2327_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2327_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2327_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2327_unit_code_idx"
  end

  create_table "trade_sandbox_2328", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2328_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2328_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2328_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2328_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2328_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2328_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2328_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2328_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2328_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2328_unit_code_idx"
  end

  create_table "trade_sandbox_2329", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2329_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2329_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2329_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2329_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2329_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2329_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2329_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2329_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2329_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2329_unit_code_idx"
  end

  create_table "trade_sandbox_2331", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2331_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2331_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2331_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2331_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2331_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2331_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2331_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2331_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2331_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2331_unit_code_idx"
  end

  create_table "trade_sandbox_2332", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2332_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2332_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2332_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2332_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2332_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2332_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2332_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2332_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2332_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2332_unit_code_idx"
  end

  create_table "trade_sandbox_2334", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2334_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2334_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2334_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2334_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2334_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2334_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2334_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2334_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2334_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2334_unit_code_idx"
  end

  create_table "trade_sandbox_2335", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2335_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2335_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2335_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2335_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2335_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2335_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2335_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2335_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2335_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2335_unit_code_idx"
  end

  create_table "trade_sandbox_2336", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2336_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2336_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2336_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2336_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2336_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2336_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2336_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2336_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2336_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2336_unit_code_idx"
  end

  create_table "trade_sandbox_2337", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2337_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2337_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2337_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2337_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2337_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2337_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2337_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2337_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2337_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2337_unit_code_idx"
  end

  create_table "trade_sandbox_2338", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2338_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2338_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2338_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2338_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2338_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2338_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2338_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2338_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2338_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2338_unit_code_idx"
  end

  create_table "trade_sandbox_2339", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2339_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2339_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2339_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2339_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2339_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2339_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2339_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2339_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2339_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2339_unit_code_idx"
  end

  create_table "trade_sandbox_2340", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2340_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2340_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2340_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2340_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2340_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2340_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2340_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2340_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2340_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2340_unit_code_idx"
  end

  create_table "trade_sandbox_2341", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2341_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2341_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2341_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2341_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2341_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2341_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2341_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2341_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2341_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2341_unit_code_idx"
  end

  create_table "trade_sandbox_2342", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2342_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2342_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2342_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2342_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2342_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2342_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2342_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2342_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2342_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2342_unit_code_idx"
  end

  create_table "trade_sandbox_2343", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2343_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2343_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2343_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2343_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2343_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2343_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2343_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2343_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2343_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2343_unit_code_idx"
  end

  create_table "trade_sandbox_2344", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2344_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2344_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2344_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2344_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2344_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2344_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2344_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2344_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2344_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2344_unit_code_idx"
  end

  create_table "trade_sandbox_2345", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2345_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2345_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2345_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2345_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2345_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2345_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2345_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2345_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2345_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2345_unit_code_idx"
  end

  create_table "trade_sandbox_2346", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2346_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2346_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2346_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2346_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2346_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2346_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2346_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2346_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2346_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2346_unit_code_idx"
  end

  create_table "trade_sandbox_2347", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2347_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2347_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2347_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2347_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2347_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2347_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2347_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2347_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2347_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2347_unit_code_idx"
  end

  create_table "trade_sandbox_2348", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2348_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2348_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2348_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2348_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2348_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2348_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2348_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2348_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2348_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2348_unit_code_idx"
  end

  create_table "trade_sandbox_2349", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2349_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2349_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2349_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2349_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2349_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2349_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2349_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2349_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2349_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2349_unit_code_idx"
  end

  create_table "trade_sandbox_2350", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2350_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2350_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2350_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2350_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2350_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2350_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2350_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2350_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2350_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2350_unit_code_idx"
  end

  create_table "trade_sandbox_2351", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2351_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2351_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2351_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2351_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2351_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2351_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2351_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2351_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2351_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2351_unit_code_idx"
  end

  create_table "trade_sandbox_2352", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2352_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2352_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2352_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2352_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2352_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2352_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2352_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2352_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2352_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2352_unit_code_idx"
  end

  create_table "trade_sandbox_2353", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2353_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2353_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2353_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2353_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2353_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2353_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2353_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2353_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2353_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2353_unit_code_idx"
  end

  create_table "trade_sandbox_2354", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2354_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2354_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2354_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2354_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2354_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2354_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2354_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2354_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2354_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2354_unit_code_idx"
  end

  create_table "trade_sandbox_2355", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2355_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2355_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2355_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2355_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2355_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2355_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2355_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2355_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2355_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2355_unit_code_idx"
  end

  create_table "trade_sandbox_2356", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2356_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2356_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2356_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2356_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2356_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2356_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2356_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2356_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2356_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2356_unit_code_idx"
  end

  create_table "trade_sandbox_2359", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2359_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2359_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2359_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2359_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2359_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2359_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2359_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2359_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2359_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2359_unit_code_idx"
  end

  create_table "trade_sandbox_2360", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2360_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2360_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2360_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2360_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2360_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2360_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2360_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2360_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2360_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2360_unit_code_idx"
  end

  create_table "trade_sandbox_2362", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2362_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2362_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2362_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2362_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2362_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2362_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2362_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2362_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2362_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2362_unit_code_idx"
  end

  create_table "trade_sandbox_2363", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2363_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2363_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2363_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2363_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2363_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2363_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2363_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2363_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2363_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2363_unit_code_idx"
  end

  create_table "trade_sandbox_2364", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2364_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2364_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2364_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2364_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2364_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2364_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2364_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2364_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2364_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2364_unit_code_idx"
  end

  create_table "trade_sandbox_2365", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2365_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2365_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2365_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2365_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2365_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2365_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2365_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2365_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2365_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2365_unit_code_idx"
  end

  create_table "trade_sandbox_2366", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2366_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2366_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2366_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2366_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2366_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2366_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2366_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2366_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2366_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2366_unit_code_idx"
  end

  create_table "trade_sandbox_2368", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2368_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2368_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2368_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2368_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2368_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2368_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2368_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2368_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2368_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2368_unit_code_idx"
  end

  create_table "trade_sandbox_2369", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2369_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2369_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2369_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2369_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2369_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2369_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2369_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2369_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2369_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2369_unit_code_idx"
  end

  create_table "trade_sandbox_2370", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2370_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2370_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2370_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2370_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2370_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2370_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2370_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2370_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2370_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2370_unit_code_idx"
  end

  create_table "trade_sandbox_2371", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2371_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2371_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2371_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2371_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2371_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2371_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2371_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2371_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2371_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2371_unit_code_idx"
  end

  create_table "trade_sandbox_2372", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2372_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2372_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2372_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2372_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2372_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2372_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2372_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2372_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2372_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2372_unit_code_idx"
  end

  create_table "trade_sandbox_2373", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2373_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2373_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2373_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2373_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2373_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2373_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2373_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2373_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2373_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2373_unit_code_idx"
  end

  create_table "trade_sandbox_2374", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2374_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2374_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2374_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2374_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2374_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2374_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2374_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2374_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2374_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2374_unit_code_idx"
  end

  create_table "trade_sandbox_2375", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2375_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2375_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2375_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2375_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2375_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2375_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2375_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2375_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2375_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2375_unit_code_idx"
  end

  create_table "trade_sandbox_2376", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2376_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2376_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2376_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2376_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2376_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2376_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2376_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2376_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2376_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2376_unit_code_idx"
  end

  create_table "trade_sandbox_2377", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2377_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2377_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2377_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2377_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2377_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2377_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2377_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2377_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2377_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2377_unit_code_idx"
  end

  create_table "trade_sandbox_2378", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2378_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2378_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2378_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2378_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2378_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2378_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2378_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2378_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2378_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2378_unit_code_idx"
  end

  create_table "trade_sandbox_2379", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2379_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2379_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2379_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2379_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2379_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2379_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2379_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2379_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2379_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2379_unit_code_idx"
  end

  create_table "trade_sandbox_2382", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2382_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2382_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2382_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2382_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2382_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2382_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2382_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2382_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2382_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2382_unit_code_idx"
  end

  create_table "trade_sandbox_2383", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2383_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2383_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2383_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2383_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2383_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2383_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2383_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2383_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2383_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2383_unit_code_idx"
  end

  create_table "trade_sandbox_2384", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2384_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2384_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2384_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2384_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2384_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2384_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2384_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2384_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2384_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2384_unit_code_idx"
  end

  create_table "trade_sandbox_2385", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2385_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2385_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2385_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2385_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2385_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2385_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2385_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2385_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2385_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2385_unit_code_idx"
  end

  create_table "trade_sandbox_2386", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2386_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2386_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2386_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2386_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2386_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2386_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2386_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2386_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2386_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2386_unit_code_idx"
  end

  create_table "trade_sandbox_2387", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2387_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2387_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2387_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2387_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2387_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2387_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2387_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2387_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2387_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2387_unit_code_idx"
  end

  create_table "trade_sandbox_2388", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2388_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2388_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2388_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2388_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2388_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2388_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2388_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2388_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2388_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2388_unit_code_idx"
  end

  create_table "trade_sandbox_2389", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2389_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2389_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2389_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2389_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2389_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2389_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2389_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2389_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2389_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2389_unit_code_idx"
  end

  create_table "trade_sandbox_2390", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2390_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2390_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2390_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2390_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2390_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2390_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2390_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2390_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2390_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2390_unit_code_idx"
  end

  create_table "trade_sandbox_2391", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2391_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2391_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2391_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2391_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2391_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2391_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2391_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2391_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2391_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2391_unit_code_idx"
  end

  create_table "trade_sandbox_2392", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2392_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2392_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2392_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2392_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2392_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2392_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2392_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2392_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2392_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2392_unit_code_idx"
  end

  create_table "trade_sandbox_2393", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2393_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2393_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2393_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2393_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2393_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2393_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2393_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2393_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2393_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2393_unit_code_idx"
  end

  create_table "trade_sandbox_2394", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2394_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2394_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2394_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2394_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2394_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2394_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2394_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2394_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2394_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2394_unit_code_idx"
  end

  create_table "trade_sandbox_2395", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2395_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2395_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2395_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2395_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2395_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2395_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2395_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2395_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2395_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2395_unit_code_idx"
  end

  create_table "trade_sandbox_2396", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2396_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2396_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2396_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2396_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2396_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2396_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2396_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2396_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2396_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2396_unit_code_idx"
  end

  create_table "trade_sandbox_2397", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2397_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2397_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2397_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2397_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2397_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2397_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2397_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2397_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2397_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2397_unit_code_idx"
  end

  create_table "trade_sandbox_2398", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2398_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2398_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2398_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2398_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2398_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2398_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2398_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2398_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2398_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2398_unit_code_idx"
  end

  create_table "trade_sandbox_2399", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2399_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2399_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2399_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2399_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2399_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2399_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2399_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2399_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2399_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2399_unit_code_idx"
  end

  create_table "trade_sandbox_2400", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2400_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2400_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2400_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2400_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2400_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2400_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2400_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2400_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2400_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2400_unit_code_idx"
  end

  create_table "trade_sandbox_2401", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2401_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2401_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2401_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2401_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2401_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2401_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2401_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2401_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2401_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2401_unit_code_idx"
  end

  create_table "trade_sandbox_2402", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2402_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2402_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2402_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2402_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2402_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2402_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2402_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2402_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2402_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2402_unit_code_idx"
  end

  create_table "trade_sandbox_2403", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2403_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2403_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2403_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2403_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2403_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2403_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2403_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2403_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2403_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2403_unit_code_idx"
  end

  create_table "trade_sandbox_2404", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2404_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2404_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2404_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2404_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2404_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2404_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2404_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2404_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2404_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2404_unit_code_idx"
  end

  create_table "trade_sandbox_2405", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2405_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2405_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2405_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2405_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2405_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2405_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2405_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2405_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2405_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2405_unit_code_idx"
  end

  create_table "trade_sandbox_2406", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2406_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2406_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2406_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2406_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2406_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2406_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2406_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2406_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2406_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2406_unit_code_idx"
  end

  create_table "trade_sandbox_2407", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2407_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2407_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2407_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2407_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2407_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2407_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2407_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2407_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2407_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2407_unit_code_idx"
  end

  create_table "trade_sandbox_2408", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2408_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2408_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2408_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2408_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2408_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2408_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2408_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2408_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2408_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2408_unit_code_idx"
  end

  create_table "trade_sandbox_2409", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2409_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2409_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2409_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2409_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2409_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2409_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2409_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2409_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2409_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2409_unit_code_idx"
  end

  create_table "trade_sandbox_2410", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2410_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2410_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2410_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2410_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2410_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2410_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2410_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2410_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2410_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2410_unit_code_idx"
  end

  create_table "trade_sandbox_2411", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2411_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2411_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2411_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2411_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2411_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2411_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2411_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2411_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2411_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2411_unit_code_idx"
  end

  create_table "trade_sandbox_2412", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2412_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2412_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2412_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2412_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2412_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2412_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2412_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2412_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2412_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2412_unit_code_idx"
  end

  create_table "trade_sandbox_2413", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2413_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2413_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2413_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2413_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2413_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2413_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2413_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2413_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2413_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2413_unit_code_idx"
  end

  create_table "trade_sandbox_2414", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2414_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2414_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2414_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2414_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2414_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2414_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2414_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2414_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2414_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2414_unit_code_idx"
  end

  create_table "trade_sandbox_2415", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2415_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2415_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2415_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2415_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2415_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2415_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2415_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2415_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2415_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2415_unit_code_idx"
  end

  create_table "trade_sandbox_2416", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2416_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2416_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2416_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2416_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2416_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2416_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2416_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2416_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2416_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2416_unit_code_idx"
  end

  create_table "trade_sandbox_2417", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2417_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2417_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2417_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2417_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2417_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2417_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2417_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2417_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2417_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2417_unit_code_idx"
  end

  create_table "trade_sandbox_2418", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2418_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2418_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2418_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2418_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2418_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2418_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2418_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2418_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2418_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2418_unit_code_idx"
  end

  create_table "trade_sandbox_2419", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2419_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2419_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2419_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2419_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2419_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2419_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2419_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2419_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2419_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2419_unit_code_idx"
  end

  create_table "trade_sandbox_2420", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2420_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2420_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2420_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2420_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2420_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2420_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2420_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2420_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2420_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2420_unit_code_idx"
  end

  create_table "trade_sandbox_2421", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2421_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2421_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2421_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2421_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2421_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2421_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2421_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2421_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2421_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2421_unit_code_idx"
  end

  create_table "trade_sandbox_2422", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2422_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2422_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2422_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2422_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2422_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2422_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2422_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2422_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2422_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2422_unit_code_idx"
  end

  create_table "trade_sandbox_2423", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2423_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2423_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2423_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2423_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2423_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2423_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2423_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2423_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2423_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2423_unit_code_idx"
  end

  create_table "trade_sandbox_2424", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2424_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2424_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2424_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2424_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2424_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2424_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2424_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2424_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2424_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2424_unit_code_idx"
  end

  create_table "trade_sandbox_2425", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2425_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2425_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2425_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2425_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2425_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2425_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2425_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2425_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2425_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2425_unit_code_idx"
  end

  create_table "trade_sandbox_2426", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2426_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2426_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2426_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2426_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2426_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2426_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2426_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2426_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2426_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2426_unit_code_idx"
  end

  create_table "trade_sandbox_2427", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2427_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2427_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2427_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2427_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2427_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2427_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2427_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2427_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2427_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2427_unit_code_idx"
  end

  create_table "trade_sandbox_2428", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2428_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2428_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2428_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2428_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2428_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2428_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2428_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2428_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2428_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2428_unit_code_idx"
  end

  create_table "trade_sandbox_2430", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2430_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2430_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2430_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2430_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2430_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2430_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2430_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2430_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2430_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2430_unit_code_idx"
  end

  create_table "trade_sandbox_2431", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2431_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2431_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2431_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2431_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2431_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2431_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2431_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2431_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2431_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2431_unit_code_idx"
  end

  create_table "trade_sandbox_2432", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2432_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2432_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2432_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2432_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2432_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2432_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2432_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2432_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2432_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2432_unit_code_idx"
  end

  create_table "trade_sandbox_2433", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2433_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2433_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2433_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2433_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2433_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2433_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2433_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2433_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2433_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2433_unit_code_idx"
  end

  create_table "trade_sandbox_2434", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2434_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2434_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2434_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2434_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2434_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2434_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2434_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2434_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2434_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2434_unit_code_idx"
  end

  create_table "trade_sandbox_2435", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2435_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2435_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2435_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2435_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2435_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2435_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2435_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2435_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2435_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2435_unit_code_idx"
  end

  create_table "trade_sandbox_2436", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2436_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2436_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2436_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2436_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2436_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2436_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2436_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2436_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2436_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2436_unit_code_idx"
  end

  create_table "trade_sandbox_2437", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2437_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2437_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2437_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2437_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2437_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2437_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2437_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2437_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2437_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2437_unit_code_idx"
  end

  create_table "trade_sandbox_2438", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2438_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2438_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2438_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2438_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2438_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2438_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2438_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2438_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2438_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2438_unit_code_idx"
  end

  create_table "trade_sandbox_2439", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2439_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2439_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2439_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2439_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2439_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2439_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2439_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2439_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2439_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2439_unit_code_idx"
  end

  create_table "trade_sandbox_2441", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2441_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2441_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2441_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2441_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2441_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2441_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2441_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2441_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2441_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2441_unit_code_idx"
  end

  create_table "trade_sandbox_2442", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2442_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2442_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2442_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2442_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2442_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2442_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2442_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2442_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2442_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2442_unit_code_idx"
  end

  create_table "trade_sandbox_2443", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2443_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2443_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2443_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2443_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2443_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2443_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2443_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2443_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2443_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2443_unit_code_idx"
  end

  create_table "trade_sandbox_2444", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2444_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2444_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2444_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2444_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2444_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2444_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2444_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2444_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2444_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2444_unit_code_idx"
  end

  create_table "trade_sandbox_2445", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2445_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2445_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2445_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2445_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2445_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2445_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2445_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2445_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2445_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2445_unit_code_idx"
  end

  create_table "trade_sandbox_2446", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2446_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2446_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2446_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2446_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2446_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2446_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2446_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2446_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2446_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2446_unit_code_idx"
  end

  create_table "trade_sandbox_2447", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2447_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2447_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2447_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2447_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2447_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2447_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2447_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2447_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2447_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2447_unit_code_idx"
  end

  create_table "trade_sandbox_2448", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2448_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2448_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2448_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2448_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2448_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2448_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2448_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2448_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2448_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2448_unit_code_idx"
  end

  create_table "trade_sandbox_2449", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2449_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2449_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2449_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2449_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2449_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2449_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2449_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2449_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2449_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2449_unit_code_idx"
  end

  create_table "trade_sandbox_2450", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2450_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2450_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2450_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2450_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2450_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2450_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2450_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2450_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2450_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2450_unit_code_idx"
  end

  create_table "trade_sandbox_2451", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2451_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2451_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2451_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2451_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2451_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2451_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2451_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2451_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2451_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2451_unit_code_idx"
  end

  create_table "trade_sandbox_2452", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2452_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2452_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2452_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2452_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2452_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2452_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2452_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2452_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2452_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2452_unit_code_idx"
  end

  create_table "trade_sandbox_2453", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2453_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2453_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2453_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2453_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2453_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2453_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2453_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2453_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2453_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2453_unit_code_idx"
  end

  create_table "trade_sandbox_2454", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2454_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2454_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2454_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2454_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2454_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2454_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2454_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2454_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2454_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2454_unit_code_idx"
  end

  create_table "trade_sandbox_2455", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2455_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2455_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2455_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2455_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2455_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2455_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2455_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2455_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2455_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2455_unit_code_idx"
  end

  create_table "trade_sandbox_2456", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2456_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2456_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2456_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2456_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2456_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2456_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2456_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2456_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2456_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2456_unit_code_idx"
  end

  create_table "trade_sandbox_2458", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2458_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2458_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2458_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2458_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2458_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2458_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2458_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2458_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2458_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2458_unit_code_idx"
  end

  create_table "trade_sandbox_2459", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2459_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2459_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2459_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2459_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2459_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2459_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2459_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2459_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2459_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2459_unit_code_idx"
  end

  create_table "trade_sandbox_2460", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2460_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2460_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2460_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2460_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2460_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2460_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2460_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2460_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2460_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2460_unit_code_idx"
  end

  create_table "trade_sandbox_2461", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2461_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2461_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2461_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2461_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2461_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2461_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2461_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2461_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2461_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2461_unit_code_idx"
  end

  create_table "trade_sandbox_2462", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2462_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2462_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2462_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2462_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2462_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2462_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2462_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2462_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2462_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2462_unit_code_idx"
  end

  create_table "trade_sandbox_2463", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2463_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2463_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2463_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2463_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2463_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2463_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2463_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2463_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2463_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2463_unit_code_idx"
  end

  create_table "trade_sandbox_2464", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2464_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2464_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2464_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2464_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2464_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2464_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2464_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2464_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2464_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2464_unit_code_idx"
  end

  create_table "trade_sandbox_2465", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2465_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2465_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2465_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2465_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2465_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2465_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2465_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2465_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2465_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2465_unit_code_idx"
  end

  create_table "trade_sandbox_2466", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2466_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2466_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2466_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2466_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2466_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2466_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2466_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2466_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2466_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2466_unit_code_idx"
  end

  create_table "trade_sandbox_2467", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2467_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2467_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2467_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2467_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2467_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2467_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2467_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2467_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2467_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2467_unit_code_idx"
  end

  create_table "trade_sandbox_2468", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2468_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2468_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2468_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2468_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2468_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2468_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2468_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2468_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2468_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2468_unit_code_idx"
  end

  create_table "trade_sandbox_2469", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2469_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2469_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2469_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2469_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2469_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2469_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2469_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2469_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2469_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2469_unit_code_idx"
  end

  create_table "trade_sandbox_2470", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2470_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2470_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2470_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2470_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2470_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2470_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2470_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2470_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2470_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2470_unit_code_idx"
  end

  create_table "trade_sandbox_2471", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2471_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2471_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2471_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2471_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2471_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2471_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2471_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2471_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2471_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2471_unit_code_idx"
  end

  create_table "trade_sandbox_2472", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2472_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2472_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2472_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2472_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2472_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2472_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2472_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2472_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2472_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2472_unit_code_idx"
  end

  create_table "trade_sandbox_2473", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2473_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2473_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2473_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2473_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2473_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2473_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2473_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2473_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2473_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2473_unit_code_idx"
  end

  create_table "trade_sandbox_2475", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2475_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2475_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2475_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2475_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2475_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2475_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2475_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2475_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2475_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2475_unit_code_idx"
  end

  create_table "trade_sandbox_2476", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2476_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2476_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2476_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2476_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2476_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2476_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2476_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2476_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2476_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2476_unit_code_idx"
  end

  create_table "trade_sandbox_2477", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2477_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2477_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2477_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2477_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2477_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2477_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2477_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2477_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2477_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2477_unit_code_idx"
  end

  create_table "trade_sandbox_2478", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2478_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2478_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2478_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2478_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2478_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2478_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2478_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2478_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2478_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2478_unit_code_idx"
  end

  create_table "trade_sandbox_2479", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2479_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2479_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2479_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2479_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2479_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2479_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2479_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2479_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2479_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2479_unit_code_idx"
  end

  create_table "trade_sandbox_2480", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2480_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2480_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2480_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2480_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2480_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2480_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2480_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2480_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2480_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2480_unit_code_idx"
  end

  create_table "trade_sandbox_2482", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2482_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2482_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2482_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2482_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2482_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2482_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2482_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2482_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2482_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2482_unit_code_idx"
  end

  create_table "trade_sandbox_2483", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2483_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2483_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2483_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2483_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2483_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2483_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2483_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2483_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2483_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2483_unit_code_idx"
  end

  create_table "trade_sandbox_2484", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2484_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2484_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2484_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2484_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2484_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2484_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2484_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2484_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2484_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2484_unit_code_idx"
  end

  create_table "trade_sandbox_2485", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2485_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2485_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2485_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2485_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2485_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2485_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2485_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2485_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2485_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2485_unit_code_idx"
  end

  create_table "trade_sandbox_2486", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2486_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2486_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2486_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2486_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2486_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2486_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2486_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2486_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2486_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2486_unit_code_idx"
  end

  create_table "trade_sandbox_2488", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2488_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2488_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2488_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2488_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2488_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2488_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2488_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2488_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2488_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2488_unit_code_idx"
  end

  create_table "trade_sandbox_2489", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2489_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2489_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2489_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2489_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2489_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2489_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2489_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2489_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2489_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2489_unit_code_idx"
  end

  create_table "trade_sandbox_2490", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2490_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2490_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2490_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2490_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2490_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2490_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2490_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2490_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2490_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2490_unit_code_idx"
  end

  create_table "trade_sandbox_2491", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2491_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2491_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2491_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2491_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2491_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2491_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2491_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2491_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2491_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2491_unit_code_idx"
  end

  create_table "trade_sandbox_2493", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2493_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2493_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2493_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2493_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2493_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2493_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2493_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2493_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2493_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2493_unit_code_idx"
  end

  create_table "trade_sandbox_2494", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2494_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2494_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2494_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2494_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2494_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2494_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2494_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2494_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2494_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2494_unit_code_idx"
  end

  create_table "trade_sandbox_2495", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2495_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2495_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2495_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2495_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2495_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2495_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2495_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2495_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2495_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2495_unit_code_idx"
  end

  create_table "trade_sandbox_2496", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2496_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2496_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2496_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2496_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2496_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2496_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2496_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2496_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2496_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2496_unit_code_idx"
  end

  create_table "trade_sandbox_2497", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2497_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2497_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2497_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2497_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2497_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2497_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2497_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2497_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2497_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2497_unit_code_idx"
  end

  create_table "trade_sandbox_2498", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2498_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2498_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2498_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2498_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2498_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2498_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2498_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2498_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2498_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2498_unit_code_idx"
  end

  create_table "trade_sandbox_2500", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2500_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2500_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2500_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2500_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2500_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2500_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2500_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2500_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2500_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2500_unit_code_idx"
  end

  create_table "trade_sandbox_2501", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2501_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2501_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2501_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2501_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2501_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2501_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2501_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2501_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2501_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2501_unit_code_idx"
  end

  create_table "trade_sandbox_2502", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2502_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2502_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2502_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2502_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2502_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2502_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2502_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2502_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2502_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2502_unit_code_idx"
  end

  create_table "trade_sandbox_2503", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2503_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2503_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2503_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2503_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2503_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2503_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2503_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2503_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2503_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2503_unit_code_idx"
  end

  create_table "trade_sandbox_2504", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2504_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2504_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2504_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2504_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2504_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2504_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2504_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2504_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2504_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2504_unit_code_idx"
  end

  create_table "trade_sandbox_2505", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2505_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2505_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2505_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2505_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2505_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2505_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2505_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2505_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2505_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2505_unit_code_idx"
  end

  create_table "trade_sandbox_2506", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2506_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2506_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2506_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2506_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2506_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2506_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2506_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2506_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2506_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2506_unit_code_idx"
  end

  create_table "trade_sandbox_2507", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2507_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2507_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2507_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2507_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2507_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2507_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2507_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2507_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2507_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2507_unit_code_idx"
  end

  create_table "trade_sandbox_2508", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2508_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2508_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2508_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2508_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2508_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2508_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2508_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2508_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2508_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2508_unit_code_idx"
  end

  create_table "trade_sandbox_2509", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2509_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2509_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2509_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2509_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2509_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2509_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2509_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2509_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2509_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2509_unit_code_idx"
  end

  create_table "trade_sandbox_2510", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2510_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2510_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2510_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2510_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2510_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2510_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2510_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2510_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2510_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2510_unit_code_idx"
  end

  create_table "trade_sandbox_2511", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2511_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2511_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2511_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2511_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2511_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2511_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2511_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2511_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2511_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2511_unit_code_idx"
  end

  create_table "trade_sandbox_2512", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2512_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2512_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2512_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2512_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2512_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2512_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2512_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2512_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2512_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2512_unit_code_idx"
  end

  create_table "trade_sandbox_2513", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2513_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2513_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2513_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2513_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2513_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2513_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2513_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2513_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2513_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2513_unit_code_idx"
  end

  create_table "trade_sandbox_2515", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2515_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2515_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2515_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2515_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2515_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2515_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2515_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2515_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2515_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2515_unit_code_idx"
  end

  create_table "trade_sandbox_2516", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2516_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2516_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2516_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2516_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2516_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2516_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2516_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2516_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2516_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2516_unit_code_idx"
  end

  create_table "trade_sandbox_2517", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2517_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2517_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2517_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2517_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2517_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2517_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2517_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2517_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2517_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2517_unit_code_idx"
  end

  create_table "trade_sandbox_2518", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2518_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2518_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2518_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2518_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2518_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2518_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2518_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2518_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2518_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2518_unit_code_idx"
  end

  create_table "trade_sandbox_2519", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2519_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2519_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2519_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2519_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2519_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2519_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2519_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2519_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2519_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2519_unit_code_idx"
  end

  create_table "trade_sandbox_2523", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2523_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2523_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2523_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2523_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2523_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2523_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2523_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2523_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2523_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2523_unit_code_idx"
  end

  create_table "trade_sandbox_2524", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2524_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2524_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2524_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2524_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2524_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2524_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2524_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2524_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2524_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2524_unit_code_idx"
  end

  create_table "trade_sandbox_2525", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2525_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2525_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2525_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2525_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2525_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2525_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2525_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2525_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2525_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2525_unit_code_idx"
  end

  create_table "trade_sandbox_2526", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2526_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2526_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2526_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2526_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2526_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2526_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2526_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2526_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2526_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2526_unit_code_idx"
  end

  create_table "trade_sandbox_2527", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2527_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2527_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2527_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2527_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2527_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2527_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2527_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2527_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2527_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2527_unit_code_idx"
  end

  create_table "trade_sandbox_2528", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2528_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2528_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2528_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2528_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2528_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2528_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2528_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2528_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2528_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2528_unit_code_idx"
  end

  create_table "trade_sandbox_2529", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2529_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2529_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2529_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2529_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2529_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2529_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2529_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2529_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2529_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2529_unit_code_idx"
  end

  create_table "trade_sandbox_2530", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2530_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2530_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2530_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2530_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2530_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2530_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2530_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2530_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2530_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2530_unit_code_idx"
  end

  create_table "trade_sandbox_2531", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2531_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2531_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2531_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2531_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2531_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2531_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2531_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2531_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2531_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2531_unit_code_idx"
  end

  create_table "trade_sandbox_2532", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2532_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2532_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2532_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2532_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2532_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2532_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2532_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2532_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2532_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2532_unit_code_idx"
  end

  create_table "trade_sandbox_2533", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2533_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2533_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2533_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2533_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2533_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2533_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2533_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2533_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2533_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2533_unit_code_idx"
  end

  create_table "trade_sandbox_2534", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2534_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2534_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2534_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2534_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2534_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2534_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2534_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2534_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2534_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2534_unit_code_idx"
  end

  create_table "trade_sandbox_2535", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2535_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2535_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2535_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2535_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2535_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2535_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2535_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2535_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2535_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2535_unit_code_idx"
  end

  create_table "trade_sandbox_2536", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2536_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2536_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2536_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2536_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2536_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2536_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2536_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2536_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2536_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2536_unit_code_idx"
  end

  create_table "trade_sandbox_2537", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2537_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2537_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2537_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2537_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2537_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2537_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2537_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2537_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2537_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2537_unit_code_idx"
  end

  create_table "trade_sandbox_2538", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2538_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2538_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2538_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2538_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2538_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2538_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2538_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2538_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2538_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2538_unit_code_idx"
  end

  create_table "trade_sandbox_2540", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2540_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2540_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2540_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2540_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2540_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2540_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2540_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2540_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2540_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2540_unit_code_idx"
  end

  create_table "trade_sandbox_2541", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2541_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2541_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2541_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2541_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2541_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2541_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2541_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2541_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2541_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2541_unit_code_idx"
  end

  create_table "trade_sandbox_2542", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2542_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2542_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2542_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2542_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2542_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2542_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2542_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2542_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2542_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2542_unit_code_idx"
  end

  create_table "trade_sandbox_2543", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2543_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2543_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2543_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2543_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2543_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2543_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2543_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2543_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2543_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2543_unit_code_idx"
  end

  create_table "trade_sandbox_2544", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2544_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2544_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2544_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2544_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2544_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2544_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2544_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2544_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2544_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2544_unit_code_idx"
  end

  create_table "trade_sandbox_2545", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2545_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2545_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2545_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2545_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2545_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2545_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2545_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2545_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2545_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2545_unit_code_idx"
  end

  create_table "trade_sandbox_2546", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2546_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2546_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2546_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2546_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2546_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2546_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2546_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2546_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2546_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2546_unit_code_idx"
  end

  create_table "trade_sandbox_2547", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2547_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2547_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2547_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2547_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2547_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2547_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2547_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2547_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2547_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2547_unit_code_idx"
  end

  create_table "trade_sandbox_2548", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2548_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2548_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2548_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2548_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2548_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2548_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2548_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2548_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2548_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2548_unit_code_idx"
  end

  create_table "trade_sandbox_2549", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2549_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2549_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2549_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2549_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2549_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2549_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2549_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2549_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2549_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2549_unit_code_idx"
  end

  create_table "trade_sandbox_2550", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2550_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2550_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2550_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2550_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2550_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2550_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2550_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2550_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2550_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2550_unit_code_idx"
  end

  create_table "trade_sandbox_2551", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2551_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2551_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2551_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2551_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2551_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2551_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2551_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2551_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2551_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2551_unit_code_idx"
  end

  create_table "trade_sandbox_2552", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2552_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2552_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2552_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2552_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2552_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2552_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2552_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2552_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2552_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2552_unit_code_idx"
  end

  create_table "trade_sandbox_2553", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2553_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2553_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2553_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2553_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2553_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2553_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2553_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2553_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2553_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2553_unit_code_idx"
  end

  create_table "trade_sandbox_2554", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2554_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2554_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2554_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2554_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2554_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2554_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2554_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2554_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2554_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2554_unit_code_idx"
  end

  create_table "trade_sandbox_2556", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2556_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2556_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2556_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2556_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2556_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2556_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2556_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2556_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2556_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2556_unit_code_idx"
  end

  create_table "trade_sandbox_2557", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2557_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2557_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2557_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2557_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2557_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2557_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2557_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2557_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2557_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2557_unit_code_idx"
  end

  create_table "trade_sandbox_2558", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2558_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2558_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2558_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2558_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2558_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2558_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2558_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2558_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2558_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2558_unit_code_idx"
  end

  create_table "trade_sandbox_2559", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2559_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2559_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2559_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2559_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2559_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2559_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2559_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2559_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2559_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2559_unit_code_idx"
  end

  create_table "trade_sandbox_2560", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2560_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2560_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2560_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2560_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2560_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2560_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2560_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2560_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2560_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2560_unit_code_idx"
  end

  create_table "trade_sandbox_2561", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2561_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2561_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2561_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2561_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2561_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2561_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2561_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2561_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2561_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2561_unit_code_idx"
  end

  create_table "trade_sandbox_2563", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2563_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2563_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2563_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2563_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2563_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2563_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2563_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2563_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2563_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2563_unit_code_idx"
  end

  create_table "trade_sandbox_2564", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2564_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2564_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2564_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2564_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2564_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2564_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2564_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2564_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2564_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2564_unit_code_idx"
  end

  create_table "trade_sandbox_2565", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2565_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2565_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2565_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2565_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2565_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2565_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2565_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2565_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2565_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2565_unit_code_idx"
  end

  create_table "trade_sandbox_2567", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2567_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2567_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2567_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2567_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2567_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2567_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2567_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2567_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2567_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2567_unit_code_idx"
  end

  create_table "trade_sandbox_2568", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2568_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2568_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2568_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2568_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2568_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2568_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2568_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2568_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2568_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2568_unit_code_idx"
  end

  create_table "trade_sandbox_2570", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2570_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2570_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2570_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2570_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2570_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2570_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2570_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2570_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2570_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2570_unit_code_idx"
  end

  create_table "trade_sandbox_2572", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2572_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2572_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2572_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2572_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2572_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2572_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2572_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2572_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2572_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2572_unit_code_idx"
  end

  create_table "trade_sandbox_2573", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2573_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2573_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2573_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2573_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2573_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2573_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2573_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2573_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2573_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2573_unit_code_idx"
  end

  create_table "trade_sandbox_2574", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2574_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2574_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2574_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2574_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2574_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2574_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2574_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2574_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2574_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2574_unit_code_idx"
  end

  create_table "trade_sandbox_2576", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2576_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2576_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2576_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2576_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2576_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2576_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2576_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2576_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2576_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2576_unit_code_idx"
  end

  create_table "trade_sandbox_2579", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2579_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2579_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2579_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2579_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2579_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2579_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2579_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2579_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2579_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2579_unit_code_idx"
  end

  create_table "trade_sandbox_2580", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2580_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2580_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2580_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2580_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2580_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2580_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2580_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2580_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2580_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2580_unit_code_idx"
  end

  create_table "trade_sandbox_2582", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2582_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2582_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2582_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2582_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2582_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2582_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2582_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2582_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2582_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2582_unit_code_idx"
  end

  create_table "trade_sandbox_2583", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2583_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2583_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2583_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2583_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2583_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2583_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2583_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2583_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2583_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2583_unit_code_idx"
  end

  create_table "trade_sandbox_2584", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2584_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2584_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2584_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2584_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2584_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2584_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2584_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2584_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2584_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2584_unit_code_idx"
  end

  create_table "trade_sandbox_2585", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2585_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2585_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2585_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2585_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2585_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2585_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2585_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2585_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2585_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2585_unit_code_idx"
  end

  create_table "trade_sandbox_2586", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2586_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2586_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2586_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2586_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2586_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2586_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2586_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2586_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2586_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2586_unit_code_idx"
  end

  create_table "trade_sandbox_2587", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2587_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2587_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2587_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2587_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2587_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2587_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2587_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2587_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2587_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2587_unit_code_idx"
  end

  create_table "trade_sandbox_2588", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2588_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2588_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2588_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2588_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2588_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2588_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2588_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2588_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2588_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2588_unit_code_idx"
  end

  create_table "trade_sandbox_2590", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2590_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2590_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2590_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2590_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2590_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2590_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2590_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2590_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2590_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2590_unit_code_idx"
  end

  create_table "trade_sandbox_2591", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2591_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2591_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2591_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2591_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2591_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2591_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2591_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2591_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2591_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2591_unit_code_idx"
  end

  create_table "trade_sandbox_2592", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2592_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2592_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2592_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2592_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2592_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2592_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2592_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2592_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2592_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2592_unit_code_idx"
  end

  create_table "trade_sandbox_2593", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2593_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2593_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2593_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2593_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2593_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2593_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2593_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2593_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2593_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2593_unit_code_idx"
  end

  create_table "trade_sandbox_2594", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2594_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2594_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2594_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2594_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2594_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2594_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2594_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2594_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2594_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2594_unit_code_idx"
  end

  create_table "trade_sandbox_2595", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2595_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2595_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2595_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2595_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2595_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2595_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2595_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2595_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2595_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2595_unit_code_idx"
  end

  create_table "trade_sandbox_2596", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2596_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2596_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2596_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2596_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2596_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2596_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2596_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2596_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2596_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2596_unit_code_idx"
  end

  create_table "trade_sandbox_2597", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2597_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2597_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2597_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2597_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2597_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2597_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2597_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2597_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2597_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2597_unit_code_idx"
  end

  create_table "trade_sandbox_2600", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2600_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2600_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2600_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2600_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2600_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2600_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2600_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2600_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2600_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2600_unit_code_idx"
  end

  create_table "trade_sandbox_2602", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2602_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2602_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2602_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2602_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2602_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2602_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2602_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2602_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2602_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2602_unit_code_idx"
  end

  create_table "trade_sandbox_2603", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2603_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2603_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2603_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2603_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2603_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2603_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2603_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2603_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2603_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2603_unit_code_idx"
  end

  create_table "trade_sandbox_2604", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2604_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2604_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2604_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2604_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2604_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2604_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2604_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2604_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2604_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2604_unit_code_idx"
  end

  create_table "trade_sandbox_2605", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2605_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2605_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2605_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2605_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2605_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2605_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2605_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2605_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2605_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2605_unit_code_idx"
  end

  create_table "trade_sandbox_2606", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2606_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2606_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2606_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2606_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2606_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2606_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2606_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2606_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2606_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2606_unit_code_idx"
  end

  create_table "trade_sandbox_2607", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2607_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2607_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2607_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2607_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2607_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2607_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2607_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2607_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2607_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2607_unit_code_idx"
  end

  create_table "trade_sandbox_2608", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2608_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2608_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2608_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2608_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2608_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2608_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2608_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2608_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2608_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2608_unit_code_idx"
  end

  create_table "trade_sandbox_2609", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2609_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2609_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2609_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2609_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2609_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2609_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2609_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2609_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2609_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2609_unit_code_idx"
  end

  create_table "trade_sandbox_2610", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2610_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2610_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2610_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2610_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2610_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2610_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2610_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2610_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2610_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2610_unit_code_idx"
  end

  create_table "trade_sandbox_2611", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2611_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2611_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2611_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2611_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2611_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2611_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2611_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2611_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2611_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2611_unit_code_idx"
  end

  create_table "trade_sandbox_2612", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2612_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2612_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2612_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2612_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2612_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2612_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2612_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2612_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2612_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2612_unit_code_idx"
  end

  create_table "trade_sandbox_2613", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2613_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2613_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2613_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2613_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2613_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2613_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2613_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2613_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2613_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2613_unit_code_idx"
  end

  create_table "trade_sandbox_2614", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2614_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2614_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2614_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2614_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2614_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2614_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2614_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2614_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2614_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2614_unit_code_idx"
  end

  create_table "trade_sandbox_2615", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2615_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2615_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2615_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2615_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2615_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2615_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2615_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2615_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2615_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2615_unit_code_idx"
  end

  create_table "trade_sandbox_2616", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2616_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2616_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2616_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2616_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2616_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2616_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2616_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2616_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2616_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2616_unit_code_idx"
  end

  create_table "trade_sandbox_2622", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2622_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2622_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2622_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2622_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2622_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2622_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2622_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2622_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2622_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2622_unit_code_idx"
  end

  create_table "trade_sandbox_2623", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2623_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2623_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2623_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2623_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2623_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2623_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2623_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2623_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2623_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2623_unit_code_idx"
  end

  create_table "trade_sandbox_2624", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2624_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2624_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2624_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2624_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2624_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2624_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2624_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2624_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2624_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2624_unit_code_idx"
  end

  create_table "trade_sandbox_2625", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2625_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2625_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2625_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2625_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2625_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2625_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2625_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2625_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2625_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2625_unit_code_idx"
  end

  create_table "trade_sandbox_2629", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2629_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2629_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2629_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2629_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2629_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2629_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2629_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2629_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2629_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2629_unit_code_idx"
  end

  create_table "trade_sandbox_2630", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2630_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2630_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2630_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2630_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2630_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2630_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2630_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2630_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2630_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2630_unit_code_idx"
  end

  create_table "trade_sandbox_2633", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2633_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2633_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2633_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2633_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2633_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2633_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2633_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2633_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2633_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2633_unit_code_idx"
  end

  create_table "trade_sandbox_2634", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2634_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2634_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2634_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2634_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2634_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2634_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2634_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2634_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2634_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2634_unit_code_idx"
  end

  create_table "trade_sandbox_2635", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2635_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2635_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2635_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2635_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2635_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2635_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2635_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2635_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2635_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2635_unit_code_idx"
  end

  create_table "trade_sandbox_2636", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2636_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2636_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2636_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2636_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2636_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2636_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2636_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2636_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2636_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2636_unit_code_idx"
  end

  create_table "trade_sandbox_2637", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2637_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2637_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2637_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2637_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2637_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2637_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2637_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2637_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2637_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2637_unit_code_idx"
  end

  create_table "trade_sandbox_2638", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2638_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2638_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2638_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2638_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2638_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2638_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2638_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2638_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2638_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2638_unit_code_idx"
  end

  create_table "trade_sandbox_2639", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2639_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2639_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2639_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2639_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2639_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2639_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2639_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2639_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2639_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2639_unit_code_idx"
  end

  create_table "trade_sandbox_2644", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2644_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2644_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2644_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2644_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2644_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2644_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2644_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2644_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2644_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2644_unit_code_idx"
  end

  create_table "trade_sandbox_2645", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2645_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2645_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2645_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2645_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2645_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2645_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2645_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2645_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2645_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2645_unit_code_idx"
  end

  create_table "trade_sandbox_2646", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2646_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2646_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2646_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2646_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2646_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2646_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2646_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2646_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2646_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2646_unit_code_idx"
  end

  create_table "trade_sandbox_2648", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2648_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2648_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2648_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2648_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2648_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2648_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2648_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2648_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2648_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2648_unit_code_idx"
  end

  create_table "trade_sandbox_2649", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2649_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2649_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2649_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2649_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2649_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2649_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2649_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2649_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2649_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2649_unit_code_idx"
  end

  create_table "trade_sandbox_2650", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2650_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2650_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2650_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2650_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2650_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2650_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2650_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2650_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2650_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2650_unit_code_idx"
  end

  create_table "trade_sandbox_2651", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2651_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2651_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2651_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2651_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2651_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2651_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2651_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2651_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2651_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2651_unit_code_idx"
  end

  create_table "trade_sandbox_2652", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2652_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2652_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2652_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2652_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2652_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2652_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2652_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2652_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2652_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2652_unit_code_idx"
  end

  create_table "trade_sandbox_2653", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2653_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2653_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2653_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2653_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2653_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2653_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2653_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2653_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2653_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2653_unit_code_idx"
  end

  create_table "trade_sandbox_2654", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2654_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2654_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2654_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2654_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2654_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2654_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2654_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2654_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2654_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2654_unit_code_idx"
  end

  create_table "trade_sandbox_2655", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2655_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2655_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2655_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2655_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2655_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2655_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2655_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2655_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2655_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2655_unit_code_idx"
  end

  create_table "trade_sandbox_2656", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2656_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2656_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2656_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2656_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2656_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2656_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2656_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2656_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2656_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2656_unit_code_idx"
  end

  create_table "trade_sandbox_2657", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2657_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2657_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2657_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2657_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2657_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2657_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2657_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2657_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2657_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2657_unit_code_idx"
  end

  create_table "trade_sandbox_2658", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2658_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2658_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2658_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2658_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2658_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2658_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2658_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2658_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2658_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2658_unit_code_idx"
  end

  create_table "trade_sandbox_2659", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2659_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2659_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2659_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2659_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2659_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2659_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2659_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2659_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2659_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2659_unit_code_idx"
  end

  create_table "trade_sandbox_2661", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2661_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2661_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2661_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2661_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2661_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2661_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2661_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2661_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2661_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2661_unit_code_idx"
  end

  create_table "trade_sandbox_2662", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2662_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2662_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2662_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2662_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2662_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2662_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2662_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2662_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2662_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2662_unit_code_idx"
  end

  create_table "trade_sandbox_2663", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2663_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2663_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2663_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2663_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2663_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2663_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2663_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2663_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2663_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2663_unit_code_idx"
  end

  create_table "trade_sandbox_2664", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2664_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2664_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2664_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2664_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2664_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2664_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2664_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2664_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2664_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2664_unit_code_idx"
  end

  create_table "trade_sandbox_2665", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2665_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2665_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2665_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2665_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2665_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2665_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2665_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2665_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2665_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2665_unit_code_idx"
  end

  create_table "trade_sandbox_2666", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2666_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2666_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2666_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2666_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2666_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2666_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2666_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2666_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2666_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2666_unit_code_idx"
  end

  create_table "trade_sandbox_2667", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2667_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2667_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2667_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2667_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2667_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2667_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2667_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2667_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2667_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2667_unit_code_idx"
  end

  create_table "trade_sandbox_2668", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2668_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2668_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2668_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2668_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2668_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2668_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2668_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2668_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2668_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2668_unit_code_idx"
  end

  create_table "trade_sandbox_2669", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2669_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2669_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2669_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2669_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2669_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2669_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2669_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2669_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2669_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2669_unit_code_idx"
  end

  create_table "trade_sandbox_2671", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2671_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2671_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2671_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2671_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2671_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2671_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2671_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2671_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2671_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2671_unit_code_idx"
  end

  create_table "trade_sandbox_2672", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2672_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2672_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2672_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2672_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2672_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2672_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2672_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2672_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2672_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2672_unit_code_idx"
  end

  create_table "trade_sandbox_2673", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2673_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2673_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2673_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2673_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2673_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2673_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2673_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2673_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2673_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2673_unit_code_idx"
  end

  create_table "trade_sandbox_2675", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2675_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2675_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2675_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2675_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2675_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2675_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2675_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2675_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2675_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2675_unit_code_idx"
  end

  create_table "trade_sandbox_2676", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2676_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2676_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2676_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2676_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2676_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2676_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2676_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2676_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2676_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2676_unit_code_idx"
  end

  create_table "trade_sandbox_2677", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2677_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2677_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2677_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2677_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2677_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2677_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2677_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2677_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2677_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2677_unit_code_idx"
  end

  create_table "trade_sandbox_2679", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2679_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2679_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2679_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2679_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2679_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2679_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2679_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2679_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2679_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2679_unit_code_idx"
  end

  create_table "trade_sandbox_2680", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2680_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2680_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2680_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2680_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2680_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2680_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2680_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2680_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2680_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2680_unit_code_idx"
  end

  create_table "trade_sandbox_2681", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2681_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2681_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2681_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2681_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2681_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2681_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2681_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2681_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2681_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2681_unit_code_idx"
  end

  create_table "trade_sandbox_2682", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2682_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2682_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2682_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2682_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2682_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2682_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2682_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2682_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2682_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2682_unit_code_idx"
  end

  create_table "trade_sandbox_2683", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2683_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2683_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2683_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2683_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2683_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2683_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2683_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2683_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2683_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2683_unit_code_idx"
  end

  create_table "trade_sandbox_2685", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2685_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2685_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2685_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2685_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2685_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2685_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2685_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2685_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2685_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2685_unit_code_idx"
  end

  create_table "trade_sandbox_2689", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2689_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2689_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2689_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2689_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2689_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2689_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2689_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2689_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2689_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2689_unit_code_idx"
  end

  create_table "trade_sandbox_2690", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2690_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2690_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2690_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2690_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2690_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2690_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2690_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2690_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2690_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2690_unit_code_idx"
  end

  create_table "trade_sandbox_2691", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2691_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2691_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2691_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2691_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2691_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2691_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2691_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2691_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2691_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2691_unit_code_idx"
  end

  create_table "trade_sandbox_2692", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2692_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2692_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2692_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2692_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2692_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2692_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2692_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2692_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2692_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2692_unit_code_idx"
  end

  create_table "trade_sandbox_2693", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2693_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2693_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2693_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2693_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2693_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2693_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2693_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2693_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2693_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2693_unit_code_idx"
  end

  create_table "trade_sandbox_2694", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2694_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2694_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2694_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2694_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2694_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2694_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2694_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2694_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2694_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2694_unit_code_idx"
  end

  create_table "trade_sandbox_2695", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2695_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2695_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2695_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2695_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2695_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2695_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2695_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2695_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2695_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2695_unit_code_idx"
  end

  create_table "trade_sandbox_2696", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2696_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2696_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2696_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2696_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2696_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2696_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2696_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2696_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2696_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2696_unit_code_idx"
  end

  create_table "trade_sandbox_2697", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2697_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2697_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2697_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2697_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2697_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2697_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2697_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2697_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2697_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2697_unit_code_idx"
  end

  create_table "trade_sandbox_2699", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2699_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2699_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2699_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2699_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2699_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2699_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2699_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2699_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2699_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2699_unit_code_idx"
  end

  create_table "trade_sandbox_2700", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2700_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2700_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2700_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2700_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2700_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2700_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2700_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2700_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2700_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2700_unit_code_idx"
  end

  create_table "trade_sandbox_2701", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2701_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2701_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2701_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2701_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2701_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2701_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2701_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2701_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2701_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2701_unit_code_idx"
  end

  create_table "trade_sandbox_2707", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2707_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2707_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2707_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2707_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2707_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2707_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2707_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2707_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2707_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2707_unit_code_idx"
  end

  create_table "trade_sandbox_2708", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2708_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2708_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2708_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2708_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2708_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2708_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2708_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2708_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2708_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2708_unit_code_idx"
  end

  create_table "trade_sandbox_2709", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2709_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2709_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2709_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2709_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2709_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2709_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2709_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2709_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2709_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2709_unit_code_idx"
  end

  create_table "trade_sandbox_2713", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2713_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2713_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2713_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2713_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2713_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2713_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2713_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2713_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2713_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2713_unit_code_idx"
  end

  create_table "trade_sandbox_2715", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2715_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2715_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2715_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2715_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2715_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2715_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2715_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2715_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2715_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2715_unit_code_idx"
  end

  create_table "trade_sandbox_2717", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2717_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2717_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2717_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2717_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2717_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2717_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2717_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2717_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2717_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2717_unit_code_idx"
  end

  create_table "trade_sandbox_2720", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2720_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2720_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2720_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2720_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2720_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2720_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2720_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2720_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2720_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2720_unit_code_idx"
  end

  create_table "trade_sandbox_2721", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2721_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2721_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2721_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2721_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2721_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2721_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2721_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2721_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2721_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2721_unit_code_idx"
  end

  create_table "trade_sandbox_2722", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2722_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2722_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2722_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2722_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2722_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2722_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2722_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2722_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2722_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2722_unit_code_idx"
  end

  create_table "trade_sandbox_2723", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2723_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2723_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2723_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2723_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2723_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2723_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2723_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2723_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2723_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2723_unit_code_idx"
  end

  create_table "trade_sandbox_2724", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2724_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2724_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2724_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2724_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2724_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2724_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2724_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2724_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2724_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2724_unit_code_idx"
  end

  create_table "trade_sandbox_2725", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2725_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2725_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2725_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2725_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2725_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2725_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2725_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2725_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2725_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2725_unit_code_idx"
  end

  create_table "trade_sandbox_2726", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2726_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2726_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2726_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2726_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2726_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2726_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2726_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2726_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2726_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2726_unit_code_idx"
  end

  create_table "trade_sandbox_2729", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2729_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2729_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2729_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2729_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2729_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2729_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2729_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2729_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2729_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2729_unit_code_idx"
  end

  create_table "trade_sandbox_2730", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2730_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2730_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2730_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2730_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2730_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2730_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2730_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2730_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2730_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2730_unit_code_idx"
  end

  create_table "trade_sandbox_2731", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2731_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2731_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2731_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2731_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2731_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2731_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2731_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2731_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2731_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2731_unit_code_idx"
  end

  create_table "trade_sandbox_2732", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2732_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2732_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2732_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2732_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2732_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2732_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2732_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2732_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2732_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2732_unit_code_idx"
  end

  create_table "trade_sandbox_2733", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2733_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2733_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2733_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2733_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2733_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2733_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2733_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2733_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2733_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2733_unit_code_idx"
  end

  create_table "trade_sandbox_2734", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2734_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2734_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2734_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2734_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2734_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2734_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2734_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2734_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2734_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2734_unit_code_idx"
  end

  create_table "trade_sandbox_2735", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2735_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2735_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2735_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2735_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2735_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2735_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2735_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2735_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2735_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2735_unit_code_idx"
  end

  create_table "trade_sandbox_2736", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2736_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2736_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2736_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2736_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2736_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2736_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2736_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2736_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2736_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2736_unit_code_idx"
  end

  create_table "trade_sandbox_2737", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2737_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2737_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2737_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2737_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2737_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2737_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2737_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2737_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2737_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2737_unit_code_idx"
  end

  create_table "trade_sandbox_2739", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2739_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2739_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2739_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2739_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2739_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2739_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2739_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2739_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2739_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2739_unit_code_idx"
  end

  create_table "trade_sandbox_2740", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2740_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2740_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2740_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2740_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2740_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2740_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2740_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2740_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2740_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2740_unit_code_idx"
  end

  create_table "trade_sandbox_2741", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2741_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2741_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2741_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2741_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2741_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2741_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2741_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2741_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2741_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2741_unit_code_idx"
  end

  create_table "trade_sandbox_2742", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2742_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2742_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2742_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2742_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2742_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2742_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2742_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2742_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2742_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2742_unit_code_idx"
  end

  create_table "trade_sandbox_2743", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2743_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2743_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2743_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2743_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2743_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2743_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2743_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2743_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2743_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2743_unit_code_idx"
  end

  create_table "trade_sandbox_2744", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2744_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2744_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2744_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2744_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2744_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2744_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2744_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2744_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2744_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2744_unit_code_idx"
  end

  create_table "trade_sandbox_2745", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2745_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2745_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2745_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2745_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2745_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2745_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2745_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2745_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2745_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2745_unit_code_idx"
  end

  create_table "trade_sandbox_2747", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2747_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2747_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2747_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2747_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2747_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2747_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2747_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2747_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2747_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2747_unit_code_idx"
  end

  create_table "trade_sandbox_2748", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2748_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2748_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2748_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2748_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2748_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2748_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2748_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2748_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2748_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2748_unit_code_idx"
  end

  create_table "trade_sandbox_2749", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2749_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2749_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2749_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2749_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2749_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2749_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2749_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2749_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2749_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2749_unit_code_idx"
  end

  create_table "trade_sandbox_2750", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2750_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2750_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2750_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2750_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2750_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2750_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2750_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2750_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2750_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2750_unit_code_idx"
  end

  create_table "trade_sandbox_2751", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2751_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2751_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2751_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2751_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2751_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2751_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2751_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2751_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2751_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2751_unit_code_idx"
  end

  create_table "trade_sandbox_2752", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2752_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2752_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2752_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2752_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2752_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2752_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2752_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2752_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2752_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2752_unit_code_idx"
  end

  create_table "trade_sandbox_2753", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2753_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2753_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2753_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2753_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2753_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2753_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2753_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2753_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2753_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2753_unit_code_idx"
  end

  create_table "trade_sandbox_2754", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2754_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2754_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2754_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2754_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2754_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2754_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2754_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2754_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2754_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2754_unit_code_idx"
  end

  create_table "trade_sandbox_2755", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2755_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2755_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2755_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2755_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2755_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2755_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2755_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2755_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2755_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2755_unit_code_idx"
  end

  create_table "trade_sandbox_2757", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2757_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2757_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2757_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2757_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2757_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2757_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2757_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2757_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2757_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2757_unit_code_idx"
  end

  create_table "trade_sandbox_2759", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2759_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2759_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2759_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2759_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2759_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2759_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2759_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2759_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2759_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2759_unit_code_idx"
  end

  create_table "trade_sandbox_2761", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2761_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2761_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2761_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2761_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2761_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2761_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2761_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2761_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2761_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2761_unit_code_idx"
  end

  create_table "trade_sandbox_2762", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2762_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2762_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2762_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2762_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2762_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2762_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2762_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2762_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2762_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2762_unit_code_idx"
  end

  create_table "trade_sandbox_2763", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2763_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2763_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2763_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2763_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2763_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2763_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2763_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2763_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2763_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2763_unit_code_idx"
  end

  create_table "trade_sandbox_2764", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2764_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2764_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2764_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2764_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2764_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2764_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2764_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2764_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2764_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2764_unit_code_idx"
  end

  create_table "trade_sandbox_2765", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2765_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2765_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2765_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2765_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2765_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2765_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2765_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2765_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2765_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2765_unit_code_idx"
  end

  create_table "trade_sandbox_2766", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2766_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2766_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2766_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2766_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2766_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2766_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2766_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2766_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2766_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2766_unit_code_idx"
  end

  create_table "trade_sandbox_2767", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2767_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2767_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2767_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2767_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2767_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2767_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2767_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2767_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2767_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2767_unit_code_idx"
  end

  create_table "trade_sandbox_2768", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2768_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2768_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2768_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2768_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2768_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2768_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2768_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2768_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2768_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2768_unit_code_idx"
  end

  create_table "trade_sandbox_2769", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2769_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2769_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2769_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2769_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2769_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2769_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2769_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2769_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2769_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2769_unit_code_idx"
  end

  create_table "trade_sandbox_2770", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2770_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2770_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2770_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2770_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2770_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2770_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2770_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2770_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2770_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2770_unit_code_idx"
  end

  create_table "trade_sandbox_2771", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2771_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2771_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2771_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2771_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2771_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2771_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2771_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2771_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2771_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2771_unit_code_idx"
  end

  create_table "trade_sandbox_2772", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2772_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2772_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2772_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2772_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2772_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2772_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2772_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2772_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2772_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2772_unit_code_idx"
  end

  create_table "trade_sandbox_2773", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2773_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2773_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2773_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2773_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2773_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2773_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2773_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2773_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2773_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2773_unit_code_idx"
  end

  create_table "trade_sandbox_2774", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2774_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2774_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2774_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2774_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2774_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2774_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2774_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2774_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2774_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2774_unit_code_idx"
  end

  create_table "trade_sandbox_2775", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2775_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2775_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2775_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2775_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2775_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2775_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2775_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2775_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2775_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2775_unit_code_idx"
  end

  create_table "trade_sandbox_2777", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2777_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2777_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2777_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2777_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2777_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2777_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2777_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2777_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2777_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2777_unit_code_idx"
  end

  create_table "trade_sandbox_2779", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2779_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2779_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2779_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2779_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2779_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2779_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2779_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2779_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2779_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2779_unit_code_idx"
  end

  create_table "trade_sandbox_2780", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2780_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2780_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2780_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2780_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2780_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2780_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2780_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2780_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2780_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2780_unit_code_idx"
  end

  create_table "trade_sandbox_2782", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2782_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2782_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2782_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2782_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2782_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2782_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2782_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2782_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2782_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2782_unit_code_idx"
  end

  create_table "trade_sandbox_2783", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2783_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2783_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2783_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2783_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2783_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2783_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2783_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2783_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2783_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2783_unit_code_idx"
  end

  create_table "trade_sandbox_2786", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2786_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2786_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2786_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2786_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2786_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2786_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2786_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2786_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2786_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2786_unit_code_idx"
  end

  create_table "trade_sandbox_2787", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2787_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2787_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2787_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2787_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2787_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2787_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2787_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2787_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2787_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2787_unit_code_idx"
  end

  create_table "trade_sandbox_2788", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2788_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2788_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2788_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2788_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2788_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2788_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2788_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2788_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2788_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2788_unit_code_idx"
  end

  create_table "trade_sandbox_2789", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2789_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2789_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2789_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2789_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2789_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2789_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2789_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2789_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2789_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2789_unit_code_idx"
  end

  create_table "trade_sandbox_2791", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2791_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2791_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2791_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2791_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2791_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2791_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2791_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2791_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2791_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2791_unit_code_idx"
  end

  create_table "trade_sandbox_2792", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2792_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2792_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2792_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2792_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2792_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2792_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2792_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2792_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2792_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2792_unit_code_idx"
  end

  create_table "trade_sandbox_2793", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2793_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2793_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2793_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2793_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2793_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2793_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2793_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2793_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2793_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2793_unit_code_idx"
  end

  create_table "trade_sandbox_2796", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2796_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2796_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2796_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2796_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2796_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2796_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2796_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2796_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2796_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2796_unit_code_idx"
  end

  create_table "trade_sandbox_2797", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2797_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2797_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2797_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2797_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2797_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2797_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2797_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2797_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2797_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2797_unit_code_idx"
  end

  create_table "trade_sandbox_2798", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2798_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2798_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2798_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2798_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2798_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2798_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2798_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2798_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2798_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2798_unit_code_idx"
  end

  create_table "trade_sandbox_2799", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2799_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2799_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2799_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2799_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2799_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2799_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2799_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2799_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2799_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2799_unit_code_idx"
  end

  create_table "trade_sandbox_2800", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2800_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2800_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2800_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2800_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2800_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2800_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2800_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2800_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2800_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2800_unit_code_idx"
  end

  create_table "trade_sandbox_2801", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2801_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2801_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2801_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2801_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2801_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2801_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2801_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2801_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2801_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2801_unit_code_idx"
  end

  create_table "trade_sandbox_2802", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2802_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2802_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2802_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2802_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2802_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2802_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2802_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2802_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2802_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2802_unit_code_idx"
  end

  create_table "trade_sandbox_2804", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2804_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2804_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2804_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2804_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2804_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2804_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2804_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2804_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2804_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2804_unit_code_idx"
  end

  create_table "trade_sandbox_2805", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2805_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2805_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2805_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2805_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2805_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2805_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2805_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2805_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2805_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2805_unit_code_idx"
  end

  create_table "trade_sandbox_2806", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2806_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2806_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2806_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2806_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2806_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2806_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2806_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2806_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2806_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2806_unit_code_idx"
  end

  create_table "trade_sandbox_2807", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2807_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2807_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2807_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2807_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2807_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2807_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2807_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2807_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2807_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2807_unit_code_idx"
  end

  create_table "trade_sandbox_2808", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2808_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2808_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2808_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2808_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2808_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2808_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2808_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2808_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2808_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2808_unit_code_idx"
  end

  create_table "trade_sandbox_2809", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2809_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2809_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2809_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2809_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2809_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2809_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2809_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2809_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2809_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2809_unit_code_idx"
  end

  create_table "trade_sandbox_2810", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2810_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2810_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2810_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2810_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2810_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2810_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2810_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2810_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2810_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2810_unit_code_idx"
  end

  create_table "trade_sandbox_2811", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2811_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2811_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2811_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2811_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2811_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2811_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2811_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2811_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2811_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2811_unit_code_idx"
  end

  create_table "trade_sandbox_2812", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2812_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2812_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2812_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2812_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2812_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2812_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2812_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2812_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2812_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2812_unit_code_idx"
  end

  create_table "trade_sandbox_2813", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2813_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2813_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2813_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2813_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2813_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2813_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2813_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2813_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2813_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2813_unit_code_idx"
  end

  create_table "trade_sandbox_2814", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2814_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2814_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2814_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2814_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2814_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2814_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2814_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2814_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2814_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2814_unit_code_idx"
  end

  create_table "trade_sandbox_2815", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2815_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2815_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2815_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2815_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2815_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2815_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2815_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2815_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2815_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2815_unit_code_idx"
  end

  create_table "trade_sandbox_2816", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2816_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2816_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2816_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2816_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2816_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2816_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2816_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2816_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2816_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2816_unit_code_idx"
  end

  create_table "trade_sandbox_2818", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2818_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2818_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2818_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2818_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2818_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2818_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2818_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2818_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2818_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2818_unit_code_idx"
  end

  create_table "trade_sandbox_2819", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2819_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2819_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2819_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2819_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2819_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2819_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2819_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2819_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2819_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2819_unit_code_idx"
  end

  create_table "trade_sandbox_2820", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2820_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2820_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2820_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2820_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2820_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2820_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2820_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2820_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2820_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2820_unit_code_idx"
  end

  create_table "trade_sandbox_2822", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2822_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2822_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2822_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2822_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2822_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2822_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2822_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2822_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2822_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2822_unit_code_idx"
  end

  create_table "trade_sandbox_2823", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2823_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2823_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2823_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2823_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2823_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2823_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2823_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2823_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2823_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2823_unit_code_idx"
  end

  create_table "trade_sandbox_2824", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2824_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2824_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2824_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2824_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2824_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2824_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2824_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2824_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2824_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2824_unit_code_idx"
  end

  create_table "trade_sandbox_2825", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2825_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2825_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2825_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2825_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2825_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2825_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2825_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2825_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2825_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2825_unit_code_idx"
  end

  create_table "trade_sandbox_2826", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2826_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2826_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2826_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2826_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2826_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2826_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2826_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2826_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2826_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2826_unit_code_idx"
  end

  create_table "trade_sandbox_2827", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2827_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2827_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2827_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2827_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2827_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2827_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2827_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2827_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2827_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2827_unit_code_idx"
  end

  create_table "trade_sandbox_2829", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2829_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2829_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2829_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2829_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2829_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2829_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2829_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2829_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2829_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2829_unit_code_idx"
  end

  create_table "trade_sandbox_2830", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2830_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2830_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2830_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2830_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2830_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2830_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2830_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2830_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2830_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2830_unit_code_idx"
  end

  create_table "trade_sandbox_2831", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2831_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2831_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2831_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2831_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2831_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2831_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2831_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2831_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2831_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2831_unit_code_idx"
  end

  create_table "trade_sandbox_2832", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2832_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2832_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2832_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2832_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2832_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2832_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2832_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2832_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2832_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2832_unit_code_idx"
  end

  create_table "trade_sandbox_2833", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2833_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2833_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2833_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2833_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2833_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2833_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2833_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2833_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2833_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2833_unit_code_idx"
  end

  create_table "trade_sandbox_2834", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2834_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2834_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2834_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2834_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2834_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2834_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2834_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2834_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2834_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2834_unit_code_idx"
  end

  create_table "trade_sandbox_2835", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2835_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2835_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2835_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2835_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2835_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2835_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2835_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2835_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2835_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2835_unit_code_idx"
  end

  create_table "trade_sandbox_2836", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2836_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2836_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2836_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2836_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2836_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2836_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2836_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2836_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2836_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2836_unit_code_idx"
  end

  create_table "trade_sandbox_2837", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2837_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2837_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2837_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2837_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2837_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2837_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2837_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2837_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2837_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2837_unit_code_idx"
  end

  create_table "trade_sandbox_2838", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2838_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2838_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2838_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2838_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2838_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2838_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2838_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2838_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2838_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2838_unit_code_idx"
  end

  create_table "trade_sandbox_2839", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2839_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2839_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2839_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2839_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2839_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2839_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2839_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2839_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2839_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2839_unit_code_idx"
  end

  create_table "trade_sandbox_2840", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2840_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2840_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2840_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2840_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2840_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2840_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2840_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2840_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2840_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2840_unit_code_idx"
  end

  create_table "trade_sandbox_2841", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2841_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2841_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2841_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2841_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2841_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2841_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2841_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2841_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2841_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2841_unit_code_idx"
  end

  create_table "trade_sandbox_2842", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2842_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2842_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2842_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2842_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2842_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2842_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2842_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2842_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2842_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2842_unit_code_idx"
  end

  create_table "trade_sandbox_2843", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2843_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2843_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2843_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2843_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2843_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2843_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2843_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2843_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2843_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2843_unit_code_idx"
  end

  create_table "trade_sandbox_2844", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2844_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2844_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2844_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2844_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2844_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2844_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2844_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2844_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2844_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2844_unit_code_idx"
  end

  create_table "trade_sandbox_2846", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2846_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2846_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2846_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2846_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2846_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2846_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2846_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2846_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2846_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2846_unit_code_idx"
  end

  create_table "trade_sandbox_2847", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2847_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2847_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2847_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2847_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2847_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2847_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2847_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2847_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2847_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2847_unit_code_idx"
  end

  create_table "trade_sandbox_2848", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2848_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2848_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2848_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2848_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2848_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2848_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2848_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2848_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2848_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2848_unit_code_idx"
  end

  create_table "trade_sandbox_2849", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2849_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2849_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2849_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2849_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2849_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2849_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2849_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2849_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2849_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2849_unit_code_idx"
  end

  create_table "trade_sandbox_2850", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2850_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2850_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2850_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2850_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2850_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2850_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2850_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2850_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2850_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2850_unit_code_idx"
  end

  create_table "trade_sandbox_2851", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2851_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2851_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2851_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2851_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2851_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2851_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2851_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2851_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2851_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2851_unit_code_idx"
  end

  create_table "trade_sandbox_2852", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2852_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2852_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2852_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2852_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2852_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2852_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2852_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2852_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2852_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2852_unit_code_idx"
  end

  create_table "trade_sandbox_2853", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2853_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2853_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2853_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2853_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2853_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2853_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2853_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2853_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2853_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2853_unit_code_idx"
  end

  create_table "trade_sandbox_2855", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2855_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2855_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2855_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2855_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2855_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2855_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2855_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2855_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2855_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2855_unit_code_idx"
  end

  create_table "trade_sandbox_2856", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2856_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2856_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2856_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2856_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2856_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2856_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2856_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2856_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2856_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2856_unit_code_idx"
  end

  create_table "trade_sandbox_2857", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2857_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2857_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2857_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2857_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2857_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2857_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2857_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2857_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2857_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2857_unit_code_idx"
  end

  create_table "trade_sandbox_2859", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2859_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2859_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2859_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2859_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2859_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2859_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2859_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2859_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2859_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2859_unit_code_idx"
  end

  create_table "trade_sandbox_2860", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2860_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2860_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2860_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2860_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2860_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2860_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2860_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2860_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2860_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2860_unit_code_idx"
  end

  create_table "trade_sandbox_2861", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2861_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2861_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2861_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2861_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2861_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2861_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2861_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2861_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2861_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2861_unit_code_idx"
  end

  create_table "trade_sandbox_2862", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2862_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2862_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2862_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2862_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2862_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2862_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2862_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2862_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2862_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2862_unit_code_idx"
  end

  create_table "trade_sandbox_2863", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2863_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2863_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2863_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2863_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2863_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2863_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2863_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2863_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2863_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2863_unit_code_idx"
  end

  create_table "trade_sandbox_2864", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2864_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2864_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2864_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2864_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2864_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2864_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2864_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2864_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2864_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2864_unit_code_idx"
  end

  create_table "trade_sandbox_2865", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2865_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2865_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2865_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2865_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2865_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2865_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2865_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2865_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2865_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2865_unit_code_idx"
  end

  create_table "trade_sandbox_2866", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2866_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2866_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2866_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2866_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2866_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2866_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2866_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2866_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2866_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2866_unit_code_idx"
  end

  create_table "trade_sandbox_2867", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2867_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2867_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2867_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2867_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2867_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2867_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2867_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2867_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2867_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2867_unit_code_idx"
  end

  create_table "trade_sandbox_2869", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2869_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2869_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2869_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2869_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2869_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2869_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2869_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2869_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2869_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2869_unit_code_idx"
  end

  create_table "trade_sandbox_2870", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2870_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2870_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2870_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2870_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2870_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2870_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2870_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2870_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2870_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2870_unit_code_idx"
  end

  create_table "trade_sandbox_2871", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2871_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2871_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2871_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2871_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2871_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2871_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2871_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2871_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2871_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2871_unit_code_idx"
  end

  create_table "trade_sandbox_2872", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2872_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2872_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2872_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2872_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2872_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2872_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2872_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2872_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2872_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2872_unit_code_idx"
  end

  create_table "trade_sandbox_2873", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2873_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2873_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2873_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2873_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2873_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2873_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2873_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2873_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2873_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2873_unit_code_idx"
  end

  create_table "trade_sandbox_2874", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2874_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2874_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2874_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2874_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2874_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2874_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2874_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2874_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2874_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2874_unit_code_idx"
  end

  create_table "trade_sandbox_2875", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2875_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2875_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2875_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2875_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2875_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2875_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2875_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2875_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2875_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2875_unit_code_idx"
  end

  create_table "trade_sandbox_2876", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2876_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2876_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2876_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2876_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2876_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2876_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2876_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2876_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2876_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2876_unit_code_idx"
  end

  create_table "trade_sandbox_2877", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2877_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2877_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2877_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2877_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2877_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2877_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2877_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2877_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2877_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2877_unit_code_idx"
  end

  create_table "trade_sandbox_2878", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2878_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2878_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2878_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2878_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2878_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2878_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2878_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2878_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2878_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2878_unit_code_idx"
  end

  create_table "trade_sandbox_2879", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2879_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2879_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2879_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2879_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2879_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2879_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2879_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2879_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2879_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2879_unit_code_idx"
  end

  create_table "trade_sandbox_2880", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2880_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2880_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2880_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2880_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2880_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2880_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2880_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2880_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2880_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2880_unit_code_idx"
  end

  create_table "trade_sandbox_2881", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2881_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2881_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2881_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2881_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2881_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2881_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2881_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2881_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2881_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2881_unit_code_idx"
  end

  create_table "trade_sandbox_2882", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2882_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2882_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2882_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2882_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2882_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2882_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2882_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2882_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2882_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2882_unit_code_idx"
  end

  create_table "trade_sandbox_2883", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2883_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2883_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2883_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2883_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2883_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2883_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2883_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2883_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2883_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2883_unit_code_idx"
  end

  create_table "trade_sandbox_2884", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2884_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2884_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2884_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2884_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2884_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2884_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2884_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2884_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2884_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2884_unit_code_idx"
  end

  create_table "trade_sandbox_2885", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2885_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2885_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2885_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2885_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2885_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2885_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2885_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2885_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2885_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2885_unit_code_idx"
  end

  create_table "trade_sandbox_2886", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2886_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2886_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2886_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2886_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2886_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2886_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2886_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2886_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2886_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2886_unit_code_idx"
  end

  create_table "trade_sandbox_2887", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2887_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2887_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2887_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2887_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2887_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2887_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2887_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2887_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2887_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2887_unit_code_idx"
  end

  create_table "trade_sandbox_2888", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2888_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2888_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2888_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2888_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2888_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2888_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2888_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2888_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2888_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2888_unit_code_idx"
  end

  create_table "trade_sandbox_2889", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2889_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2889_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2889_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2889_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2889_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2889_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2889_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2889_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2889_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2889_unit_code_idx"
  end

  create_table "trade_sandbox_2890", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2890_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2890_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2890_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2890_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2890_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2890_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2890_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2890_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2890_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2890_unit_code_idx"
  end

  create_table "trade_sandbox_2891", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2891_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2891_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2891_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2891_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2891_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2891_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2891_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2891_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2891_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2891_unit_code_idx"
  end

  create_table "trade_sandbox_2892", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2892_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2892_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2892_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2892_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2892_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2892_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2892_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2892_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2892_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2892_unit_code_idx"
  end

  create_table "trade_sandbox_2893", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2893_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2893_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2893_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2893_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2893_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2893_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2893_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2893_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2893_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2893_unit_code_idx"
  end

  create_table "trade_sandbox_2894", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2894_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2894_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2894_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2894_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2894_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2894_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2894_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2894_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2894_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2894_unit_code_idx"
  end

  create_table "trade_sandbox_2898", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2898_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2898_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2898_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2898_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2898_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2898_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2898_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2898_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2898_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2898_unit_code_idx"
  end

  create_table "trade_sandbox_2899", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2899_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2899_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2899_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2899_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2899_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2899_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2899_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2899_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2899_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2899_unit_code_idx"
  end

  create_table "trade_sandbox_2901", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2901_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2901_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2901_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2901_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2901_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2901_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2901_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2901_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2901_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2901_unit_code_idx"
  end

  create_table "trade_sandbox_2902", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2902_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2902_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2902_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2902_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2902_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2902_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2902_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2902_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2902_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2902_unit_code_idx"
  end

  create_table "trade_sandbox_2903", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2903_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2903_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2903_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2903_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2903_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2903_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2903_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2903_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2903_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2903_unit_code_idx"
  end

  create_table "trade_sandbox_2904", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2904_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2904_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2904_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2904_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2904_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2904_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2904_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2904_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2904_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2904_unit_code_idx"
  end

  create_table "trade_sandbox_2905", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2905_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2905_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2905_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2905_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2905_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2905_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2905_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2905_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2905_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2905_unit_code_idx"
  end

  create_table "trade_sandbox_2906", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2906_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2906_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2906_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2906_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2906_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2906_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2906_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2906_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2906_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2906_unit_code_idx"
  end

  create_table "trade_sandbox_2908", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2908_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2908_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2908_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2908_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2908_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2908_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2908_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2908_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2908_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2908_unit_code_idx"
  end

  create_table "trade_sandbox_2909", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2909_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2909_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2909_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2909_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2909_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2909_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2909_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2909_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2909_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2909_unit_code_idx"
  end

  create_table "trade_sandbox_2910", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2910_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2910_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2910_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2910_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2910_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2910_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2910_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2910_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2910_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2910_unit_code_idx"
  end

  create_table "trade_sandbox_2911", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2911_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2911_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2911_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2911_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2911_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2911_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2911_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2911_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2911_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2911_unit_code_idx"
  end

  create_table "trade_sandbox_2912", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2912_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2912_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2912_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2912_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2912_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2912_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2912_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2912_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2912_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2912_unit_code_idx"
  end

  create_table "trade_sandbox_2913", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2913_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2913_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2913_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2913_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2913_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2913_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2913_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2913_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2913_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2913_unit_code_idx"
  end

  create_table "trade_sandbox_2917", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2917_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2917_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2917_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2917_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2917_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2917_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2917_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2917_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2917_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2917_unit_code_idx"
  end

  create_table "trade_sandbox_2918", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2918_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2918_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2918_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2918_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2918_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2918_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2918_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2918_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2918_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2918_unit_code_idx"
  end

  create_table "trade_sandbox_2919", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2919_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2919_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2919_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2919_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2919_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2919_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2919_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2919_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2919_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2919_unit_code_idx"
  end

  create_table "trade_sandbox_2920", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2920_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2920_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2920_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2920_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2920_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2920_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2920_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2920_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2920_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2920_unit_code_idx"
  end

  create_table "trade_sandbox_2921", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2921_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2921_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2921_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2921_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2921_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2921_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2921_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2921_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2921_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2921_unit_code_idx"
  end

  create_table "trade_sandbox_2922", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2922_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2922_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2922_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2922_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2922_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2922_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2922_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2922_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2922_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2922_unit_code_idx"
  end

  create_table "trade_sandbox_2923", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2923_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2923_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2923_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2923_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2923_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2923_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2923_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2923_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2923_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2923_unit_code_idx"
  end

  create_table "trade_sandbox_2924", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2924_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2924_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2924_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2924_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2924_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2924_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2924_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2924_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2924_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2924_unit_code_idx"
  end

  create_table "trade_sandbox_2925", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2925_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2925_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2925_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2925_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2925_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2925_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2925_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2925_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2925_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2925_unit_code_idx"
  end

  create_table "trade_sandbox_2926", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2926_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2926_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2926_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2926_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2926_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2926_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2926_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2926_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2926_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2926_unit_code_idx"
  end

  create_table "trade_sandbox_2927", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2927_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2927_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2927_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2927_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2927_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2927_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2927_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2927_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2927_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2927_unit_code_idx"
  end

  create_table "trade_sandbox_2928", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2928_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2928_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2928_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2928_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2928_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2928_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2928_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2928_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2928_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2928_unit_code_idx"
  end

  create_table "trade_sandbox_2942", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2942_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2942_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2942_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2942_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2942_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2942_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2942_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2942_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2942_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2942_unit_code_idx"
  end

  create_table "trade_sandbox_2943", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2943_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2943_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2943_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2943_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2943_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2943_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2943_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2943_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2943_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2943_unit_code_idx"
  end

  create_table "trade_sandbox_2944", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2944_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2944_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2944_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2944_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2944_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2944_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2944_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2944_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2944_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2944_unit_code_idx"
  end

  create_table "trade_sandbox_2945", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2945_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2945_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2945_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2945_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2945_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2945_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2945_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2945_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2945_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2945_unit_code_idx"
  end

  create_table "trade_sandbox_2946", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2946_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2946_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2946_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2946_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2946_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2946_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2946_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2946_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2946_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2946_unit_code_idx"
  end

  create_table "trade_sandbox_2948", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2948_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2948_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2948_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2948_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2948_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2948_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2948_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2948_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2948_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2948_unit_code_idx"
  end

  create_table "trade_sandbox_2949", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2949_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2949_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2949_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2949_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2949_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2949_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2949_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2949_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2949_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2949_unit_code_idx"
  end

  create_table "trade_sandbox_2950", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2950_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2950_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2950_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2950_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2950_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2950_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2950_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2950_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2950_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2950_unit_code_idx"
  end

  create_table "trade_sandbox_2951", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2951_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2951_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2951_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2951_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2951_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2951_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2951_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2951_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2951_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2951_unit_code_idx"
  end

  create_table "trade_sandbox_2952", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2952_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2952_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2952_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2952_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2952_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2952_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2952_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2952_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2952_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2952_unit_code_idx"
  end

  create_table "trade_sandbox_2953", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2953_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2953_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2953_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2953_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2953_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2953_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2953_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2953_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2953_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2953_unit_code_idx"
  end

  create_table "trade_sandbox_2954", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2954_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2954_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2954_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2954_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2954_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2954_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2954_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2954_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2954_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2954_unit_code_idx"
  end

  create_table "trade_sandbox_2956", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2956_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2956_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2956_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2956_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2956_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2956_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2956_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2956_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2956_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2956_unit_code_idx"
  end

  create_table "trade_sandbox_2957", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2957_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2957_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2957_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2957_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2957_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2957_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2957_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2957_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2957_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2957_unit_code_idx"
  end

  create_table "trade_sandbox_2958", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2958_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2958_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2958_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2958_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2958_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2958_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2958_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2958_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2958_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2958_unit_code_idx"
  end

  create_table "trade_sandbox_2959", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2959_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2959_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2959_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2959_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2959_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2959_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2959_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2959_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2959_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2959_unit_code_idx"
  end

  create_table "trade_sandbox_2960", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2960_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2960_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2960_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2960_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2960_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2960_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2960_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2960_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2960_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2960_unit_code_idx"
  end

  create_table "trade_sandbox_2961", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2961_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2961_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2961_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2961_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2961_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2961_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2961_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2961_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2961_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2961_unit_code_idx"
  end

  create_table "trade_sandbox_2962", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2962_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2962_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2962_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2962_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2962_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2962_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2962_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2962_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2962_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2962_unit_code_idx"
  end

  create_table "trade_sandbox_2963", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2963_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2963_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2963_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2963_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2963_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2963_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2963_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2963_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2963_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2963_unit_code_idx"
  end

  create_table "trade_sandbox_2964", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2964_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2964_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2964_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2964_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2964_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2964_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2964_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2964_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2964_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2964_unit_code_idx"
  end

  create_table "trade_sandbox_2965", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2965_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2965_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2965_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2965_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2965_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2965_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2965_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2965_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2965_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2965_unit_code_idx"
  end

  create_table "trade_sandbox_2966", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2966_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2966_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2966_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2966_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2966_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2966_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2966_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2966_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2966_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2966_unit_code_idx"
  end

  create_table "trade_sandbox_2968", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2968_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2968_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2968_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2968_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2968_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2968_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2968_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2968_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2968_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2968_unit_code_idx"
  end

  create_table "trade_sandbox_2969", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2969_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2969_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2969_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2969_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2969_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2969_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2969_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2969_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2969_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2969_unit_code_idx"
  end

  create_table "trade_sandbox_2970", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2970_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2970_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2970_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2970_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2970_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2970_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2970_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2970_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2970_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2970_unit_code_idx"
  end

  create_table "trade_sandbox_2971", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2971_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2971_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2971_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2971_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2971_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2971_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2971_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2971_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2971_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2971_unit_code_idx"
  end

  create_table "trade_sandbox_2972", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2972_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2972_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2972_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2972_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2972_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2972_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2972_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2972_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2972_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2972_unit_code_idx"
  end

  create_table "trade_sandbox_2973", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2973_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2973_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2973_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2973_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2973_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2973_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2973_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2973_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2973_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2973_unit_code_idx"
  end

  create_table "trade_sandbox_2974", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2974_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2974_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2974_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2974_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2974_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2974_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2974_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2974_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2974_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2974_unit_code_idx"
  end

  create_table "trade_sandbox_2975", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2975_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2975_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2975_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2975_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2975_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2975_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2975_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2975_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2975_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2975_unit_code_idx"
  end

  create_table "trade_sandbox_2976", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2976_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2976_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2976_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2976_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2976_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2976_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2976_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2976_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2976_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2976_unit_code_idx"
  end

  create_table "trade_sandbox_2977", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2977_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2977_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2977_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2977_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2977_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2977_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2977_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2977_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2977_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2977_unit_code_idx"
  end

  create_table "trade_sandbox_2978", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2978_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2978_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2978_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2978_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2978_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2978_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2978_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2978_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2978_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2978_unit_code_idx"
  end

  create_table "trade_sandbox_2979", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2979_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2979_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2979_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2979_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2979_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2979_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2979_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2979_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2979_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2979_unit_code_idx"
  end

  create_table "trade_sandbox_2980", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2980_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2980_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2980_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2980_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2980_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2980_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2980_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2980_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2980_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2980_unit_code_idx"
  end

  create_table "trade_sandbox_2981", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2981_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2981_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2981_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2981_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2981_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2981_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2981_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2981_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2981_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2981_unit_code_idx"
  end

  create_table "trade_sandbox_2983", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2983_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2983_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2983_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2983_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2983_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2983_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2983_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2983_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2983_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2983_unit_code_idx"
  end

  create_table "trade_sandbox_2984", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2984_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2984_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2984_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2984_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2984_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2984_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2984_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2984_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2984_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2984_unit_code_idx"
  end

  create_table "trade_sandbox_2985", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2985_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2985_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2985_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2985_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2985_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2985_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2985_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2985_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2985_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2985_unit_code_idx"
  end

  create_table "trade_sandbox_2986", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2986_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2986_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2986_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2986_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2986_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2986_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2986_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2986_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2986_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2986_unit_code_idx"
  end

  create_table "trade_sandbox_2988", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2988_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2988_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2988_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2988_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2988_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2988_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2988_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2988_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2988_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2988_unit_code_idx"
  end

  create_table "trade_sandbox_2989", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2989_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2989_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2989_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2989_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2989_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2989_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2989_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2989_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2989_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2989_unit_code_idx"
  end

  create_table "trade_sandbox_2990", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2990_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2990_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2990_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2990_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2990_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2990_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2990_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2990_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2990_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2990_unit_code_idx"
  end

  create_table "trade_sandbox_2991", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2991_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2991_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2991_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2991_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2991_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2991_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2991_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2991_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2991_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2991_unit_code_idx"
  end

  create_table "trade_sandbox_2992", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2992_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2992_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2992_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2992_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2992_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2992_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2992_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2992_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2992_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2992_unit_code_idx"
  end

  create_table "trade_sandbox_2993", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2993_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2993_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2993_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2993_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2993_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2993_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2993_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2993_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2993_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2993_unit_code_idx"
  end

  create_table "trade_sandbox_2994", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2994_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2994_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2994_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2994_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2994_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2994_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2994_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2994_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2994_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2994_unit_code_idx"
  end

  create_table "trade_sandbox_2995", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2995_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2995_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2995_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2995_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2995_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2995_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2995_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2995_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2995_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2995_unit_code_idx"
  end

  create_table "trade_sandbox_2996", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2996_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2996_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2996_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2996_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2996_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2996_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2996_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2996_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2996_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2996_unit_code_idx"
  end

  create_table "trade_sandbox_2997", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2997_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2997_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2997_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2997_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2997_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2997_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2997_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2997_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2997_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2997_unit_code_idx"
  end

  create_table "trade_sandbox_2998", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_2998_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_2998_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_2998_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_2998_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_2998_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_2998_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_2998_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_2998_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_2998_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_2998_unit_code_idx"
  end

  create_table "trade_sandbox_3000", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3000_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3000_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3000_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3000_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3000_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3000_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3000_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3000_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3000_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3000_unit_code_idx"
  end

  create_table "trade_sandbox_3001", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3001_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3001_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3001_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3001_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3001_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3001_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3001_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3001_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3001_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3001_unit_code_idx"
  end

  create_table "trade_sandbox_3002", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3002_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3002_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3002_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3002_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3002_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3002_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3002_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3002_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3002_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3002_unit_code_idx"
  end

  create_table "trade_sandbox_3003", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3003_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3003_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3003_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3003_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3003_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3003_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3003_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3003_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3003_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3003_unit_code_idx"
  end

  create_table "trade_sandbox_3004", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3004_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3004_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3004_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3004_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3004_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3004_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3004_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3004_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3004_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3004_unit_code_idx"
  end

  create_table "trade_sandbox_3005", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3005_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3005_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3005_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3005_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3005_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3005_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3005_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3005_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3005_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3005_unit_code_idx"
  end

  create_table "trade_sandbox_3007", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3007_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3007_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3007_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3007_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3007_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3007_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3007_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3007_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3007_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3007_unit_code_idx"
  end

  create_table "trade_sandbox_3008", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3008_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3008_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3008_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3008_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3008_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3008_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3008_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3008_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3008_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3008_unit_code_idx"
  end

  create_table "trade_sandbox_3009", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3009_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3009_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3009_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3009_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3009_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3009_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3009_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3009_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3009_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3009_unit_code_idx"
  end

  create_table "trade_sandbox_3010", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3010_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3010_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3010_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3010_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3010_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3010_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3010_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3010_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3010_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3010_unit_code_idx"
  end

  create_table "trade_sandbox_3012", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3012_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3012_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3012_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3012_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3012_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3012_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3012_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3012_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3012_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3012_unit_code_idx"
  end

  create_table "trade_sandbox_3013", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3013_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3013_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3013_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3013_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3013_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3013_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3013_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3013_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3013_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3013_unit_code_idx"
  end

  create_table "trade_sandbox_3014", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3014_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3014_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3014_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3014_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3014_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3014_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3014_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3014_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3014_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3014_unit_code_idx"
  end

  create_table "trade_sandbox_3015", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3015_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3015_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3015_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3015_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3015_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3015_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3015_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3015_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3015_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3015_unit_code_idx"
  end

  create_table "trade_sandbox_3016", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3016_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3016_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3016_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3016_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3016_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3016_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3016_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3016_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3016_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3016_unit_code_idx"
  end

  create_table "trade_sandbox_3018", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3018_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3018_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3018_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3018_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3018_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3018_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3018_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3018_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3018_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3018_unit_code_idx"
  end

  create_table "trade_sandbox_3019", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3019_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3019_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3019_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3019_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3019_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3019_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3019_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3019_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3019_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3019_unit_code_idx"
  end

  create_table "trade_sandbox_3020", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3020_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3020_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3020_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3020_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3020_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3020_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3020_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3020_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3020_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3020_unit_code_idx"
  end

  create_table "trade_sandbox_3023", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3023_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3023_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3023_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3023_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3023_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3023_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3023_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3023_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3023_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3023_unit_code_idx"
  end

  create_table "trade_sandbox_3024", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3024_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3024_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3024_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3024_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3024_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3024_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3024_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3024_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3024_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3024_unit_code_idx"
  end

  create_table "trade_sandbox_3025", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3025_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3025_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3025_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3025_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3025_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3025_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3025_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3025_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3025_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3025_unit_code_idx"
  end

  create_table "trade_sandbox_3026", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3026_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3026_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3026_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3026_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3026_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3026_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3026_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3026_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3026_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3026_unit_code_idx"
  end

  create_table "trade_sandbox_3029", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3029_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3029_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3029_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3029_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3029_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3029_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3029_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3029_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3029_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3029_unit_code_idx"
  end

  create_table "trade_sandbox_3030", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3030_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3030_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3030_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3030_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3030_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3030_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3030_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3030_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3030_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3030_unit_code_idx"
  end

  create_table "trade_sandbox_3031", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3031_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3031_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3031_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3031_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3031_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3031_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3031_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3031_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3031_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3031_unit_code_idx"
  end

  create_table "trade_sandbox_3032", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3032_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3032_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3032_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3032_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3032_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3032_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3032_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3032_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3032_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3032_unit_code_idx"
  end

  create_table "trade_sandbox_3033", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3033_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3033_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3033_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3033_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3033_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3033_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3033_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3033_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3033_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3033_unit_code_idx"
  end

  create_table "trade_sandbox_3034", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3034_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3034_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3034_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3034_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3034_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3034_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3034_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3034_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3034_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3034_unit_code_idx"
  end

  create_table "trade_sandbox_3035", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3035_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3035_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3035_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3035_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3035_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3035_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3035_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3035_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3035_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3035_unit_code_idx"
  end

  create_table "trade_sandbox_3038", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3038_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3038_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3038_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3038_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3038_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3038_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3038_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3038_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3038_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3038_unit_code_idx"
  end

  create_table "trade_sandbox_3039", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3039_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3039_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3039_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3039_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3039_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3039_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3039_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3039_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3039_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3039_unit_code_idx"
  end

  create_table "trade_sandbox_3040", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3040_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3040_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3040_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3040_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3040_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3040_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3040_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3040_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3040_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3040_unit_code_idx"
  end

  create_table "trade_sandbox_3041", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3041_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3041_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3041_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3041_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3041_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3041_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3041_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3041_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3041_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3041_unit_code_idx"
  end

  create_table "trade_sandbox_3042", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3042_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3042_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3042_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3042_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3042_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3042_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3042_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3042_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3042_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3042_unit_code_idx"
  end

  create_table "trade_sandbox_3044", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3044_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3044_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3044_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3044_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3044_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3044_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3044_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3044_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3044_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3044_unit_code_idx"
  end

  create_table "trade_sandbox_3045", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3045_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3045_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3045_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3045_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3045_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3045_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3045_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3045_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3045_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3045_unit_code_idx"
  end

  create_table "trade_sandbox_3046", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3046_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3046_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3046_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3046_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3046_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3046_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3046_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3046_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3046_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3046_unit_code_idx"
  end

  create_table "trade_sandbox_3047", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3047_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3047_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3047_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3047_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3047_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3047_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3047_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3047_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3047_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3047_unit_code_idx"
  end

  create_table "trade_sandbox_3048", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3048_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3048_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3048_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3048_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3048_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3048_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3048_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3048_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3048_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3048_unit_code_idx"
  end

  create_table "trade_sandbox_3049", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3049_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3049_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3049_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3049_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3049_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3049_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3049_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3049_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3049_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3049_unit_code_idx"
  end

  create_table "trade_sandbox_3050", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3050_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3050_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3050_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3050_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3050_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3050_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3050_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3050_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3050_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3050_unit_code_idx"
  end

  create_table "trade_sandbox_3051", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3051_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3051_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3051_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3051_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3051_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3051_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3051_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3051_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3051_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3051_unit_code_idx"
  end

  create_table "trade_sandbox_3052", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3052_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3052_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3052_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3052_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3052_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3052_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3052_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3052_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3052_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3052_unit_code_idx"
  end

  create_table "trade_sandbox_3053", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3053_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3053_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3053_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3053_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3053_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3053_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3053_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3053_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3053_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3053_unit_code_idx"
  end

  create_table "trade_sandbox_3055", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3055_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3055_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3055_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3055_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3055_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3055_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3055_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3055_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3055_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3055_unit_code_idx"
  end

  create_table "trade_sandbox_3056", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3056_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3056_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3056_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3056_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3056_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3056_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3056_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3056_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3056_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3056_unit_code_idx"
  end

  create_table "trade_sandbox_3057", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3057_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3057_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3057_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3057_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3057_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3057_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3057_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3057_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3057_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3057_unit_code_idx"
  end

  create_table "trade_sandbox_3058", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3058_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3058_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3058_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3058_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3058_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3058_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3058_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3058_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3058_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3058_unit_code_idx"
  end

  create_table "trade_sandbox_3059", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3059_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3059_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3059_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3059_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3059_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3059_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3059_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3059_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3059_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3059_unit_code_idx"
  end

  create_table "trade_sandbox_3060", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3060_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3060_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3060_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3060_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3060_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3060_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3060_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3060_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3060_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3060_unit_code_idx"
  end

  create_table "trade_sandbox_3062", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3062_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3062_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3062_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3062_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3062_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3062_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3062_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3062_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3062_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3062_unit_code_idx"
  end

  create_table "trade_sandbox_3063", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3063_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3063_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3063_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3063_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3063_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3063_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3063_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3063_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3063_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3063_unit_code_idx"
  end

  create_table "trade_sandbox_3064", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3064_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3064_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3064_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3064_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3064_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3064_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3064_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3064_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3064_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3064_unit_code_idx"
  end

  create_table "trade_sandbox_3065", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3065_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3065_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3065_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3065_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3065_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3065_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3065_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3065_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3065_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3065_unit_code_idx"
  end

  create_table "trade_sandbox_3066", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3066_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3066_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3066_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3066_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3066_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3066_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3066_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3066_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3066_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3066_unit_code_idx"
  end

  create_table "trade_sandbox_3067", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3067_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3067_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3067_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3067_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3067_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3067_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3067_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3067_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3067_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3067_unit_code_idx"
  end

  create_table "trade_sandbox_3068", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3068_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3068_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3068_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3068_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3068_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3068_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3068_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3068_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3068_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3068_unit_code_idx"
  end

  create_table "trade_sandbox_3069", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3069_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3069_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3069_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3069_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3069_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3069_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3069_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3069_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3069_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3069_unit_code_idx"
  end

  create_table "trade_sandbox_3071", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3071_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3071_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3071_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3071_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3071_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3071_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3071_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3071_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3071_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3071_unit_code_idx"
  end

  create_table "trade_sandbox_3072", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3072_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3072_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3072_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3072_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3072_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3072_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3072_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3072_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3072_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3072_unit_code_idx"
  end

  create_table "trade_sandbox_3073", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3073_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3073_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3073_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3073_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3073_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3073_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3073_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3073_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3073_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3073_unit_code_idx"
  end

  create_table "trade_sandbox_3075", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3075_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3075_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3075_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3075_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3075_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3075_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3075_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3075_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3075_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3075_unit_code_idx"
  end

  create_table "trade_sandbox_3076", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3076_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3076_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3076_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3076_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3076_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3076_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3076_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3076_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3076_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3076_unit_code_idx"
  end

  create_table "trade_sandbox_3077", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3077_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3077_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3077_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3077_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3077_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3077_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3077_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3077_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3077_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3077_unit_code_idx"
  end

  create_table "trade_sandbox_3078", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3078_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3078_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3078_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3078_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3078_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3078_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3078_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3078_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3078_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3078_unit_code_idx"
  end

  create_table "trade_sandbox_3079", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3079_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3079_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3079_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3079_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3079_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3079_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3079_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3079_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3079_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3079_unit_code_idx"
  end

  create_table "trade_sandbox_3080", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3080_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3080_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3080_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3080_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3080_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3080_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3080_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3080_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3080_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3080_unit_code_idx"
  end

  create_table "trade_sandbox_3081", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3081_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3081_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3081_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3081_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3081_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3081_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3081_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3081_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3081_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3081_unit_code_idx"
  end

  create_table "trade_sandbox_3084", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3084_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3084_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3084_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3084_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3084_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3084_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3084_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3084_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3084_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3084_unit_code_idx"
  end

  create_table "trade_sandbox_3085", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3085_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3085_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3085_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3085_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3085_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3085_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3085_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3085_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3085_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3085_unit_code_idx"
  end

  create_table "trade_sandbox_3086", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3086_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3086_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3086_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3086_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3086_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3086_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3086_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3086_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3086_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3086_unit_code_idx"
  end

  create_table "trade_sandbox_3087", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3087_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3087_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3087_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3087_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3087_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3087_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3087_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3087_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3087_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3087_unit_code_idx"
  end

  create_table "trade_sandbox_3088", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3088_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3088_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3088_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3088_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3088_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3088_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3088_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3088_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3088_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3088_unit_code_idx"
  end

  create_table "trade_sandbox_3089", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3089_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3089_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3089_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3089_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3089_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3089_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3089_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3089_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3089_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3089_unit_code_idx"
  end

  create_table "trade_sandbox_3090", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3090_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3090_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3090_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3090_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3090_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3090_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3090_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3090_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3090_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3090_unit_code_idx"
  end

  create_table "trade_sandbox_3091", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3091_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3091_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3091_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3091_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3091_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3091_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3091_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3091_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3091_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3091_unit_code_idx"
  end

  create_table "trade_sandbox_3092", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3092_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3092_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3092_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3092_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3092_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3092_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3092_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3092_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3092_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3092_unit_code_idx"
  end

  create_table "trade_sandbox_3093", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3093_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3093_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3093_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3093_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3093_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3093_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3093_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3093_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3093_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3093_unit_code_idx"
  end

  create_table "trade_sandbox_3094", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3094_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3094_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3094_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3094_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3094_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3094_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3094_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3094_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3094_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3094_unit_code_idx"
  end

  create_table "trade_sandbox_3095", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3095_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3095_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3095_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3095_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3095_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3095_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3095_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3095_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3095_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3095_unit_code_idx"
  end

  create_table "trade_sandbox_3097", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3097_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3097_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3097_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3097_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3097_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3097_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3097_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3097_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3097_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3097_unit_code_idx"
  end

  create_table "trade_sandbox_3098", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3098_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3098_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3098_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3098_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3098_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3098_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3098_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3098_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3098_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3098_unit_code_idx"
  end

  create_table "trade_sandbox_3099", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3099_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3099_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3099_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3099_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3099_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3099_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3099_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3099_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3099_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3099_unit_code_idx"
  end

  create_table "trade_sandbox_3100", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3100_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3100_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3100_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3100_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3100_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3100_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3100_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3100_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3100_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3100_unit_code_idx"
  end

  create_table "trade_sandbox_3104", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3104_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3104_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3104_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3104_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3104_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3104_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3104_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3104_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3104_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3104_unit_code_idx"
  end

  create_table "trade_sandbox_3105", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3105_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3105_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3105_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3105_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3105_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3105_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3105_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3105_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3105_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3105_unit_code_idx"
  end

  create_table "trade_sandbox_3106", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3106_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3106_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3106_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3106_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3106_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3106_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3106_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3106_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3106_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3106_unit_code_idx"
  end

  create_table "trade_sandbox_3107", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3107_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3107_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3107_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3107_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3107_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3107_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3107_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3107_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3107_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3107_unit_code_idx"
  end

  create_table "trade_sandbox_3109", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3109_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3109_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3109_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3109_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3109_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3109_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3109_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3109_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3109_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3109_unit_code_idx"
  end

  create_table "trade_sandbox_3111", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3111_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3111_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3111_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3111_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3111_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3111_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3111_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3111_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3111_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3111_unit_code_idx"
  end

  create_table "trade_sandbox_3112", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3112_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3112_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3112_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3112_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3112_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3112_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3112_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3112_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3112_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3112_unit_code_idx"
  end

  create_table "trade_sandbox_3114", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3114_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3114_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3114_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3114_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3114_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3114_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3114_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3114_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3114_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3114_unit_code_idx"
  end

  create_table "trade_sandbox_3115", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3115_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3115_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3115_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3115_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3115_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3115_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3115_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3115_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3115_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3115_unit_code_idx"
  end

  create_table "trade_sandbox_3117", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3117_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3117_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3117_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3117_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3117_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3117_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3117_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3117_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3117_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3117_unit_code_idx"
  end

  create_table "trade_sandbox_3118", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3118_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3118_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3118_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3118_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3118_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3118_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3118_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3118_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3118_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3118_unit_code_idx"
  end

  create_table "trade_sandbox_3119", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3119_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3119_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3119_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3119_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3119_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3119_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3119_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3119_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3119_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3119_unit_code_idx"
  end

  create_table "trade_sandbox_3120", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3120_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3120_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3120_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3120_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3120_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3120_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3120_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3120_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3120_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3120_unit_code_idx"
  end

  create_table "trade_sandbox_3122", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3122_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3122_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3122_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3122_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3122_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3122_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3122_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3122_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3122_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3122_unit_code_idx"
  end

  create_table "trade_sandbox_3123", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3123_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3123_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3123_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3123_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3123_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3123_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3123_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3123_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3123_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3123_unit_code_idx"
  end

  create_table "trade_sandbox_3124", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3124_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3124_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3124_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3124_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3124_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3124_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3124_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3124_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3124_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3124_unit_code_idx"
  end

  create_table "trade_sandbox_3125", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3125_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3125_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3125_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3125_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3125_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3125_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3125_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3125_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3125_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3125_unit_code_idx"
  end

  create_table "trade_sandbox_3126", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3126_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3126_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3126_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3126_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3126_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3126_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3126_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3126_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3126_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3126_unit_code_idx"
  end

  create_table "trade_sandbox_3127", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3127_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3127_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3127_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3127_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3127_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3127_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3127_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3127_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3127_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3127_unit_code_idx"
  end

  create_table "trade_sandbox_3128", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3128_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3128_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3128_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3128_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3128_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3128_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3128_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3128_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3128_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3128_unit_code_idx"
  end

  create_table "trade_sandbox_3129", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3129_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3129_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3129_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3129_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3129_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3129_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3129_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3129_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3129_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3129_unit_code_idx"
  end

  create_table "trade_sandbox_3130", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3130_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3130_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3130_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3130_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3130_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3130_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3130_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3130_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3130_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3130_unit_code_idx"
  end

  create_table "trade_sandbox_3131", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3131_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3131_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3131_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3131_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3131_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3131_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3131_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3131_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3131_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3131_unit_code_idx"
  end

  create_table "trade_sandbox_3132", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3132_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3132_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3132_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3132_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3132_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3132_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3132_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3132_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3132_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3132_unit_code_idx"
  end

  create_table "trade_sandbox_3133", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3133_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3133_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3133_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3133_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3133_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3133_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3133_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3133_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3133_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3133_unit_code_idx"
  end

  create_table "trade_sandbox_3134", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3134_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3134_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3134_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3134_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3134_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3134_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3134_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3134_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3134_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3134_unit_code_idx"
  end

  create_table "trade_sandbox_3135", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3135_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3135_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3135_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3135_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3135_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3135_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3135_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3135_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3135_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3135_unit_code_idx"
  end

  create_table "trade_sandbox_3136", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3136_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3136_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3136_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3136_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3136_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3136_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3136_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3136_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3136_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3136_unit_code_idx"
  end

  create_table "trade_sandbox_3137", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3137_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3137_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3137_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3137_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3137_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3137_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3137_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3137_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3137_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3137_unit_code_idx"
  end

  create_table "trade_sandbox_3138", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3138_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3138_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3138_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3138_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3138_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3138_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3138_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3138_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3138_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3138_unit_code_idx"
  end

  create_table "trade_sandbox_3139", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3139_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3139_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3139_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3139_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3139_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3139_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3139_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3139_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3139_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3139_unit_code_idx"
  end

  create_table "trade_sandbox_3140", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3140_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3140_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3140_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3140_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3140_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3140_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3140_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3140_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3140_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3140_unit_code_idx"
  end

  create_table "trade_sandbox_3141", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3141_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3141_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3141_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3141_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3141_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3141_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3141_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3141_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3141_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3141_unit_code_idx"
  end

  create_table "trade_sandbox_3142", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3142_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3142_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3142_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3142_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3142_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3142_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3142_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3142_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3142_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3142_unit_code_idx"
  end

  create_table "trade_sandbox_3143", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3143_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3143_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3143_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3143_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3143_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3143_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3143_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3143_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3143_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3143_unit_code_idx"
  end

  create_table "trade_sandbox_3144", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3144_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3144_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3144_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3144_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3144_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3144_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3144_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3144_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3144_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3144_unit_code_idx"
  end

  create_table "trade_sandbox_3146", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3146_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3146_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3146_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3146_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3146_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3146_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3146_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3146_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3146_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3146_unit_code_idx"
  end

  create_table "trade_sandbox_3147", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3147_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3147_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3147_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3147_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3147_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3147_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3147_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3147_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3147_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3147_unit_code_idx"
  end

  create_table "trade_sandbox_3148", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3148_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3148_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3148_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3148_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3148_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3148_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3148_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3148_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3148_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3148_unit_code_idx"
  end

  create_table "trade_sandbox_3149", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3149_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3149_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3149_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3149_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3149_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3149_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3149_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3149_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3149_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3149_unit_code_idx"
  end

  create_table "trade_sandbox_3151", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3151_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3151_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3151_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3151_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3151_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3151_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3151_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3151_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3151_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3151_unit_code_idx"
  end

  create_table "trade_sandbox_3152", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3152_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3152_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3152_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3152_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3152_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3152_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3152_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3152_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3152_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3152_unit_code_idx"
  end

  create_table "trade_sandbox_3153", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3153_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3153_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3153_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3153_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3153_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3153_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3153_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3153_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3153_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3153_unit_code_idx"
  end

  create_table "trade_sandbox_3154", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3154_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3154_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3154_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3154_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3154_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3154_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3154_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3154_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3154_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3154_unit_code_idx"
  end

  create_table "trade_sandbox_3155", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3155_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3155_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3155_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3155_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3155_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3155_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3155_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3155_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3155_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3155_unit_code_idx"
  end

  create_table "trade_sandbox_3156", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3156_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3156_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3156_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3156_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3156_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3156_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3156_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3156_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3156_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3156_unit_code_idx"
  end

  create_table "trade_sandbox_3157", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3157_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3157_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3157_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3157_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3157_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3157_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3157_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3157_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3157_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3157_unit_code_idx"
  end

  create_table "trade_sandbox_3158", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3158_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3158_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3158_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3158_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3158_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3158_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3158_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3158_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3158_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3158_unit_code_idx"
  end

  create_table "trade_sandbox_3160", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3160_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3160_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3160_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3160_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3160_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3160_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3160_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3160_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3160_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3160_unit_code_idx"
  end

  create_table "trade_sandbox_3161", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3161_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3161_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3161_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3161_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3161_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3161_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3161_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3161_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3161_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3161_unit_code_idx"
  end

  create_table "trade_sandbox_3162", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3162_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3162_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3162_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3162_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3162_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3162_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3162_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3162_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3162_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3162_unit_code_idx"
  end

  create_table "trade_sandbox_3163", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3163_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3163_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3163_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3163_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3163_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3163_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3163_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3163_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3163_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3163_unit_code_idx"
  end

  create_table "trade_sandbox_3164", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3164_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3164_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3164_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3164_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3164_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3164_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3164_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3164_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3164_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3164_unit_code_idx"
  end

  create_table "trade_sandbox_3165", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3165_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3165_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3165_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3165_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3165_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3165_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3165_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3165_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3165_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3165_unit_code_idx"
  end

  create_table "trade_sandbox_3166", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3166_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3166_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3166_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3166_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3166_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3166_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3166_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3166_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3166_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3166_unit_code_idx"
  end

  create_table "trade_sandbox_3167", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3167_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3167_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3167_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3167_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3167_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3167_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3167_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3167_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3167_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3167_unit_code_idx"
  end

  create_table "trade_sandbox_3168", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3168_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3168_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3168_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3168_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3168_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3168_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3168_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3168_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3168_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3168_unit_code_idx"
  end

  create_table "trade_sandbox_3169", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3169_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3169_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3169_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3169_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3169_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3169_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3169_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3169_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3169_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3169_unit_code_idx"
  end

  create_table "trade_sandbox_3170", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3170_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3170_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3170_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3170_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3170_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3170_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3170_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3170_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3170_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3170_unit_code_idx"
  end

  create_table "trade_sandbox_3171", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3171_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3171_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3171_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3171_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3171_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3171_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3171_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3171_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3171_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3171_unit_code_idx"
  end

  create_table "trade_sandbox_3172", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3172_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3172_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3172_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3172_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3172_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3172_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3172_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3172_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3172_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3172_unit_code_idx"
  end

  create_table "trade_sandbox_3175", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3175_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3175_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3175_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3175_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3175_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3175_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3175_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3175_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3175_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3175_unit_code_idx"
  end

  create_table "trade_sandbox_3176", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3176_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3176_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3176_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3176_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3176_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3176_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3176_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3176_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3176_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3176_unit_code_idx"
  end

  create_table "trade_sandbox_3178", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3178_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3178_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3178_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3178_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3178_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3178_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3178_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3178_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3178_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3178_unit_code_idx"
  end

  create_table "trade_sandbox_3179", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3179_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3179_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3179_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3179_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3179_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3179_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3179_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3179_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3179_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3179_unit_code_idx"
  end

  create_table "trade_sandbox_3181", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3181_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3181_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3181_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3181_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3181_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3181_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3181_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3181_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3181_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3181_unit_code_idx"
  end

  create_table "trade_sandbox_3182", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3182_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3182_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3182_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3182_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3182_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3182_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3182_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3182_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3182_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3182_unit_code_idx"
  end

  create_table "trade_sandbox_3183", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3183_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3183_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3183_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3183_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3183_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3183_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3183_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3183_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3183_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3183_unit_code_idx"
  end

  create_table "trade_sandbox_3185", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3185_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3185_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3185_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3185_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3185_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3185_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3185_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3185_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3185_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3185_unit_code_idx"
  end

  create_table "trade_sandbox_3186", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3186_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3186_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3186_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3186_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3186_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3186_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3186_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3186_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3186_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3186_unit_code_idx"
  end

  create_table "trade_sandbox_3189", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3189_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3189_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3189_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3189_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3189_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3189_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3189_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3189_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3189_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3189_unit_code_idx"
  end

  create_table "trade_sandbox_3190", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3190_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3190_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3190_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3190_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3190_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3190_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3190_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3190_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3190_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3190_unit_code_idx"
  end

  create_table "trade_sandbox_3191", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3191_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3191_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3191_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3191_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3191_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3191_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3191_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3191_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3191_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3191_unit_code_idx"
  end

  create_table "trade_sandbox_3192", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3192_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3192_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3192_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3192_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3192_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3192_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3192_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3192_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3192_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3192_unit_code_idx"
  end

  create_table "trade_sandbox_3193", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3193_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3193_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3193_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3193_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3193_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3193_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3193_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3193_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3193_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3193_unit_code_idx"
  end

  create_table "trade_sandbox_3194", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3194_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3194_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3194_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3194_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3194_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3194_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3194_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3194_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3194_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3194_unit_code_idx"
  end

  create_table "trade_sandbox_3195", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3195_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3195_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3195_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3195_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3195_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3195_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3195_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3195_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3195_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3195_unit_code_idx"
  end

  create_table "trade_sandbox_3199", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3199_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3199_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3199_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3199_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3199_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3199_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3199_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3199_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3199_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3199_unit_code_idx"
  end

  create_table "trade_sandbox_3200", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3200_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3200_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3200_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3200_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3200_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3200_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3200_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3200_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3200_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3200_unit_code_idx"
  end

  create_table "trade_sandbox_3201", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3201_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3201_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3201_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3201_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3201_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3201_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3201_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3201_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3201_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3201_unit_code_idx"
  end

  create_table "trade_sandbox_3202", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3202_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3202_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3202_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3202_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3202_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3202_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3202_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3202_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3202_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3202_unit_code_idx"
  end

  create_table "trade_sandbox_3203", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3203_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3203_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3203_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3203_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3203_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3203_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3203_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3203_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3203_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3203_unit_code_idx"
  end

  create_table "trade_sandbox_3204", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3204_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3204_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3204_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3204_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3204_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3204_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3204_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3204_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3204_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3204_unit_code_idx"
  end

  create_table "trade_sandbox_3205", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3205_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3205_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3205_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3205_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3205_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3205_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3205_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3205_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3205_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3205_unit_code_idx"
  end

  create_table "trade_sandbox_3207", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3207_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3207_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3207_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3207_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3207_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3207_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3207_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3207_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3207_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3207_unit_code_idx"
  end

  create_table "trade_sandbox_3208", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3208_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3208_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3208_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3208_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3208_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3208_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3208_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3208_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3208_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3208_unit_code_idx"
  end

  create_table "trade_sandbox_3210", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3210_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3210_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3210_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3210_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3210_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3210_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3210_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3210_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3210_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3210_unit_code_idx"
  end

  create_table "trade_sandbox_3211", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3211_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3211_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3211_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3211_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3211_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3211_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3211_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3211_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3211_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3211_unit_code_idx"
  end

  create_table "trade_sandbox_3212", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3212_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3212_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3212_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3212_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3212_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3212_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3212_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3212_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3212_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3212_unit_code_idx"
  end

  create_table "trade_sandbox_3213", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3213_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3213_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3213_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3213_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3213_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3213_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3213_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3213_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3213_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3213_unit_code_idx"
  end

  create_table "trade_sandbox_3214", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3214_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3214_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3214_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3214_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3214_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3214_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3214_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3214_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3214_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3214_unit_code_idx"
  end

  create_table "trade_sandbox_3215", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3215_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3215_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3215_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3215_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3215_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3215_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3215_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3215_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3215_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3215_unit_code_idx"
  end

  create_table "trade_sandbox_3217", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3217_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3217_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3217_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3217_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3217_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3217_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3217_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3217_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3217_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3217_unit_code_idx"
  end

  create_table "trade_sandbox_3218", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3218_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3218_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3218_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3218_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3218_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3218_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3218_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3218_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3218_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3218_unit_code_idx"
  end

  create_table "trade_sandbox_3219", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3219_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3219_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3219_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3219_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3219_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3219_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3219_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3219_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3219_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3219_unit_code_idx"
  end

  create_table "trade_sandbox_3220", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3220_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3220_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3220_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3220_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3220_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3220_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3220_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3220_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3220_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3220_unit_code_idx"
  end

  create_table "trade_sandbox_3221", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3221_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3221_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3221_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3221_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3221_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3221_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3221_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3221_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3221_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3221_unit_code_idx"
  end

  create_table "trade_sandbox_3222", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3222_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3222_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3222_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3222_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3222_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3222_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3222_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3222_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3222_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3222_unit_code_idx"
  end

  create_table "trade_sandbox_3223", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3223_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3223_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3223_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3223_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3223_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3223_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3223_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3223_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3223_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3223_unit_code_idx"
  end

  create_table "trade_sandbox_3224", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3224_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3224_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3224_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3224_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3224_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3224_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3224_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3224_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3224_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3224_unit_code_idx"
  end

  create_table "trade_sandbox_3225", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3225_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3225_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3225_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3225_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3225_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3225_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3225_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3225_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3225_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3225_unit_code_idx"
  end

  create_table "trade_sandbox_3226", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3226_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3226_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3226_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3226_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3226_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3226_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3226_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3226_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3226_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3226_unit_code_idx"
  end

  create_table "trade_sandbox_3227", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3227_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3227_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3227_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3227_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3227_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3227_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3227_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3227_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3227_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3227_unit_code_idx"
  end

  create_table "trade_sandbox_3228", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3228_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3228_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3228_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3228_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3228_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3228_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3228_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3228_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3228_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3228_unit_code_idx"
  end

  create_table "trade_sandbox_3229", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3229_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3229_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3229_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3229_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3229_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3229_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3229_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3229_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3229_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3229_unit_code_idx"
  end

  create_table "trade_sandbox_3230", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3230_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3230_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3230_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3230_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3230_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3230_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3230_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3230_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3230_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3230_unit_code_idx"
  end

  create_table "trade_sandbox_3231", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3231_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3231_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3231_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3231_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3231_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3231_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3231_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3231_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3231_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3231_unit_code_idx"
  end

  create_table "trade_sandbox_3232", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3232_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3232_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3232_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3232_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3232_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3232_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3232_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3232_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3232_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3232_unit_code_idx"
  end

  create_table "trade_sandbox_3233", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3233_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3233_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3233_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3233_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3233_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3233_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3233_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3233_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3233_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3233_unit_code_idx"
  end

  create_table "trade_sandbox_3234", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3234_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3234_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3234_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3234_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3234_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3234_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3234_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3234_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3234_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3234_unit_code_idx"
  end

  create_table "trade_sandbox_3235", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3235_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3235_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3235_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3235_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3235_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3235_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3235_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3235_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3235_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3235_unit_code_idx"
  end

  create_table "trade_sandbox_3237", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3237_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3237_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3237_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3237_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3237_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3237_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3237_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3237_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3237_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3237_unit_code_idx"
  end

  create_table "trade_sandbox_3238", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3238_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3238_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3238_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3238_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3238_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3238_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3238_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3238_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3238_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3238_unit_code_idx"
  end

  create_table "trade_sandbox_3240", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3240_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3240_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3240_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3240_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3240_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3240_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3240_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3240_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3240_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3240_unit_code_idx"
  end

  create_table "trade_sandbox_3241", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3241_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3241_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3241_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3241_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3241_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3241_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3241_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3241_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3241_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3241_unit_code_idx"
  end

  create_table "trade_sandbox_3242", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3242_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3242_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3242_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3242_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3242_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3242_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3242_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3242_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3242_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3242_unit_code_idx"
  end

  create_table "trade_sandbox_3243", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3243_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3243_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3243_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3243_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3243_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3243_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3243_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3243_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3243_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3243_unit_code_idx"
  end

  create_table "trade_sandbox_3244", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3244_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3244_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3244_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3244_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3244_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3244_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3244_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3244_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3244_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3244_unit_code_idx"
  end

  create_table "trade_sandbox_3247", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3247_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3247_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3247_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3247_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3247_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3247_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3247_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3247_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3247_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3247_unit_code_idx"
  end

  create_table "trade_sandbox_3249", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3249_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3249_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3249_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3249_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3249_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3249_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3249_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3249_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3249_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3249_unit_code_idx"
  end

  create_table "trade_sandbox_3250", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3250_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3250_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3250_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3250_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3250_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3250_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3250_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3250_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3250_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3250_unit_code_idx"
  end

  create_table "trade_sandbox_3251", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3251_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3251_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3251_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3251_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3251_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3251_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3251_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3251_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3251_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3251_unit_code_idx"
  end

  create_table "trade_sandbox_3252", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3252_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3252_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3252_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3252_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3252_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3252_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3252_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3252_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3252_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3252_unit_code_idx"
  end

  create_table "trade_sandbox_3254", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3254_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3254_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3254_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3254_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3254_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3254_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3254_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3254_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3254_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3254_unit_code_idx"
  end

  create_table "trade_sandbox_3255", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3255_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3255_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3255_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3255_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3255_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3255_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3255_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3255_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3255_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3255_unit_code_idx"
  end

  create_table "trade_sandbox_3256", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3256_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3256_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3256_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3256_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3256_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3256_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3256_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3256_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3256_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3256_unit_code_idx"
  end

  create_table "trade_sandbox_3257", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3257_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3257_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3257_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3257_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3257_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3257_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3257_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3257_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3257_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3257_unit_code_idx"
  end

  create_table "trade_sandbox_3258", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3258_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3258_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3258_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3258_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3258_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3258_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3258_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3258_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3258_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3258_unit_code_idx"
  end

  create_table "trade_sandbox_3259", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3259_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3259_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3259_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3259_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3259_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3259_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3259_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3259_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3259_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3259_unit_code_idx"
  end

  create_table "trade_sandbox_3260", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3260_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3260_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3260_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3260_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3260_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3260_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3260_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3260_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3260_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3260_unit_code_idx"
  end

  create_table "trade_sandbox_3261", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3261_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3261_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3261_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3261_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3261_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3261_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3261_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3261_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3261_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3261_unit_code_idx"
  end

  create_table "trade_sandbox_3262", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3262_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3262_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3262_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3262_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3262_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3262_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3262_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3262_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3262_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3262_unit_code_idx"
  end

  create_table "trade_sandbox_3264", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3264_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3264_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3264_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3264_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3264_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3264_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3264_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3264_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3264_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3264_unit_code_idx"
  end

  create_table "trade_sandbox_3265", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3265_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3265_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3265_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3265_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3265_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3265_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3265_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3265_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3265_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3265_unit_code_idx"
  end

  create_table "trade_sandbox_3266", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3266_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3266_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3266_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3266_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3266_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3266_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3266_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3266_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3266_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3266_unit_code_idx"
  end

  create_table "trade_sandbox_3267", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3267_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3267_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3267_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3267_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3267_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3267_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3267_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3267_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3267_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3267_unit_code_idx"
  end

  create_table "trade_sandbox_3268", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3268_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3268_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3268_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3268_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3268_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3268_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3268_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3268_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3268_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3268_unit_code_idx"
  end

  create_table "trade_sandbox_3269", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3269_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3269_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3269_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3269_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3269_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3269_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3269_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3269_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3269_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3269_unit_code_idx"
  end

  create_table "trade_sandbox_3270", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3270_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3270_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3270_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3270_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3270_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3270_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3270_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3270_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3270_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3270_unit_code_idx"
  end

  create_table "trade_sandbox_3271", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3271_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3271_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3271_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3271_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3271_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3271_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3271_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3271_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3271_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3271_unit_code_idx"
  end

  create_table "trade_sandbox_3272", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3272_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3272_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3272_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3272_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3272_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3272_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3272_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3272_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3272_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3272_unit_code_idx"
  end

  create_table "trade_sandbox_3273", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3273_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3273_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3273_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3273_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3273_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3273_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3273_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3273_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3273_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3273_unit_code_idx"
  end

  create_table "trade_sandbox_3274", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3274_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3274_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3274_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3274_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3274_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3274_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3274_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3274_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3274_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3274_unit_code_idx"
  end

  create_table "trade_sandbox_3275", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3275_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3275_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3275_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3275_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3275_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3275_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3275_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3275_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3275_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3275_unit_code_idx"
  end

  create_table "trade_sandbox_3276", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3276_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3276_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3276_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3276_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3276_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3276_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3276_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3276_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3276_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3276_unit_code_idx"
  end

  create_table "trade_sandbox_3277", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3277_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3277_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3277_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3277_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3277_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3277_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3277_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3277_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3277_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3277_unit_code_idx"
  end

  create_table "trade_sandbox_3278", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3278_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3278_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3278_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3278_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3278_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3278_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3278_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3278_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3278_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3278_unit_code_idx"
  end

  create_table "trade_sandbox_3280", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3280_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3280_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3280_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3280_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3280_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3280_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3280_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3280_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3280_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3280_unit_code_idx"
  end

  create_table "trade_sandbox_3281", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3281_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3281_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3281_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3281_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3281_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3281_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3281_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3281_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3281_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3281_unit_code_idx"
  end

  create_table "trade_sandbox_3282", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3282_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3282_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3282_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3282_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3282_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3282_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3282_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3282_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3282_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3282_unit_code_idx"
  end

  create_table "trade_sandbox_3283", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3283_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3283_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3283_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3283_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3283_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3283_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3283_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3283_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3283_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3283_unit_code_idx"
  end

  create_table "trade_sandbox_3285", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3285_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3285_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3285_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3285_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3285_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3285_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3285_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3285_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3285_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3285_unit_code_idx"
  end

  create_table "trade_sandbox_3286", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3286_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3286_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3286_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3286_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3286_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3286_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3286_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3286_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3286_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3286_unit_code_idx"
  end

  create_table "trade_sandbox_3287", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3287_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3287_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3287_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3287_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3287_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3287_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3287_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3287_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3287_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3287_unit_code_idx"
  end

  create_table "trade_sandbox_3288", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3288_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3288_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3288_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3288_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3288_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3288_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3288_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3288_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3288_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3288_unit_code_idx"
  end

  create_table "trade_sandbox_3289", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3289_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3289_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3289_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3289_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3289_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3289_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3289_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3289_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3289_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3289_unit_code_idx"
  end

  create_table "trade_sandbox_3290", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3290_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3290_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3290_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3290_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3290_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3290_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3290_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3290_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3290_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3290_unit_code_idx"
  end

  create_table "trade_sandbox_3291", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3291_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3291_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3291_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3291_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3291_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3291_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3291_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3291_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3291_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3291_unit_code_idx"
  end

  create_table "trade_sandbox_3293", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3293_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3293_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3293_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3293_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3293_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3293_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3293_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3293_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3293_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3293_unit_code_idx"
  end

  create_table "trade_sandbox_3294", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3294_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3294_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3294_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3294_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3294_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3294_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3294_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3294_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3294_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3294_unit_code_idx"
  end

  create_table "trade_sandbox_3295", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3295_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3295_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3295_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3295_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3295_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3295_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3295_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3295_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3295_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3295_unit_code_idx"
  end

  create_table "trade_sandbox_3296", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3296_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3296_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3296_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3296_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3296_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3296_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3296_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3296_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3296_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3296_unit_code_idx"
  end

  create_table "trade_sandbox_3299", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3299_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3299_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3299_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3299_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3299_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3299_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3299_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3299_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3299_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3299_unit_code_idx"
  end

  create_table "trade_sandbox_3304", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3304_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3304_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3304_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3304_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3304_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3304_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3304_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3304_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3304_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3304_unit_code_idx"
  end

  create_table "trade_sandbox_3305", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3305_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3305_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3305_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3305_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3305_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3305_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3305_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3305_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3305_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3305_unit_code_idx"
  end

  create_table "trade_sandbox_3306", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3306_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3306_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3306_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3306_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3306_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3306_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3306_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3306_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3306_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3306_unit_code_idx"
  end

  create_table "trade_sandbox_3307", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3307_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3307_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3307_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3307_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3307_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3307_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3307_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3307_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3307_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3307_unit_code_idx"
  end

  create_table "trade_sandbox_3308", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3308_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3308_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3308_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3308_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3308_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3308_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3308_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3308_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3308_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3308_unit_code_idx"
  end

  create_table "trade_sandbox_3309", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3309_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3309_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3309_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3309_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3309_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3309_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3309_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3309_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3309_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3309_unit_code_idx"
  end

  create_table "trade_sandbox_3311", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3311_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3311_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3311_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3311_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3311_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3311_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3311_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3311_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3311_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3311_unit_code_idx"
  end

  create_table "trade_sandbox_3312", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3312_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3312_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3312_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3312_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3312_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3312_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3312_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3312_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3312_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3312_unit_code_idx"
  end

  create_table "trade_sandbox_3314", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3314_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3314_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3314_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3314_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3314_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3314_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3314_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3314_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3314_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3314_unit_code_idx"
  end

  create_table "trade_sandbox_3315", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3315_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3315_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3315_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3315_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3315_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3315_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3315_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3315_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3315_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3315_unit_code_idx"
  end

  create_table "trade_sandbox_3316", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3316_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3316_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3316_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3316_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3316_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3316_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3316_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3316_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3316_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3316_unit_code_idx"
  end

  create_table "trade_sandbox_3317", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3317_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3317_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3317_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3317_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3317_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3317_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3317_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3317_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3317_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3317_unit_code_idx"
  end

  create_table "trade_sandbox_3320", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3320_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3320_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3320_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3320_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3320_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3320_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3320_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3320_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3320_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3320_unit_code_idx"
  end

  create_table "trade_sandbox_3322", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3322_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3322_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3322_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3322_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3322_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3322_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3322_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3322_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3322_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3322_unit_code_idx"
  end

  create_table "trade_sandbox_3324", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3324_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3324_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3324_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3324_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3324_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3324_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3324_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3324_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3324_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3324_unit_code_idx"
  end

  create_table "trade_sandbox_3325", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3325_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3325_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3325_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3325_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3325_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3325_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3325_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3325_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3325_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3325_unit_code_idx"
  end

  create_table "trade_sandbox_3326", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3326_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3326_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3326_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3326_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3326_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3326_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3326_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3326_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3326_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3326_unit_code_idx"
  end

  create_table "trade_sandbox_3327", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3327_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3327_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3327_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3327_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3327_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3327_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3327_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3327_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3327_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3327_unit_code_idx"
  end

  create_table "trade_sandbox_3328", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3328_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3328_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3328_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3328_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3328_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3328_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3328_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3328_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3328_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3328_unit_code_idx"
  end

  create_table "trade_sandbox_3329", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3329_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3329_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3329_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3329_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3329_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3329_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3329_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3329_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3329_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3329_unit_code_idx"
  end

  create_table "trade_sandbox_3330", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3330_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3330_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3330_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3330_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3330_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3330_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3330_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3330_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3330_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3330_unit_code_idx"
  end

  create_table "trade_sandbox_3331", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3331_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3331_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3331_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3331_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3331_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3331_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3331_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3331_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3331_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3331_unit_code_idx"
  end

  create_table "trade_sandbox_3332", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3332_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3332_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3332_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3332_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3332_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3332_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3332_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3332_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3332_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3332_unit_code_idx"
  end

  create_table "trade_sandbox_3334", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3334_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3334_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3334_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3334_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3334_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3334_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3334_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3334_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3334_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3334_unit_code_idx"
  end

  create_table "trade_sandbox_3335", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3335_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3335_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3335_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3335_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3335_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3335_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3335_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3335_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3335_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3335_unit_code_idx"
  end

  create_table "trade_sandbox_3336", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3336_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3336_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3336_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3336_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3336_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3336_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3336_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3336_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3336_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3336_unit_code_idx"
  end

  create_table "trade_sandbox_3337", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3337_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3337_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3337_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3337_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3337_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3337_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3337_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3337_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3337_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3337_unit_code_idx"
  end

  create_table "trade_sandbox_3338", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3338_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3338_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3338_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3338_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3338_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3338_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3338_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3338_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3338_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3338_unit_code_idx"
  end

  create_table "trade_sandbox_3339", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3339_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3339_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3339_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3339_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3339_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3339_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3339_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3339_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3339_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3339_unit_code_idx"
  end

  create_table "trade_sandbox_3341", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3341_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3341_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3341_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3341_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3341_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3341_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3341_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3341_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3341_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3341_unit_code_idx"
  end

  create_table "trade_sandbox_3342", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3342_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3342_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3342_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3342_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3342_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3342_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3342_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3342_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3342_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3342_unit_code_idx"
  end

  create_table "trade_sandbox_3343", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3343_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3343_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3343_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3343_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3343_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3343_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3343_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3343_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3343_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3343_unit_code_idx"
  end

  create_table "trade_sandbox_3344", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3344_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3344_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3344_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3344_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3344_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3344_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3344_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3344_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3344_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3344_unit_code_idx"
  end

  create_table "trade_sandbox_3346", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3346_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3346_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3346_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3346_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3346_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3346_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3346_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3346_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3346_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3346_unit_code_idx"
  end

  create_table "trade_sandbox_3347", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3347_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3347_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3347_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3347_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3347_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3347_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3347_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3347_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3347_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3347_unit_code_idx"
  end

  create_table "trade_sandbox_3350", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3350_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3350_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3350_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3350_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3350_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3350_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3350_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3350_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3350_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3350_unit_code_idx"
  end

  create_table "trade_sandbox_3352", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3352_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3352_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3352_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3352_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3352_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3352_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3352_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3352_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3352_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3352_unit_code_idx"
  end

  create_table "trade_sandbox_3353", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3353_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3353_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3353_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3353_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3353_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3353_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3353_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3353_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3353_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3353_unit_code_idx"
  end

  create_table "trade_sandbox_3354", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3354_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3354_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3354_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3354_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3354_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3354_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3354_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3354_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3354_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3354_unit_code_idx"
  end

  create_table "trade_sandbox_3356", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3356_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3356_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3356_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3356_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3356_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3356_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3356_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3356_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3356_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3356_unit_code_idx"
  end

  create_table "trade_sandbox_3357", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3357_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3357_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3357_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3357_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3357_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3357_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3357_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3357_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3357_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3357_unit_code_idx"
  end

  create_table "trade_sandbox_3358", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3358_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3358_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3358_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3358_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3358_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3358_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3358_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3358_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3358_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3358_unit_code_idx"
  end

  create_table "trade_sandbox_3359", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3359_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3359_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3359_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3359_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3359_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3359_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3359_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3359_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3359_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3359_unit_code_idx"
  end

  create_table "trade_sandbox_3360", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3360_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3360_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3360_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3360_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3360_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3360_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3360_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3360_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3360_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3360_unit_code_idx"
  end

  create_table "trade_sandbox_3361", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3361_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3361_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3361_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3361_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3361_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3361_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3361_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3361_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3361_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3361_unit_code_idx"
  end

  create_table "trade_sandbox_3364", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3364_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3364_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3364_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3364_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3364_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3364_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3364_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3364_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3364_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3364_unit_code_idx"
  end

  create_table "trade_sandbox_3365", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3365_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3365_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3365_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3365_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3365_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3365_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3365_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3365_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3365_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3365_unit_code_idx"
  end

  create_table "trade_sandbox_3366", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3366_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3366_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3366_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3366_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3366_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3366_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3366_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3366_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3366_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3366_unit_code_idx"
  end

  create_table "trade_sandbox_3369", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3369_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3369_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3369_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3369_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3369_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3369_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3369_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3369_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3369_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3369_unit_code_idx"
  end

  create_table "trade_sandbox_3371", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3371_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3371_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3371_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3371_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3371_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3371_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3371_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3371_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3371_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3371_unit_code_idx"
  end

  create_table "trade_sandbox_3372", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3372_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3372_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3372_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3372_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3372_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3372_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3372_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3372_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3372_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3372_unit_code_idx"
  end

  create_table "trade_sandbox_3373", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3373_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3373_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3373_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3373_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3373_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3373_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3373_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3373_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3373_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3373_unit_code_idx"
  end

  create_table "trade_sandbox_3374", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3374_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3374_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3374_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3374_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3374_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3374_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3374_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3374_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3374_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3374_unit_code_idx"
  end

  create_table "trade_sandbox_3376", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3376_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3376_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3376_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3376_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3376_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3376_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3376_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3376_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3376_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3376_unit_code_idx"
  end

  create_table "trade_sandbox_3377", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3377_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3377_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3377_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3377_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3377_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3377_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3377_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3377_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3377_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3377_unit_code_idx"
  end

  create_table "trade_sandbox_3378", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3378_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3378_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3378_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3378_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3378_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3378_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3378_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3378_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3378_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3378_unit_code_idx"
  end

  create_table "trade_sandbox_3379", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3379_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3379_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3379_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3379_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3379_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3379_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3379_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3379_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3379_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3379_unit_code_idx"
  end

  create_table "trade_sandbox_3380", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3380_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3380_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3380_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3380_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3380_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3380_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3380_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3380_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3380_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3380_unit_code_idx"
  end

  create_table "trade_sandbox_3381", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3381_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3381_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3381_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3381_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3381_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3381_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3381_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3381_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3381_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3381_unit_code_idx"
  end

  create_table "trade_sandbox_3383", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3383_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3383_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3383_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3383_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3383_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3383_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3383_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3383_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3383_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3383_unit_code_idx"
  end

  create_table "trade_sandbox_3384", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3384_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3384_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3384_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3384_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3384_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3384_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3384_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3384_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3384_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3384_unit_code_idx"
  end

  create_table "trade_sandbox_3386", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3386_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3386_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3386_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3386_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3386_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3386_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3386_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3386_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3386_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3386_unit_code_idx"
  end

  create_table "trade_sandbox_3388", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3388_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3388_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3388_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3388_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3388_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3388_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3388_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3388_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3388_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3388_unit_code_idx"
  end

  create_table "trade_sandbox_3389", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3389_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3389_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3389_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3389_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3389_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3389_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3389_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3389_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3389_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3389_unit_code_idx"
  end

  create_table "trade_sandbox_3390", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3390_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3390_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3390_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3390_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3390_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3390_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3390_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3390_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3390_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3390_unit_code_idx"
  end

  create_table "trade_sandbox_3391", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3391_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3391_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3391_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3391_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3391_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3391_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3391_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3391_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3391_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3391_unit_code_idx"
  end

  create_table "trade_sandbox_3392", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3392_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3392_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3392_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3392_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3392_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3392_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3392_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3392_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3392_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3392_unit_code_idx"
  end

  create_table "trade_sandbox_3393", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3393_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3393_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3393_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3393_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3393_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3393_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3393_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3393_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3393_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3393_unit_code_idx"
  end

  create_table "trade_sandbox_3394", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3394_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3394_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3394_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3394_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3394_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3394_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3394_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3394_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3394_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3394_unit_code_idx"
  end

  create_table "trade_sandbox_3395", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3395_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3395_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3395_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3395_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3395_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3395_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3395_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3395_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3395_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3395_unit_code_idx"
  end

  create_table "trade_sandbox_3396", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3396_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3396_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3396_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3396_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3396_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3396_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3396_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3396_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3396_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3396_unit_code_idx"
  end

  create_table "trade_sandbox_3397", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3397_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3397_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3397_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3397_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3397_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3397_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3397_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3397_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3397_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3397_unit_code_idx"
  end

  create_table "trade_sandbox_3398", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3398_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3398_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3398_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3398_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3398_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3398_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3398_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3398_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3398_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3398_unit_code_idx"
  end

  create_table "trade_sandbox_3399", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3399_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3399_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3399_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3399_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3399_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3399_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3399_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3399_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3399_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3399_unit_code_idx"
  end

  create_table "trade_sandbox_3400", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3400_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3400_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3400_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3400_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3400_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3400_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3400_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3400_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3400_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3400_unit_code_idx"
  end

  create_table "trade_sandbox_3401", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3401_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3401_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3401_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3401_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3401_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3401_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3401_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3401_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3401_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3401_unit_code_idx"
  end

  create_table "trade_sandbox_3402", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3402_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3402_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3402_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3402_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3402_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3402_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3402_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3402_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3402_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3402_unit_code_idx"
  end

  create_table "trade_sandbox_3404", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3404_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3404_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3404_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3404_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3404_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3404_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3404_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3404_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3404_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3404_unit_code_idx"
  end

  create_table "trade_sandbox_3405", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3405_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3405_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3405_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3405_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3405_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3405_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3405_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3405_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3405_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3405_unit_code_idx"
  end

  create_table "trade_sandbox_3407", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3407_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3407_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3407_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3407_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3407_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3407_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3407_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3407_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3407_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3407_unit_code_idx"
  end

  create_table "trade_sandbox_3408", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3408_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3408_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3408_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3408_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3408_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3408_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3408_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3408_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3408_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3408_unit_code_idx"
  end

  create_table "trade_sandbox_3409", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3409_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3409_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3409_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3409_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3409_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3409_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3409_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3409_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3409_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3409_unit_code_idx"
  end

  create_table "trade_sandbox_3410", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3410_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3410_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3410_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3410_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3410_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3410_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3410_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3410_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3410_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3410_unit_code_idx"
  end

  create_table "trade_sandbox_3411", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3411_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3411_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3411_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3411_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3411_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3411_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3411_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3411_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3411_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3411_unit_code_idx"
  end

  create_table "trade_sandbox_3412", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3412_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3412_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3412_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3412_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3412_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3412_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3412_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3412_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3412_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3412_unit_code_idx"
  end

  create_table "trade_sandbox_3413", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3413_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3413_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3413_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3413_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3413_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3413_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3413_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3413_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3413_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3413_unit_code_idx"
  end

  create_table "trade_sandbox_3414", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3414_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3414_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3414_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3414_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3414_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3414_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3414_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3414_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3414_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3414_unit_code_idx"
  end

  create_table "trade_sandbox_3415", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3415_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3415_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3415_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3415_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3415_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3415_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3415_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3415_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3415_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3415_unit_code_idx"
  end

  create_table "trade_sandbox_3416", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3416_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3416_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3416_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3416_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3416_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3416_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3416_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3416_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3416_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3416_unit_code_idx"
  end

  create_table "trade_sandbox_3418", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3418_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3418_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3418_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3418_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3418_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3418_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3418_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3418_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3418_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3418_unit_code_idx"
  end

  create_table "trade_sandbox_3419", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3419_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3419_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3419_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3419_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3419_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3419_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3419_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3419_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3419_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3419_unit_code_idx"
  end

  create_table "trade_sandbox_3420", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3420_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3420_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3420_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3420_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3420_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3420_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3420_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3420_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3420_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3420_unit_code_idx"
  end

  create_table "trade_sandbox_3421", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3421_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3421_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3421_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3421_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3421_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3421_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3421_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3421_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3421_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3421_unit_code_idx"
  end

  create_table "trade_sandbox_3422", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3422_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3422_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3422_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3422_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3422_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3422_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3422_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3422_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3422_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3422_unit_code_idx"
  end

  create_table "trade_sandbox_3423", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3423_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3423_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3423_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3423_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3423_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3423_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3423_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3423_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3423_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3423_unit_code_idx"
  end

  create_table "trade_sandbox_3424", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3424_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3424_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3424_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3424_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3424_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3424_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3424_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3424_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3424_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3424_unit_code_idx"
  end

  create_table "trade_sandbox_3426", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3426_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3426_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3426_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3426_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3426_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3426_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3426_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3426_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3426_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3426_unit_code_idx"
  end

  create_table "trade_sandbox_3427", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3427_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3427_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3427_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3427_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3427_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3427_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3427_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3427_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3427_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3427_unit_code_idx"
  end

  create_table "trade_sandbox_3428", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3428_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3428_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3428_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3428_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3428_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3428_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3428_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3428_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3428_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3428_unit_code_idx"
  end

  create_table "trade_sandbox_3429", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3429_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3429_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3429_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3429_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3429_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3429_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3429_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3429_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3429_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3429_unit_code_idx"
  end

  create_table "trade_sandbox_3430", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3430_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3430_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3430_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3430_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3430_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3430_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3430_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3430_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3430_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3430_unit_code_idx"
  end

  create_table "trade_sandbox_3432", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3432_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3432_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3432_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3432_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3432_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3432_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3432_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3432_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3432_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3432_unit_code_idx"
  end

  create_table "trade_sandbox_3434", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3434_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3434_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3434_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3434_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3434_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3434_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3434_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3434_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3434_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3434_unit_code_idx"
  end

  create_table "trade_sandbox_3435", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3435_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3435_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3435_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3435_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3435_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3435_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3435_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3435_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3435_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3435_unit_code_idx"
  end

  create_table "trade_sandbox_3436", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3436_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3436_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3436_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3436_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3436_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3436_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3436_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3436_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3436_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3436_unit_code_idx"
  end

  create_table "trade_sandbox_3437", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3437_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3437_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3437_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3437_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3437_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3437_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3437_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3437_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3437_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3437_unit_code_idx"
  end

  create_table "trade_sandbox_3438", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3438_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3438_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3438_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3438_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3438_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3438_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3438_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3438_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3438_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3438_unit_code_idx"
  end

  create_table "trade_sandbox_3443", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3443_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3443_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3443_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3443_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3443_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3443_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3443_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3443_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3443_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3443_unit_code_idx"
  end

  create_table "trade_sandbox_3444", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3444_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3444_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3444_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3444_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3444_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3444_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3444_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3444_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3444_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3444_unit_code_idx"
  end

  create_table "trade_sandbox_3446", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3446_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3446_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3446_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3446_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3446_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3446_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3446_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3446_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3446_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3446_unit_code_idx"
  end

  create_table "trade_sandbox_3447", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3447_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3447_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3447_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3447_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3447_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3447_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3447_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3447_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3447_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3447_unit_code_idx"
  end

  create_table "trade_sandbox_3450", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3450_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3450_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3450_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3450_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3450_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3450_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3450_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3450_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3450_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3450_unit_code_idx"
  end

  create_table "trade_sandbox_3452", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3452_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3452_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3452_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3452_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3452_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3452_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3452_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3452_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3452_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3452_unit_code_idx"
  end

  create_table "trade_sandbox_3453", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3453_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3453_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3453_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3453_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3453_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3453_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3453_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3453_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3453_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3453_unit_code_idx"
  end

  create_table "trade_sandbox_3454", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3454_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3454_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3454_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3454_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3454_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3454_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3454_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3454_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3454_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3454_unit_code_idx"
  end

  create_table "trade_sandbox_3455", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3455_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3455_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3455_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3455_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3455_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3455_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3455_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3455_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3455_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3455_unit_code_idx"
  end

  create_table "trade_sandbox_3456", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3456_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3456_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3456_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3456_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3456_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3456_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3456_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3456_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3456_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3456_unit_code_idx"
  end

  create_table "trade_sandbox_3458", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3458_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3458_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3458_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3458_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3458_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3458_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3458_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3458_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3458_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3458_unit_code_idx"
  end

  create_table "trade_sandbox_3459", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3459_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3459_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3459_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3459_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3459_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3459_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3459_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3459_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3459_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3459_unit_code_idx"
  end

  create_table "trade_sandbox_3460", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3460_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3460_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3460_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3460_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3460_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3460_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3460_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3460_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3460_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3460_unit_code_idx"
  end

  create_table "trade_sandbox_3461", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3461_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3461_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3461_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3461_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3461_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3461_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3461_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3461_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3461_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3461_unit_code_idx"
  end

  create_table "trade_sandbox_3464", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3464_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3464_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3464_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3464_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3464_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3464_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3464_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3464_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3464_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3464_unit_code_idx"
  end

  create_table "trade_sandbox_3465", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3465_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3465_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3465_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3465_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3465_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3465_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3465_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3465_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3465_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3465_unit_code_idx"
  end

  create_table "trade_sandbox_3467", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3467_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3467_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3467_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3467_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3467_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3467_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3467_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3467_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3467_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3467_unit_code_idx"
  end

  create_table "trade_sandbox_3469", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3469_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3469_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3469_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3469_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3469_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3469_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3469_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3469_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3469_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3469_unit_code_idx"
  end

  create_table "trade_sandbox_3471", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3471_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3471_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3471_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3471_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3471_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3471_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3471_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3471_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3471_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3471_unit_code_idx"
  end

  create_table "trade_sandbox_3472", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3472_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3472_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3472_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3472_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3472_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3472_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3472_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3472_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3472_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3472_unit_code_idx"
  end

  create_table "trade_sandbox_3473", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3473_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3473_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3473_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3473_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3473_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3473_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3473_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3473_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3473_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3473_unit_code_idx"
  end

  create_table "trade_sandbox_3474", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3474_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3474_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3474_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3474_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3474_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3474_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3474_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3474_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3474_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3474_unit_code_idx"
  end

  create_table "trade_sandbox_3475", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3475_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3475_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3475_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3475_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3475_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3475_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3475_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3475_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3475_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3475_unit_code_idx"
  end

  create_table "trade_sandbox_3476", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3476_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3476_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3476_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3476_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3476_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3476_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3476_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3476_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3476_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3476_unit_code_idx"
  end

  create_table "trade_sandbox_3478", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3478_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3478_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3478_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3478_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3478_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3478_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3478_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3478_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3478_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3478_unit_code_idx"
  end

  create_table "trade_sandbox_3479", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3479_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3479_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3479_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3479_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3479_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3479_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3479_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3479_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3479_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3479_unit_code_idx"
  end

  create_table "trade_sandbox_3480", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3480_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3480_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3480_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3480_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3480_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3480_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3480_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3480_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3480_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3480_unit_code_idx"
  end

  create_table "trade_sandbox_3481", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3481_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3481_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3481_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3481_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3481_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3481_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3481_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3481_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3481_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3481_unit_code_idx"
  end

  create_table "trade_sandbox_3482", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3482_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3482_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3482_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3482_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3482_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3482_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3482_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3482_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3482_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3482_unit_code_idx"
  end

  create_table "trade_sandbox_3483", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3483_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3483_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3483_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3483_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3483_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3483_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3483_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3483_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3483_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3483_unit_code_idx"
  end

  create_table "trade_sandbox_3484", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3484_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3484_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3484_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3484_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3484_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3484_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3484_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3484_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3484_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3484_unit_code_idx"
  end

  create_table "trade_sandbox_3485", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3485_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3485_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3485_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3485_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3485_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3485_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3485_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3485_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3485_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3485_unit_code_idx"
  end

  create_table "trade_sandbox_3486", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3486_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3486_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3486_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3486_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3486_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3486_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3486_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3486_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3486_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3486_unit_code_idx"
  end

  create_table "trade_sandbox_3487", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3487_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3487_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3487_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3487_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3487_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3487_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3487_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3487_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3487_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3487_unit_code_idx"
  end

  create_table "trade_sandbox_3488", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3488_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3488_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3488_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3488_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3488_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3488_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3488_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3488_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3488_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3488_unit_code_idx"
  end

  create_table "trade_sandbox_3490", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3490_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3490_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3490_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3490_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3490_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3490_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3490_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3490_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3490_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3490_unit_code_idx"
  end

  create_table "trade_sandbox_3492", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3492_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3492_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3492_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3492_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3492_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3492_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3492_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3492_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3492_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3492_unit_code_idx"
  end

  create_table "trade_sandbox_3493", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3493_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3493_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3493_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3493_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3493_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3493_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3493_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3493_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3493_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3493_unit_code_idx"
  end

  create_table "trade_sandbox_3494", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3494_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3494_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3494_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3494_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3494_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3494_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3494_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3494_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3494_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3494_unit_code_idx"
  end

  create_table "trade_sandbox_3497", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3497_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3497_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3497_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3497_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3497_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3497_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3497_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3497_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3497_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3497_unit_code_idx"
  end

  create_table "trade_sandbox_3498", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3498_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3498_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3498_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3498_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3498_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3498_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3498_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3498_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3498_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3498_unit_code_idx"
  end

  create_table "trade_sandbox_3499", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3499_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3499_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3499_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3499_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3499_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3499_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3499_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3499_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3499_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3499_unit_code_idx"
  end

  create_table "trade_sandbox_3500", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3500_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3500_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3500_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3500_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3500_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3500_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3500_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3500_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3500_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3500_unit_code_idx"
  end

  create_table "trade_sandbox_3501", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3501_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3501_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3501_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3501_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3501_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3501_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3501_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3501_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3501_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3501_unit_code_idx"
  end

  create_table "trade_sandbox_3503", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3503_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3503_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3503_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3503_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3503_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3503_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3503_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3503_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3503_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3503_unit_code_idx"
  end

  create_table "trade_sandbox_3504", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3504_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3504_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3504_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3504_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3504_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3504_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3504_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3504_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3504_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3504_unit_code_idx"
  end

  create_table "trade_sandbox_3505", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3505_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3505_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3505_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3505_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3505_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3505_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3505_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3505_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3505_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3505_unit_code_idx"
  end

  create_table "trade_sandbox_3506", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3506_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3506_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3506_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3506_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3506_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3506_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3506_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3506_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3506_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3506_unit_code_idx"
  end

  create_table "trade_sandbox_3507", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3507_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3507_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3507_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3507_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3507_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3507_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3507_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3507_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3507_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3507_unit_code_idx"
  end

  create_table "trade_sandbox_3509", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3509_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3509_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3509_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3509_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3509_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3509_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3509_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3509_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3509_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3509_unit_code_idx"
  end

  create_table "trade_sandbox_3511", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3511_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3511_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3511_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3511_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3511_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3511_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3511_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3511_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3511_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3511_unit_code_idx"
  end

  create_table "trade_sandbox_3514", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3514_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3514_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3514_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3514_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3514_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3514_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3514_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3514_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3514_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3514_unit_code_idx"
  end

  create_table "trade_sandbox_3515", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3515_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3515_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3515_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3515_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3515_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3515_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3515_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3515_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3515_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3515_unit_code_idx"
  end

  create_table "trade_sandbox_3516", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3516_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3516_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3516_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3516_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3516_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3516_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3516_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3516_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3516_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3516_unit_code_idx"
  end

  create_table "trade_sandbox_3517", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3517_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3517_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3517_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3517_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3517_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3517_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3517_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3517_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3517_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3517_unit_code_idx"
  end

  create_table "trade_sandbox_3518", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3518_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3518_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3518_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3518_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3518_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3518_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3518_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3518_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3518_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3518_unit_code_idx"
  end

  create_table "trade_sandbox_3519", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3519_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3519_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3519_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3519_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3519_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3519_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3519_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3519_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3519_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3519_unit_code_idx"
  end

  create_table "trade_sandbox_3522", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3522_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3522_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3522_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3522_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3522_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3522_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3522_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3522_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3522_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3522_unit_code_idx"
  end

  create_table "trade_sandbox_3523", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3523_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3523_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3523_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3523_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3523_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3523_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3523_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3523_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3523_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3523_unit_code_idx"
  end

  create_table "trade_sandbox_3524", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3524_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3524_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3524_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3524_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3524_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3524_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3524_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3524_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3524_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3524_unit_code_idx"
  end

  create_table "trade_sandbox_3525", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3525_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3525_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3525_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3525_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3525_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3525_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3525_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3525_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3525_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3525_unit_code_idx"
  end

  create_table "trade_sandbox_3526", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3526_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3526_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3526_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3526_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3526_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3526_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3526_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3526_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3526_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3526_unit_code_idx"
  end

  create_table "trade_sandbox_3527", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3527_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3527_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3527_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3527_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3527_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3527_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3527_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3527_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3527_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3527_unit_code_idx"
  end

  create_table "trade_sandbox_3528", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3528_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3528_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3528_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3528_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3528_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3528_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3528_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3528_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3528_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3528_unit_code_idx"
  end

  create_table "trade_sandbox_3531", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3531_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3531_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3531_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3531_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3531_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3531_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3531_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3531_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3531_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3531_unit_code_idx"
  end

  create_table "trade_sandbox_3532", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3532_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3532_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3532_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3532_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3532_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3532_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3532_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3532_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3532_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3532_unit_code_idx"
  end

  create_table "trade_sandbox_3533", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3533_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3533_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3533_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3533_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3533_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3533_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3533_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3533_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3533_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3533_unit_code_idx"
  end

  create_table "trade_sandbox_3534", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3534_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3534_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3534_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3534_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3534_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3534_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3534_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3534_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3534_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3534_unit_code_idx"
  end

  create_table "trade_sandbox_3535", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3535_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3535_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3535_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3535_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3535_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3535_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3535_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3535_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3535_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3535_unit_code_idx"
  end

  create_table "trade_sandbox_3536", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3536_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3536_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3536_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3536_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3536_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3536_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3536_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3536_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3536_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3536_unit_code_idx"
  end

  create_table "trade_sandbox_3537", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3537_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3537_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3537_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3537_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3537_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3537_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3537_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3537_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3537_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3537_unit_code_idx"
  end

  create_table "trade_sandbox_3538", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3538_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3538_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3538_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3538_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3538_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3538_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3538_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3538_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3538_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3538_unit_code_idx"
  end

  create_table "trade_sandbox_3539", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3539_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3539_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3539_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3539_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3539_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3539_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3539_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3539_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3539_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3539_unit_code_idx"
  end

  create_table "trade_sandbox_3540", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3540_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3540_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3540_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3540_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3540_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3540_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3540_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3540_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3540_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3540_unit_code_idx"
  end

  create_table "trade_sandbox_3541", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3541_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3541_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3541_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3541_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3541_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3541_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3541_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3541_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3541_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3541_unit_code_idx"
  end

  create_table "trade_sandbox_3542", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3542_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3542_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3542_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3542_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3542_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3542_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3542_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3542_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3542_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3542_unit_code_idx"
  end

  create_table "trade_sandbox_3544", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3544_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3544_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3544_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3544_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3544_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3544_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3544_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3544_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3544_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3544_unit_code_idx"
  end

  create_table "trade_sandbox_3545", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3545_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3545_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3545_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3545_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3545_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3545_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3545_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3545_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3545_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3545_unit_code_idx"
  end

  create_table "trade_sandbox_3546", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3546_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3546_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3546_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3546_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3546_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3546_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3546_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3546_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3546_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3546_unit_code_idx"
  end

  create_table "trade_sandbox_3547", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3547_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3547_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3547_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3547_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3547_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3547_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3547_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3547_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3547_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3547_unit_code_idx"
  end

  create_table "trade_sandbox_3548", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3548_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3548_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3548_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3548_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3548_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3548_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3548_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3548_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3548_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3548_unit_code_idx"
  end

  create_table "trade_sandbox_3549", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3549_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3549_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3549_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3549_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3549_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3549_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3549_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3549_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3549_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3549_unit_code_idx"
  end

  create_table "trade_sandbox_3550", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3550_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3550_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3550_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3550_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3550_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3550_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3550_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3550_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3550_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3550_unit_code_idx"
  end

  create_table "trade_sandbox_3551", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3551_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3551_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3551_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3551_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3551_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3551_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3551_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3551_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3551_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3551_unit_code_idx"
  end

  create_table "trade_sandbox_3552", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3552_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3552_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3552_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3552_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3552_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3552_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3552_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3552_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3552_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3552_unit_code_idx"
  end

  create_table "trade_sandbox_3553", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3553_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3553_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3553_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3553_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3553_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3553_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3553_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3553_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3553_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3553_unit_code_idx"
  end

  create_table "trade_sandbox_3554", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3554_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3554_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3554_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3554_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3554_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3554_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3554_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3554_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3554_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3554_unit_code_idx"
  end

  create_table "trade_sandbox_3555", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3555_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3555_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3555_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3555_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3555_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3555_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3555_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3555_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3555_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3555_unit_code_idx"
  end

  create_table "trade_sandbox_3556", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3556_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3556_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3556_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3556_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3556_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3556_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3556_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3556_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3556_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3556_unit_code_idx"
  end

  create_table "trade_sandbox_3558", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3558_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3558_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3558_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3558_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3558_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3558_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3558_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3558_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3558_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3558_unit_code_idx"
  end

  create_table "trade_sandbox_3560", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3560_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3560_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3560_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3560_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3560_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3560_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3560_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3560_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3560_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3560_unit_code_idx"
  end

  create_table "trade_sandbox_3561", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3561_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3561_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3561_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3561_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3561_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3561_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3561_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3561_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3561_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3561_unit_code_idx"
  end

  create_table "trade_sandbox_3562", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3562_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3562_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3562_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3562_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3562_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3562_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3562_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3562_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3562_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3562_unit_code_idx"
  end

  create_table "trade_sandbox_3563", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3563_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3563_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3563_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3563_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3563_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3563_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3563_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3563_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3563_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3563_unit_code_idx"
  end

  create_table "trade_sandbox_3564", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3564_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3564_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3564_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3564_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3564_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3564_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3564_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3564_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3564_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3564_unit_code_idx"
  end

  create_table "trade_sandbox_3565", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3565_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3565_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3565_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3565_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3565_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3565_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3565_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3565_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3565_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3565_unit_code_idx"
  end

  create_table "trade_sandbox_3566", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3566_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3566_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3566_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3566_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3566_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3566_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3566_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3566_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3566_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3566_unit_code_idx"
  end

  create_table "trade_sandbox_3570", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3570_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3570_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3570_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3570_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3570_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3570_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3570_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3570_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3570_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3570_unit_code_idx"
  end

  create_table "trade_sandbox_3571", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3571_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3571_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3571_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3571_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3571_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3571_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3571_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3571_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3571_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3571_unit_code_idx"
  end

  create_table "trade_sandbox_3572", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3572_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3572_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3572_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3572_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3572_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3572_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3572_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3572_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3572_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3572_unit_code_idx"
  end

  create_table "trade_sandbox_3573", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3573_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3573_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3573_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3573_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3573_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3573_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3573_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3573_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3573_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3573_unit_code_idx"
  end

  create_table "trade_sandbox_3574", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3574_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3574_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3574_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3574_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3574_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3574_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3574_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3574_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3574_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3574_unit_code_idx"
  end

  create_table "trade_sandbox_3575", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3575_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3575_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3575_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3575_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3575_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3575_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3575_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3575_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3575_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3575_unit_code_idx"
  end

  create_table "trade_sandbox_3576", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3576_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3576_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3576_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3576_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3576_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3576_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3576_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3576_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3576_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3576_unit_code_idx"
  end

  create_table "trade_sandbox_3577", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3577_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3577_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3577_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3577_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3577_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3577_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3577_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3577_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3577_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3577_unit_code_idx"
  end

  create_table "trade_sandbox_3578", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3578_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3578_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3578_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3578_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3578_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3578_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3578_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3578_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3578_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3578_unit_code_idx"
  end

  create_table "trade_sandbox_3579", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3579_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3579_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3579_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3579_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3579_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3579_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3579_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3579_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3579_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3579_unit_code_idx"
  end

  create_table "trade_sandbox_3581", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3581_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3581_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3581_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3581_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3581_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3581_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3581_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3581_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3581_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3581_unit_code_idx"
  end

  create_table "trade_sandbox_3582", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3582_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3582_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3582_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3582_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3582_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3582_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3582_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3582_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3582_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3582_unit_code_idx"
  end

  create_table "trade_sandbox_3584", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3584_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3584_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3584_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3584_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3584_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3584_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3584_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3584_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3584_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3584_unit_code_idx"
  end

  create_table "trade_sandbox_3585", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3585_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3585_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3585_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3585_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3585_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3585_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3585_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3585_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3585_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3585_unit_code_idx"
  end

  create_table "trade_sandbox_3587", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3587_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3587_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3587_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3587_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3587_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3587_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3587_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3587_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3587_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3587_unit_code_idx"
  end

  create_table "trade_sandbox_3588", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3588_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3588_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3588_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3588_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3588_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3588_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3588_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3588_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3588_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3588_unit_code_idx"
  end

  create_table "trade_sandbox_3589", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3589_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3589_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3589_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3589_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3589_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3589_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3589_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3589_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3589_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3589_unit_code_idx"
  end

  create_table "trade_sandbox_3590", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3590_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3590_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3590_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3590_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3590_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3590_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3590_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3590_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3590_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3590_unit_code_idx"
  end

  create_table "trade_sandbox_3591", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3591_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3591_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3591_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3591_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3591_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3591_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3591_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3591_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3591_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3591_unit_code_idx"
  end

  create_table "trade_sandbox_3592", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3592_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3592_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3592_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3592_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3592_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3592_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3592_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3592_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3592_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3592_unit_code_idx"
  end

  create_table "trade_sandbox_3593", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3593_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3593_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3593_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3593_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3593_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3593_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3593_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3593_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3593_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3593_unit_code_idx"
  end

  create_table "trade_sandbox_3594", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3594_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3594_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3594_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3594_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3594_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3594_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3594_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3594_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3594_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3594_unit_code_idx"
  end

  create_table "trade_sandbox_3596", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3596_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3596_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3596_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3596_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3596_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3596_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3596_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3596_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3596_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3596_unit_code_idx"
  end

  create_table "trade_sandbox_3597", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3597_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3597_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3597_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3597_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3597_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3597_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3597_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3597_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3597_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3597_unit_code_idx"
  end

  create_table "trade_sandbox_3598", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3598_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3598_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3598_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3598_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3598_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3598_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3598_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3598_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3598_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3598_unit_code_idx"
  end

  create_table "trade_sandbox_3599", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3599_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3599_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3599_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3599_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3599_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3599_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3599_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3599_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3599_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3599_unit_code_idx"
  end

  create_table "trade_sandbox_3600", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3600_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3600_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3600_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3600_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3600_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3600_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3600_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3600_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3600_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3600_unit_code_idx"
  end

  create_table "trade_sandbox_3601", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3601_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3601_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3601_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3601_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3601_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3601_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3601_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3601_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3601_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3601_unit_code_idx"
  end

  create_table "trade_sandbox_3602", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3602_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3602_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3602_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3602_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3602_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3602_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3602_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3602_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3602_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3602_unit_code_idx"
  end

  create_table "trade_sandbox_3603", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3603_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3603_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3603_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3603_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3603_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3603_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3603_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3603_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3603_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3603_unit_code_idx"
  end

  create_table "trade_sandbox_3604", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3604_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3604_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3604_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3604_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3604_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3604_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3604_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3604_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3604_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3604_unit_code_idx"
  end

  create_table "trade_sandbox_3606", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3606_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3606_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3606_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3606_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3606_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3606_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3606_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3606_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3606_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3606_unit_code_idx"
  end

  create_table "trade_sandbox_3607", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3607_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3607_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3607_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3607_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3607_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3607_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3607_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3607_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3607_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3607_unit_code_idx"
  end

  create_table "trade_sandbox_3608", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3608_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3608_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3608_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3608_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3608_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3608_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3608_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3608_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3608_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3608_unit_code_idx"
  end

  create_table "trade_sandbox_3609", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3609_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3609_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3609_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3609_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3609_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3609_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3609_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3609_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3609_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3609_unit_code_idx"
  end

  create_table "trade_sandbox_3610", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3610_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3610_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3610_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3610_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3610_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3610_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3610_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3610_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3610_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3610_unit_code_idx"
  end

  create_table "trade_sandbox_3611", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3611_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3611_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3611_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3611_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3611_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3611_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3611_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3611_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3611_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3611_unit_code_idx"
  end

  create_table "trade_sandbox_3612", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3612_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3612_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3612_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3612_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3612_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3612_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3612_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3612_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3612_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3612_unit_code_idx"
  end

  create_table "trade_sandbox_3613", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3613_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3613_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3613_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3613_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3613_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3613_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3613_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3613_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3613_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3613_unit_code_idx"
  end

  create_table "trade_sandbox_3614", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3614_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3614_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3614_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3614_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3614_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3614_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3614_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3614_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3614_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3614_unit_code_idx"
  end

  create_table "trade_sandbox_3616", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3616_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3616_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3616_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3616_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3616_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3616_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3616_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3616_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3616_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3616_unit_code_idx"
  end

  create_table "trade_sandbox_3617", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3617_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3617_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3617_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3617_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3617_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3617_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3617_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3617_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3617_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3617_unit_code_idx"
  end

  create_table "trade_sandbox_3618", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3618_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3618_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3618_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3618_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3618_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3618_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3618_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3618_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3618_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3618_unit_code_idx"
  end

  create_table "trade_sandbox_3619", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3619_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3619_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3619_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3619_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3619_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3619_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3619_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3619_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3619_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3619_unit_code_idx"
  end

  create_table "trade_sandbox_3620", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3620_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3620_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3620_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3620_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3620_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3620_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3620_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3620_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3620_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3620_unit_code_idx"
  end

  create_table "trade_sandbox_3621", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3621_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3621_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3621_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3621_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3621_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3621_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3621_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3621_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3621_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3621_unit_code_idx"
  end

  create_table "trade_sandbox_3622", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3622_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3622_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3622_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3622_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3622_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3622_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3622_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3622_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3622_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3622_unit_code_idx"
  end

  create_table "trade_sandbox_3623", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3623_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3623_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3623_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3623_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3623_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3623_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3623_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3623_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3623_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3623_unit_code_idx"
  end

  create_table "trade_sandbox_3625", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3625_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3625_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3625_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3625_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3625_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3625_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3625_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3625_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3625_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3625_unit_code_idx"
  end

  create_table "trade_sandbox_3626", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3626_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3626_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3626_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3626_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3626_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3626_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3626_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3626_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3626_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3626_unit_code_idx"
  end

  create_table "trade_sandbox_3628", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3628_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3628_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3628_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3628_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3628_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3628_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3628_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3628_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3628_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3628_unit_code_idx"
  end

  create_table "trade_sandbox_3629", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3629_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3629_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3629_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3629_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3629_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3629_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3629_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3629_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3629_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3629_unit_code_idx"
  end

  create_table "trade_sandbox_3630", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3630_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3630_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3630_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3630_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3630_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3630_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3630_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3630_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3630_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3630_unit_code_idx"
  end

  create_table "trade_sandbox_3631", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3631_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3631_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3631_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3631_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3631_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3631_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3631_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3631_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3631_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3631_unit_code_idx"
  end

  create_table "trade_sandbox_3632", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3632_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3632_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3632_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3632_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3632_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3632_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3632_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3632_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3632_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3632_unit_code_idx"
  end

  create_table "trade_sandbox_3633", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3633_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3633_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3633_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3633_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3633_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3633_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3633_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3633_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3633_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3633_unit_code_idx"
  end

  create_table "trade_sandbox_3634", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3634_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3634_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3634_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3634_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3634_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3634_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3634_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3634_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3634_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3634_unit_code_idx"
  end

  create_table "trade_sandbox_3635", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3635_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3635_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3635_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3635_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3635_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3635_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3635_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3635_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3635_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3635_unit_code_idx"
  end

  create_table "trade_sandbox_3636", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3636_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3636_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3636_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3636_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3636_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3636_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3636_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3636_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3636_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3636_unit_code_idx"
  end

  create_table "trade_sandbox_3637", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3637_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3637_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3637_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3637_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3637_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3637_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3637_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3637_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3637_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3637_unit_code_idx"
  end

  create_table "trade_sandbox_3645", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3645_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3645_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3645_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3645_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3645_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3645_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3645_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3645_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3645_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3645_unit_code_idx"
  end

  create_table "trade_sandbox_3646", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3646_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3646_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3646_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3646_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3646_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3646_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3646_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3646_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3646_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3646_unit_code_idx"
  end

  create_table "trade_sandbox_3647", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3647_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3647_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3647_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3647_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3647_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3647_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3647_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3647_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3647_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3647_unit_code_idx"
  end

  create_table "trade_sandbox_3648", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3648_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3648_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3648_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3648_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3648_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3648_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3648_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3648_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3648_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3648_unit_code_idx"
  end

  create_table "trade_sandbox_3649", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3649_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3649_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3649_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3649_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3649_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3649_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3649_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3649_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3649_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3649_unit_code_idx"
  end

  create_table "trade_sandbox_3650", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3650_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3650_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3650_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3650_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3650_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3650_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3650_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3650_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3650_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3650_unit_code_idx"
  end

  create_table "trade_sandbox_3652", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3652_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3652_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3652_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3652_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3652_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3652_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3652_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3652_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3652_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3652_unit_code_idx"
  end

  create_table "trade_sandbox_3653", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3653_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3653_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3653_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3653_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3653_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3653_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3653_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3653_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3653_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3653_unit_code_idx"
  end

  create_table "trade_sandbox_3654", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3654_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3654_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3654_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3654_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3654_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3654_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3654_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3654_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3654_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3654_unit_code_idx"
  end

  create_table "trade_sandbox_3655", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3655_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3655_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3655_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3655_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3655_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3655_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3655_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3655_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3655_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3655_unit_code_idx"
  end

  create_table "trade_sandbox_3656", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3656_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3656_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3656_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3656_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3656_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3656_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3656_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3656_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3656_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3656_unit_code_idx"
  end

  create_table "trade_sandbox_3657", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3657_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3657_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3657_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3657_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3657_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3657_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3657_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3657_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3657_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3657_unit_code_idx"
  end

  create_table "trade_sandbox_3658", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3658_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3658_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3658_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3658_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3658_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3658_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3658_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3658_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3658_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3658_unit_code_idx"
  end

  create_table "trade_sandbox_3659", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3659_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3659_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3659_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3659_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3659_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3659_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3659_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3659_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3659_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3659_unit_code_idx"
  end

  create_table "trade_sandbox_3660", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3660_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3660_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3660_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3660_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3660_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3660_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3660_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3660_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3660_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3660_unit_code_idx"
  end

  create_table "trade_sandbox_3661", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3661_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3661_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3661_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3661_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3661_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3661_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3661_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3661_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3661_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3661_unit_code_idx"
  end

  create_table "trade_sandbox_3662", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3662_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3662_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3662_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3662_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3662_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3662_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3662_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3662_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3662_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3662_unit_code_idx"
  end

  create_table "trade_sandbox_3663", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3663_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3663_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3663_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3663_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3663_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3663_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3663_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3663_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3663_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3663_unit_code_idx"
  end

  create_table "trade_sandbox_3664", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3664_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3664_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3664_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3664_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3664_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3664_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3664_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3664_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3664_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3664_unit_code_idx"
  end

  create_table "trade_sandbox_3666", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3666_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3666_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3666_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3666_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3666_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3666_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3666_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3666_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3666_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3666_unit_code_idx"
  end

  create_table "trade_sandbox_3667", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3667_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3667_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3667_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3667_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3667_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3667_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3667_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3667_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3667_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3667_unit_code_idx"
  end

  create_table "trade_sandbox_3668", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3668_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3668_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3668_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3668_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3668_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3668_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3668_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3668_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3668_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3668_unit_code_idx"
  end

  create_table "trade_sandbox_3669", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3669_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3669_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3669_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3669_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3669_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3669_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3669_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3669_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3669_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3669_unit_code_idx"
  end

  create_table "trade_sandbox_3670", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3670_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3670_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3670_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3670_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3670_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3670_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3670_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3670_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3670_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3670_unit_code_idx"
  end

  create_table "trade_sandbox_3671", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3671_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3671_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3671_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3671_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3671_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3671_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3671_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3671_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3671_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3671_unit_code_idx"
  end

  create_table "trade_sandbox_3672", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3672_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3672_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3672_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3672_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3672_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3672_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3672_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3672_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3672_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3672_unit_code_idx"
  end

  create_table "trade_sandbox_3674", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3674_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3674_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3674_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3674_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3674_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3674_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3674_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3674_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3674_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3674_unit_code_idx"
  end

  create_table "trade_sandbox_3675", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3675_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3675_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3675_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3675_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3675_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3675_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3675_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3675_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3675_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3675_unit_code_idx"
  end

  create_table "trade_sandbox_3676", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3676_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3676_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3676_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3676_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3676_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3676_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3676_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3676_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3676_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3676_unit_code_idx"
  end

  create_table "trade_sandbox_3677", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3677_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3677_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3677_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3677_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3677_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3677_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3677_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3677_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3677_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3677_unit_code_idx"
  end

  create_table "trade_sandbox_3678", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3678_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3678_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3678_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3678_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3678_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3678_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3678_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3678_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3678_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3678_unit_code_idx"
  end

  create_table "trade_sandbox_3679", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3679_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3679_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3679_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3679_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3679_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3679_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3679_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3679_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3679_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3679_unit_code_idx"
  end

  create_table "trade_sandbox_3680", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3680_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3680_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3680_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3680_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3680_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3680_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3680_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3680_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3680_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3680_unit_code_idx"
  end

  create_table "trade_sandbox_3681", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3681_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3681_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3681_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3681_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3681_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3681_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3681_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3681_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3681_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3681_unit_code_idx"
  end

  create_table "trade_sandbox_3682", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3682_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3682_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3682_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3682_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3682_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3682_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3682_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3682_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3682_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3682_unit_code_idx"
  end

  create_table "trade_sandbox_3683", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3683_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3683_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3683_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3683_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3683_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3683_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3683_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3683_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3683_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3683_unit_code_idx"
  end

  create_table "trade_sandbox_3686", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3686_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3686_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3686_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3686_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3686_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3686_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3686_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3686_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3686_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3686_unit_code_idx"
  end

  create_table "trade_sandbox_3687", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3687_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3687_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3687_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3687_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3687_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3687_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3687_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3687_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3687_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3687_unit_code_idx"
  end

  create_table "trade_sandbox_3688", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3688_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3688_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3688_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3688_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3688_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3688_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3688_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3688_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3688_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3688_unit_code_idx"
  end

  create_table "trade_sandbox_3689", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3689_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3689_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3689_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3689_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3689_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3689_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3689_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3689_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3689_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3689_unit_code_idx"
  end

  create_table "trade_sandbox_3690", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3690_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3690_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3690_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3690_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3690_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3690_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3690_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3690_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3690_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3690_unit_code_idx"
  end

  create_table "trade_sandbox_3692", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3692_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3692_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3692_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3692_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3692_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3692_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3692_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3692_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3692_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3692_unit_code_idx"
  end

  create_table "trade_sandbox_3693", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3693_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3693_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3693_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3693_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3693_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3693_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3693_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3693_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3693_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3693_unit_code_idx"
  end

  create_table "trade_sandbox_3694", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3694_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3694_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3694_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3694_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3694_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3694_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3694_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3694_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3694_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3694_unit_code_idx"
  end

  create_table "trade_sandbox_3695", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3695_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3695_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3695_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3695_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3695_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3695_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3695_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3695_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3695_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3695_unit_code_idx"
  end

  create_table "trade_sandbox_3696", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3696_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3696_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3696_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3696_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3696_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3696_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3696_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3696_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3696_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3696_unit_code_idx"
  end

  create_table "trade_sandbox_3697", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3697_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3697_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3697_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3697_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3697_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3697_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3697_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3697_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3697_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3697_unit_code_idx"
  end

  create_table "trade_sandbox_3699", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3699_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3699_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3699_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3699_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3699_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3699_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3699_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3699_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3699_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3699_unit_code_idx"
  end

  create_table "trade_sandbox_3700", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3700_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3700_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3700_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3700_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3700_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3700_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3700_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3700_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3700_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3700_unit_code_idx"
  end

  create_table "trade_sandbox_3702", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3702_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3702_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3702_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3702_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3702_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3702_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3702_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3702_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3702_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3702_unit_code_idx"
  end

  create_table "trade_sandbox_3703", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3703_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3703_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3703_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3703_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3703_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3703_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3703_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3703_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3703_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3703_unit_code_idx"
  end

  create_table "trade_sandbox_3704", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3704_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3704_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3704_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3704_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3704_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3704_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3704_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3704_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3704_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3704_unit_code_idx"
  end

  create_table "trade_sandbox_3705", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3705_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3705_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3705_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3705_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3705_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3705_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3705_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3705_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3705_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3705_unit_code_idx"
  end

  create_table "trade_sandbox_3707", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3707_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3707_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3707_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3707_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3707_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3707_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3707_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3707_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3707_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3707_unit_code_idx"
  end

  create_table "trade_sandbox_3708", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3708_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3708_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3708_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3708_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3708_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3708_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3708_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3708_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3708_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3708_unit_code_idx"
  end

  create_table "trade_sandbox_3711", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3711_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3711_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3711_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3711_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3711_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3711_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3711_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3711_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3711_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3711_unit_code_idx"
  end

  create_table "trade_sandbox_3713", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3713_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3713_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3713_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3713_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3713_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3713_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3713_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3713_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3713_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3713_unit_code_idx"
  end

  create_table "trade_sandbox_3714", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3714_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3714_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3714_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3714_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3714_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3714_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3714_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3714_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3714_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3714_unit_code_idx"
  end

  create_table "trade_sandbox_3715", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3715_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3715_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3715_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3715_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3715_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3715_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3715_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3715_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3715_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3715_unit_code_idx"
  end

  create_table "trade_sandbox_3716", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3716_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3716_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3716_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3716_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3716_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3716_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3716_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3716_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3716_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3716_unit_code_idx"
  end

  create_table "trade_sandbox_3717", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3717_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3717_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3717_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3717_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3717_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3717_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3717_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3717_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3717_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3717_unit_code_idx"
  end

  create_table "trade_sandbox_3718", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3718_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3718_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3718_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3718_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3718_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3718_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3718_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3718_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3718_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3718_unit_code_idx"
  end

  create_table "trade_sandbox_3719", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3719_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3719_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3719_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3719_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3719_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3719_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3719_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3719_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3719_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3719_unit_code_idx"
  end

  create_table "trade_sandbox_3720", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3720_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3720_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3720_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3720_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3720_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3720_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3720_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3720_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3720_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3720_unit_code_idx"
  end

  create_table "trade_sandbox_3721", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3721_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3721_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3721_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3721_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3721_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3721_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3721_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3721_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3721_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3721_unit_code_idx"
  end

  create_table "trade_sandbox_3722", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3722_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3722_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3722_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3722_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3722_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3722_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3722_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3722_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3722_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3722_unit_code_idx"
  end

  create_table "trade_sandbox_3723", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3723_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3723_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3723_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3723_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3723_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3723_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3723_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3723_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3723_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3723_unit_code_idx"
  end

  create_table "trade_sandbox_3725", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3725_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3725_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3725_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3725_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3725_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3725_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3725_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3725_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3725_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3725_unit_code_idx"
  end

  create_table "trade_sandbox_3726", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3726_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3726_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3726_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3726_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3726_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3726_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3726_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3726_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3726_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3726_unit_code_idx"
  end

  create_table "trade_sandbox_3727", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3727_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3727_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3727_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3727_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3727_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3727_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3727_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3727_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3727_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3727_unit_code_idx"
  end

  create_table "trade_sandbox_3728", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3728_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3728_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3728_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3728_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3728_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3728_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3728_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3728_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3728_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3728_unit_code_idx"
  end

  create_table "trade_sandbox_3729", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3729_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3729_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3729_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3729_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3729_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3729_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3729_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3729_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3729_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3729_unit_code_idx"
  end

  create_table "trade_sandbox_3730", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3730_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3730_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3730_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3730_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3730_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3730_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3730_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3730_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3730_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3730_unit_code_idx"
  end

  create_table "trade_sandbox_3732", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3732_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3732_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3732_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3732_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3732_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3732_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3732_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3732_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3732_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3732_unit_code_idx"
  end

  create_table "trade_sandbox_3733", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3733_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3733_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3733_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3733_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3733_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3733_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3733_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3733_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3733_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3733_unit_code_idx"
  end

  create_table "trade_sandbox_3734", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3734_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3734_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3734_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3734_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3734_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3734_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3734_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3734_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3734_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3734_unit_code_idx"
  end

  create_table "trade_sandbox_3735", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3735_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3735_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3735_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3735_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3735_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3735_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3735_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3735_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3735_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3735_unit_code_idx"
  end

  create_table "trade_sandbox_3737", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3737_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3737_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3737_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3737_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3737_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3737_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3737_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3737_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3737_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3737_unit_code_idx"
  end

  create_table "trade_sandbox_3738", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3738_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3738_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3738_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3738_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3738_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3738_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3738_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3738_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3738_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3738_unit_code_idx"
  end

  create_table "trade_sandbox_3740", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3740_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3740_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3740_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3740_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3740_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3740_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3740_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3740_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3740_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3740_unit_code_idx"
  end

  create_table "trade_sandbox_3741", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3741_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3741_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3741_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3741_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3741_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3741_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3741_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3741_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3741_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3741_unit_code_idx"
  end

  create_table "trade_sandbox_3742", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3742_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3742_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3742_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3742_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3742_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3742_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3742_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3742_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3742_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3742_unit_code_idx"
  end

  create_table "trade_sandbox_3743", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3743_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3743_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3743_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3743_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3743_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3743_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3743_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3743_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3743_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3743_unit_code_idx"
  end

  create_table "trade_sandbox_3744", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3744_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3744_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3744_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3744_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3744_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3744_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3744_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3744_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3744_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3744_unit_code_idx"
  end

  create_table "trade_sandbox_3745", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3745_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3745_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3745_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3745_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3745_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3745_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3745_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3745_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3745_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3745_unit_code_idx"
  end

  create_table "trade_sandbox_3746", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3746_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3746_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3746_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3746_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3746_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3746_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3746_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3746_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3746_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3746_unit_code_idx"
  end

  create_table "trade_sandbox_3747", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3747_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3747_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3747_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3747_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3747_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3747_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3747_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3747_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3747_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3747_unit_code_idx"
  end

  create_table "trade_sandbox_3748", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3748_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3748_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3748_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3748_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3748_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3748_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3748_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3748_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3748_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3748_unit_code_idx"
  end

  create_table "trade_sandbox_3750", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3750_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3750_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3750_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3750_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3750_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3750_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3750_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3750_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3750_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3750_unit_code_idx"
  end

  create_table "trade_sandbox_3751", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3751_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3751_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3751_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3751_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3751_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3751_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3751_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3751_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3751_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3751_unit_code_idx"
  end

  create_table "trade_sandbox_3752", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3752_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3752_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3752_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3752_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3752_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3752_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3752_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3752_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3752_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3752_unit_code_idx"
  end

  create_table "trade_sandbox_3753", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3753_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3753_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3753_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3753_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3753_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3753_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3753_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3753_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3753_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3753_unit_code_idx"
  end

  create_table "trade_sandbox_3754", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3754_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3754_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3754_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3754_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3754_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3754_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3754_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3754_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3754_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3754_unit_code_idx"
  end

  create_table "trade_sandbox_3755", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3755_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3755_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3755_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3755_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3755_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3755_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3755_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3755_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3755_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3755_unit_code_idx"
  end

  create_table "trade_sandbox_3756", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3756_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3756_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3756_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3756_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3756_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3756_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3756_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3756_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3756_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3756_unit_code_idx"
  end

  create_table "trade_sandbox_3757", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3757_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3757_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3757_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3757_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3757_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3757_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3757_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3757_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3757_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3757_unit_code_idx"
  end

  create_table "trade_sandbox_3758", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3758_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3758_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3758_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3758_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3758_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3758_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3758_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3758_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3758_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3758_unit_code_idx"
  end

  create_table "trade_sandbox_3759", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3759_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3759_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3759_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3759_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3759_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3759_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3759_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3759_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3759_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3759_unit_code_idx"
  end

  create_table "trade_sandbox_3760", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3760_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3760_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3760_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3760_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3760_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3760_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3760_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3760_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3760_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3760_unit_code_idx"
  end

  create_table "trade_sandbox_3761", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3761_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3761_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3761_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3761_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3761_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3761_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3761_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3761_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3761_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3761_unit_code_idx"
  end

  create_table "trade_sandbox_3762", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3762_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3762_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3762_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3762_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3762_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3762_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3762_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3762_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3762_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3762_unit_code_idx"
  end

  create_table "trade_sandbox_3763", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3763_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3763_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3763_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3763_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3763_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3763_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3763_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3763_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3763_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3763_unit_code_idx"
  end

  create_table "trade_sandbox_3764", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3764_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3764_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3764_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3764_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3764_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3764_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3764_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3764_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3764_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3764_unit_code_idx"
  end

  create_table "trade_sandbox_3765", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3765_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3765_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3765_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3765_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3765_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3765_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3765_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3765_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3765_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3765_unit_code_idx"
  end

  create_table "trade_sandbox_3766", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3766_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3766_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3766_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3766_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3766_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3766_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3766_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3766_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3766_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3766_unit_code_idx"
  end

  create_table "trade_sandbox_3767", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3767_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3767_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3767_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3767_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3767_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3767_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3767_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3767_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3767_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3767_unit_code_idx"
  end

  create_table "trade_sandbox_3768", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3768_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3768_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3768_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3768_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3768_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3768_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3768_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3768_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3768_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3768_unit_code_idx"
  end

  create_table "trade_sandbox_3769", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3769_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3769_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3769_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3769_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3769_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3769_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3769_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3769_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3769_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3769_unit_code_idx"
  end

  create_table "trade_sandbox_3770", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3770_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3770_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3770_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3770_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3770_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3770_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3770_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3770_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3770_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3770_unit_code_idx"
  end

  create_table "trade_sandbox_3771", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3771_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3771_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3771_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3771_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3771_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3771_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3771_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3771_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3771_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3771_unit_code_idx"
  end

  create_table "trade_sandbox_3772", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3772_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3772_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3772_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3772_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3772_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3772_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3772_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3772_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3772_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3772_unit_code_idx"
  end

  create_table "trade_sandbox_3773", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3773_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3773_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3773_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3773_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3773_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3773_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3773_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3773_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3773_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3773_unit_code_idx"
  end

  create_table "trade_sandbox_3774", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3774_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3774_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3774_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3774_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3774_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3774_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3774_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3774_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3774_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3774_unit_code_idx"
  end

  create_table "trade_sandbox_3775", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3775_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3775_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3775_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3775_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3775_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3775_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3775_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3775_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3775_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3775_unit_code_idx"
  end

  create_table "trade_sandbox_3776", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3776_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3776_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3776_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3776_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3776_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3776_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3776_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3776_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3776_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3776_unit_code_idx"
  end

  create_table "trade_sandbox_3777", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3777_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3777_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3777_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3777_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3777_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3777_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3777_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3777_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3777_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3777_unit_code_idx"
  end

  create_table "trade_sandbox_3778", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3778_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3778_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3778_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3778_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3778_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3778_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3778_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3778_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3778_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3778_unit_code_idx"
  end

  create_table "trade_sandbox_3784", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3784_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3784_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3784_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3784_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3784_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3784_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3784_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3784_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3784_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3784_unit_code_idx"
  end

  create_table "trade_sandbox_3785", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3785_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3785_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3785_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3785_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3785_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3785_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3785_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3785_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3785_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3785_unit_code_idx"
  end

  create_table "trade_sandbox_3787", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3787_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3787_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3787_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3787_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3787_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3787_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3787_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3787_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3787_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3787_unit_code_idx"
  end

  create_table "trade_sandbox_3788", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3788_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3788_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3788_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3788_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3788_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3788_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3788_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3788_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3788_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3788_unit_code_idx"
  end

  create_table "trade_sandbox_3790", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3790_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3790_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3790_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3790_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3790_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3790_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3790_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3790_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3790_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3790_unit_code_idx"
  end

  create_table "trade_sandbox_3791", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3791_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3791_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3791_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3791_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3791_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3791_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3791_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3791_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3791_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3791_unit_code_idx"
  end

  create_table "trade_sandbox_3792", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3792_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3792_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3792_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3792_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3792_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3792_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3792_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3792_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3792_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3792_unit_code_idx"
  end

  create_table "trade_sandbox_3793", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3793_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3793_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3793_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3793_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3793_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3793_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3793_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3793_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3793_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3793_unit_code_idx"
  end

  create_table "trade_sandbox_3795", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3795_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3795_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3795_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3795_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3795_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3795_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3795_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3795_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3795_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3795_unit_code_idx"
  end

  create_table "trade_sandbox_3797", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3797_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3797_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3797_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3797_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3797_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3797_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3797_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3797_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3797_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3797_unit_code_idx"
  end

  create_table "trade_sandbox_3798", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3798_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3798_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3798_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3798_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3798_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3798_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3798_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3798_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3798_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3798_unit_code_idx"
  end

  create_table "trade_sandbox_3799", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3799_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3799_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3799_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3799_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3799_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3799_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3799_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3799_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3799_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3799_unit_code_idx"
  end

  create_table "trade_sandbox_3800", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3800_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3800_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3800_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3800_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3800_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3800_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3800_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3800_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3800_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3800_unit_code_idx"
  end

  create_table "trade_sandbox_3801", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3801_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3801_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3801_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3801_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3801_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3801_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3801_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3801_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3801_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3801_unit_code_idx"
  end

  create_table "trade_sandbox_3802", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3802_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3802_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3802_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3802_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3802_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3802_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3802_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3802_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3802_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3802_unit_code_idx"
  end

  create_table "trade_sandbox_3803", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3803_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3803_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3803_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3803_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3803_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3803_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3803_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3803_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3803_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3803_unit_code_idx"
  end

  create_table "trade_sandbox_3804", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3804_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3804_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3804_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3804_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3804_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3804_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3804_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3804_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3804_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3804_unit_code_idx"
  end

  create_table "trade_sandbox_3805", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3805_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3805_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3805_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3805_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3805_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3805_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3805_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3805_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3805_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3805_unit_code_idx"
  end

  create_table "trade_sandbox_3806", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3806_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3806_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3806_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3806_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3806_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3806_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3806_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3806_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3806_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3806_unit_code_idx"
  end

  create_table "trade_sandbox_3807", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3807_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3807_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3807_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3807_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3807_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3807_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3807_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3807_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3807_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3807_unit_code_idx"
  end

  create_table "trade_sandbox_3808", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3808_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3808_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3808_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3808_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3808_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3808_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3808_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3808_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3808_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3808_unit_code_idx"
  end

  create_table "trade_sandbox_3809", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3809_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3809_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3809_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3809_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3809_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3809_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3809_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3809_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3809_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3809_unit_code_idx"
  end

  create_table "trade_sandbox_3810", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3810_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3810_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3810_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3810_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3810_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3810_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3810_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3810_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3810_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3810_unit_code_idx"
  end

  create_table "trade_sandbox_3811", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3811_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3811_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3811_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3811_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3811_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3811_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3811_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3811_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3811_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3811_unit_code_idx"
  end

  create_table "trade_sandbox_3812", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3812_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3812_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3812_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3812_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3812_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3812_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3812_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3812_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3812_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3812_unit_code_idx"
  end

  create_table "trade_sandbox_3813", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3813_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3813_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3813_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3813_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3813_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3813_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3813_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3813_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3813_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3813_unit_code_idx"
  end

  create_table "trade_sandbox_3815", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3815_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3815_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3815_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3815_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3815_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3815_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3815_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3815_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3815_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3815_unit_code_idx"
  end

  create_table "trade_sandbox_3816", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3816_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3816_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3816_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3816_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3816_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3816_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3816_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3816_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3816_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3816_unit_code_idx"
  end

  create_table "trade_sandbox_3817", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3817_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3817_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3817_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3817_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3817_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3817_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3817_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3817_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3817_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3817_unit_code_idx"
  end

  create_table "trade_sandbox_3819", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3819_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3819_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3819_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3819_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3819_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3819_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3819_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3819_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3819_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3819_unit_code_idx"
  end

  create_table "trade_sandbox_3820", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3820_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3820_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3820_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3820_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3820_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3820_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3820_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3820_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3820_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3820_unit_code_idx"
  end

  create_table "trade_sandbox_3821", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3821_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3821_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3821_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3821_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3821_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3821_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3821_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3821_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3821_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3821_unit_code_idx"
  end

  create_table "trade_sandbox_3822", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3822_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3822_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3822_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3822_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3822_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3822_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3822_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3822_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3822_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3822_unit_code_idx"
  end

  create_table "trade_sandbox_3823", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3823_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3823_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3823_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3823_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3823_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3823_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3823_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3823_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3823_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3823_unit_code_idx"
  end

  create_table "trade_sandbox_3827", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3827_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3827_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3827_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3827_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3827_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3827_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3827_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3827_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3827_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3827_unit_code_idx"
  end

  create_table "trade_sandbox_3828", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3828_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3828_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3828_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3828_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3828_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3828_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3828_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3828_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3828_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3828_unit_code_idx"
  end

  create_table "trade_sandbox_3829", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3829_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3829_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3829_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3829_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3829_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3829_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3829_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3829_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3829_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3829_unit_code_idx"
  end

  create_table "trade_sandbox_3833", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3833_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3833_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3833_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3833_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3833_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3833_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3833_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3833_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3833_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3833_unit_code_idx"
  end

  create_table "trade_sandbox_3834", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3834_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3834_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3834_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3834_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3834_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3834_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3834_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3834_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3834_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3834_unit_code_idx"
  end

  create_table "trade_sandbox_3835", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3835_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3835_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3835_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3835_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3835_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3835_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3835_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3835_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3835_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3835_unit_code_idx"
  end

  create_table "trade_sandbox_3836", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3836_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3836_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3836_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3836_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3836_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3836_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3836_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3836_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3836_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3836_unit_code_idx"
  end

  create_table "trade_sandbox_3837", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3837_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3837_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3837_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3837_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3837_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3837_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3837_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3837_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3837_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3837_unit_code_idx"
  end

  create_table "trade_sandbox_3838", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3838_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3838_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3838_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3838_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3838_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3838_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3838_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3838_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3838_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3838_unit_code_idx"
  end

  create_table "trade_sandbox_3839", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3839_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3839_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3839_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3839_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3839_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3839_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3839_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3839_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3839_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3839_unit_code_idx"
  end

  create_table "trade_sandbox_3840", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3840_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3840_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3840_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3840_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3840_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3840_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3840_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3840_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3840_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3840_unit_code_idx"
  end

  create_table "trade_sandbox_3841", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3841_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3841_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3841_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3841_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3841_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3841_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3841_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3841_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3841_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3841_unit_code_idx"
  end

  create_table "trade_sandbox_3842", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3842_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3842_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3842_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3842_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3842_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3842_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3842_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3842_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3842_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3842_unit_code_idx"
  end

  create_table "trade_sandbox_3843", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3843_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3843_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3843_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3843_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3843_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3843_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3843_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3843_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3843_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3843_unit_code_idx"
  end

  create_table "trade_sandbox_3844", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3844_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3844_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3844_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3844_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3844_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3844_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3844_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3844_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3844_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3844_unit_code_idx"
  end

  create_table "trade_sandbox_3845", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3845_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3845_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3845_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3845_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3845_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3845_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3845_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3845_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3845_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3845_unit_code_idx"
  end

  create_table "trade_sandbox_3846", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3846_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3846_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3846_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3846_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3846_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3846_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3846_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3846_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3846_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3846_unit_code_idx"
  end

  create_table "trade_sandbox_3847", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3847_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3847_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3847_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3847_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3847_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3847_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3847_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3847_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3847_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3847_unit_code_idx"
  end

  create_table "trade_sandbox_3848", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3848_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3848_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3848_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3848_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3848_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3848_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3848_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3848_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3848_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3848_unit_code_idx"
  end

  create_table "trade_sandbox_3849", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3849_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3849_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3849_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3849_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3849_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3849_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3849_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3849_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3849_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3849_unit_code_idx"
  end

  create_table "trade_sandbox_3850", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3850_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3850_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3850_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3850_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3850_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3850_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3850_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3850_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3850_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3850_unit_code_idx"
  end

  create_table "trade_sandbox_3851", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3851_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3851_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3851_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3851_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3851_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3851_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3851_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3851_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3851_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3851_unit_code_idx"
  end

  create_table "trade_sandbox_3852", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3852_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3852_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3852_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3852_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3852_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3852_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3852_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3852_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3852_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3852_unit_code_idx"
  end

  create_table "trade_sandbox_3853", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3853_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3853_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3853_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3853_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3853_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3853_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3853_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3853_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3853_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3853_unit_code_idx"
  end

  create_table "trade_sandbox_3854", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3854_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3854_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3854_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3854_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3854_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3854_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3854_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3854_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3854_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3854_unit_code_idx"
  end

  create_table "trade_sandbox_3858", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3858_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3858_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3858_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3858_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3858_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3858_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3858_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3858_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3858_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3858_unit_code_idx"
  end

  create_table "trade_sandbox_3859", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3859_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3859_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3859_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3859_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3859_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3859_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3859_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3859_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3859_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3859_unit_code_idx"
  end

  create_table "trade_sandbox_3860", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3860_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3860_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3860_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3860_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3860_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3860_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3860_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3860_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3860_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3860_unit_code_idx"
  end

  create_table "trade_sandbox_3862", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3862_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3862_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3862_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3862_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3862_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3862_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3862_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3862_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3862_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3862_unit_code_idx"
  end

  create_table "trade_sandbox_3863", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3863_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3863_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3863_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3863_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3863_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3863_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3863_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3863_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3863_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3863_unit_code_idx"
  end

  create_table "trade_sandbox_3865", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3865_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3865_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3865_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3865_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3865_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3865_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3865_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3865_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3865_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3865_unit_code_idx"
  end

  create_table "trade_sandbox_3866", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3866_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3866_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3866_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3866_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3866_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3866_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3866_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3866_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3866_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3866_unit_code_idx"
  end

  create_table "trade_sandbox_3867", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3867_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3867_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3867_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3867_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3867_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3867_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3867_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3867_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3867_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3867_unit_code_idx"
  end

  create_table "trade_sandbox_3868", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3868_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3868_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3868_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3868_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3868_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3868_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3868_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3868_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3868_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3868_unit_code_idx"
  end

  create_table "trade_sandbox_3869", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3869_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3869_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3869_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3869_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3869_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3869_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3869_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3869_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3869_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3869_unit_code_idx"
  end

  create_table "trade_sandbox_3870", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3870_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3870_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3870_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3870_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3870_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3870_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3870_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3870_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3870_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3870_unit_code_idx"
  end

  create_table "trade_sandbox_3871", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3871_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3871_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3871_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3871_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3871_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3871_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3871_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3871_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3871_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3871_unit_code_idx"
  end

  create_table "trade_sandbox_3872", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3872_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3872_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3872_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3872_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3872_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3872_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3872_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3872_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3872_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3872_unit_code_idx"
  end

  create_table "trade_sandbox_3873", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3873_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3873_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3873_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3873_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3873_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3873_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3873_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3873_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3873_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3873_unit_code_idx"
  end

  create_table "trade_sandbox_3874", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3874_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3874_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3874_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3874_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3874_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3874_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3874_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3874_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3874_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3874_unit_code_idx"
  end

  create_table "trade_sandbox_3875", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3875_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3875_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3875_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3875_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3875_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3875_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3875_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3875_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3875_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3875_unit_code_idx"
  end

  create_table "trade_sandbox_3876", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3876_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3876_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3876_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3876_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3876_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3876_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3876_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3876_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3876_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3876_unit_code_idx"
  end

  create_table "trade_sandbox_3877", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3877_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3877_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3877_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3877_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3877_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3877_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3877_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3877_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3877_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3877_unit_code_idx"
  end

  create_table "trade_sandbox_3878", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3878_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3878_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3878_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3878_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3878_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3878_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3878_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3878_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3878_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3878_unit_code_idx"
  end

  create_table "trade_sandbox_3879", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3879_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3879_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3879_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3879_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3879_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3879_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3879_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3879_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3879_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3879_unit_code_idx"
  end

  create_table "trade_sandbox_3880", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3880_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3880_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3880_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3880_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3880_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3880_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3880_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3880_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3880_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3880_unit_code_idx"
  end

  create_table "trade_sandbox_3883", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3883_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3883_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3883_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3883_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3883_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3883_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3883_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3883_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3883_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3883_unit_code_idx"
  end

  create_table "trade_sandbox_3884", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3884_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3884_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3884_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3884_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3884_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3884_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3884_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3884_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3884_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3884_unit_code_idx"
  end

  create_table "trade_sandbox_3885", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3885_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3885_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3885_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3885_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3885_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3885_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3885_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3885_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3885_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3885_unit_code_idx"
  end

  create_table "trade_sandbox_3886", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3886_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3886_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3886_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3886_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3886_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3886_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3886_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3886_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3886_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3886_unit_code_idx"
  end

  create_table "trade_sandbox_3887", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3887_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3887_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3887_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3887_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3887_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3887_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3887_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3887_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3887_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3887_unit_code_idx"
  end

  create_table "trade_sandbox_3888", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3888_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3888_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3888_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3888_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3888_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3888_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3888_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3888_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3888_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3888_unit_code_idx"
  end

  create_table "trade_sandbox_3889", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3889_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3889_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3889_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3889_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3889_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3889_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3889_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3889_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3889_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3889_unit_code_idx"
  end

  create_table "trade_sandbox_3890", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3890_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3890_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3890_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3890_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3890_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3890_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3890_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3890_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3890_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3890_unit_code_idx"
  end

  create_table "trade_sandbox_3891", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3891_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3891_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3891_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3891_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3891_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3891_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3891_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3891_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3891_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3891_unit_code_idx"
  end

  create_table "trade_sandbox_3892", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3892_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3892_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3892_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3892_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3892_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3892_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3892_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3892_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3892_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3892_unit_code_idx"
  end

  create_table "trade_sandbox_3893", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3893_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3893_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3893_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3893_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3893_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3893_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3893_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3893_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3893_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3893_unit_code_idx"
  end

  create_table "trade_sandbox_3895", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3895_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3895_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3895_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3895_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3895_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3895_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3895_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3895_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3895_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3895_unit_code_idx"
  end

  create_table "trade_sandbox_3896", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3896_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3896_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3896_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3896_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3896_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3896_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3896_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3896_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3896_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3896_unit_code_idx"
  end

  create_table "trade_sandbox_3897", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3897_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3897_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3897_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3897_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3897_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3897_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3897_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3897_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3897_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3897_unit_code_idx"
  end

  create_table "trade_sandbox_3898", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3898_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3898_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3898_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3898_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3898_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3898_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3898_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3898_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3898_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3898_unit_code_idx"
  end

  create_table "trade_sandbox_3899", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3899_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3899_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3899_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3899_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3899_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3899_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3899_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3899_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3899_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3899_unit_code_idx"
  end

  create_table "trade_sandbox_3906", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3906_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3906_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3906_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3906_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3906_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3906_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3906_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3906_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3906_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3906_unit_code_idx"
  end

  create_table "trade_sandbox_3907", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3907_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3907_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3907_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3907_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3907_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3907_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3907_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3907_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3907_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3907_unit_code_idx"
  end

  create_table "trade_sandbox_3908", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3908_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3908_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3908_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3908_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3908_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3908_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3908_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3908_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3908_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3908_unit_code_idx"
  end

  create_table "trade_sandbox_3912", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3912_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3912_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3912_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3912_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3912_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3912_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3912_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3912_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3912_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3912_unit_code_idx"
  end

  create_table "trade_sandbox_3913", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3913_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3913_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3913_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3913_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3913_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3913_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3913_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3913_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3913_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3913_unit_code_idx"
  end

  create_table "trade_sandbox_3914", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3914_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3914_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3914_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3914_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3914_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3914_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3914_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3914_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3914_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3914_unit_code_idx"
  end

  create_table "trade_sandbox_3915", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3915_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3915_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3915_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3915_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3915_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3915_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3915_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3915_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3915_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3915_unit_code_idx"
  end

  create_table "trade_sandbox_3916", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3916_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3916_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3916_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3916_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3916_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3916_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3916_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3916_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3916_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3916_unit_code_idx"
  end

  create_table "trade_sandbox_3917", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3917_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3917_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3917_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3917_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3917_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3917_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3917_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3917_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3917_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3917_unit_code_idx"
  end

  create_table "trade_sandbox_3919", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3919_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3919_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3919_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3919_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3919_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3919_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3919_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3919_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3919_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3919_unit_code_idx"
  end

  create_table "trade_sandbox_3920", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3920_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3920_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3920_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3920_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3920_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3920_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3920_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3920_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3920_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3920_unit_code_idx"
  end

  create_table "trade_sandbox_3921", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3921_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3921_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3921_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3921_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3921_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3921_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3921_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3921_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3921_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3921_unit_code_idx"
  end

  create_table "trade_sandbox_3922", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3922_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3922_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3922_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3922_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3922_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3922_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3922_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3922_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3922_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3922_unit_code_idx"
  end

  create_table "trade_sandbox_3923", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3923_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3923_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3923_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3923_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3923_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3923_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3923_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3923_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3923_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3923_unit_code_idx"
  end

  create_table "trade_sandbox_3924", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3924_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3924_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3924_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3924_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3924_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3924_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3924_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3924_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3924_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3924_unit_code_idx"
  end

  create_table "trade_sandbox_3925", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3925_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3925_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3925_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3925_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3925_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3925_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3925_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3925_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3925_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3925_unit_code_idx"
  end

  create_table "trade_sandbox_3926", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3926_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3926_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3926_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3926_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3926_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3926_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3926_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3926_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3926_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3926_unit_code_idx"
  end

  create_table "trade_sandbox_3927", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3927_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3927_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3927_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3927_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3927_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3927_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3927_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3927_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3927_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3927_unit_code_idx"
  end

  create_table "trade_sandbox_3929", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3929_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3929_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3929_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3929_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3929_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3929_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3929_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3929_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3929_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3929_unit_code_idx"
  end

  create_table "trade_sandbox_3930", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3930_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3930_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3930_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3930_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3930_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3930_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3930_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3930_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3930_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3930_unit_code_idx"
  end

  create_table "trade_sandbox_3931", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3931_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3931_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3931_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3931_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3931_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3931_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3931_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3931_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3931_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3931_unit_code_idx"
  end

  create_table "trade_sandbox_3932", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3932_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3932_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3932_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3932_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3932_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3932_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3932_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3932_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3932_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3932_unit_code_idx"
  end

  create_table "trade_sandbox_3933", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3933_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3933_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3933_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3933_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3933_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3933_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3933_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3933_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3933_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3933_unit_code_idx"
  end

  create_table "trade_sandbox_3934", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3934_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3934_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3934_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3934_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3934_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3934_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3934_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3934_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3934_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3934_unit_code_idx"
  end

  create_table "trade_sandbox_3935", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3935_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3935_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3935_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3935_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3935_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3935_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3935_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3935_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3935_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3935_unit_code_idx"
  end

  create_table "trade_sandbox_3936", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3936_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3936_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3936_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3936_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3936_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3936_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3936_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3936_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3936_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3936_unit_code_idx"
  end

  create_table "trade_sandbox_3938", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3938_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3938_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3938_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3938_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3938_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3938_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3938_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3938_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3938_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3938_unit_code_idx"
  end

  create_table "trade_sandbox_3939", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3939_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3939_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3939_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3939_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3939_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3939_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3939_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3939_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3939_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3939_unit_code_idx"
  end

  create_table "trade_sandbox_3940", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3940_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3940_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3940_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3940_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3940_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3940_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3940_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3940_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3940_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3940_unit_code_idx"
  end

  create_table "trade_sandbox_3941", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3941_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3941_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3941_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3941_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3941_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3941_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3941_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3941_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3941_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3941_unit_code_idx"
  end

  create_table "trade_sandbox_3942", id: :integer, default: -> { "nextval('trade_sandbox_template_id_seq'::regclass)" }, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.index ["appendix"], name: "trade_sandbox_3942_appendix_idx"
    t.index ["country_of_origin"], name: "trade_sandbox_3942_country_of_origin_idx"
    t.index ["purpose_code"], name: "trade_sandbox_3942_purpose_code_idx"
    t.index ["quantity"], name: "trade_sandbox_3942_quantity_idx"
    t.index ["source_code"], name: "trade_sandbox_3942_source_code_idx"
    t.index ["taxon_concept_id"], name: "trade_sandbox_3942_taxon_concept_id_idx"
    t.index ["taxon_name"], name: "trade_sandbox_3942_taxon_name_idx"
    t.index ["term_code"], name: "trade_sandbox_3942_term_code_idx"
    t.index ["trading_partner"], name: "trade_sandbox_3942_trading_partner_idx"
    t.index ["unit_code"], name: "trade_sandbox_3942_unit_code_idx"
  end

  create_table "trade_sandbox_template", id: :serial, force: :cascade do |t|
    t.string "appendix", limit: 255
    t.string "taxon_name", limit: 255
    t.string "term_code", limit: 255
    t.string "quantity", limit: 255
    t.string "unit_code", limit: 255
    t.string "trading_partner", limit: 255
    t.string "country_of_origin", limit: 255
    t.text "export_permit"
    t.text "origin_permit"
    t.string "purpose_code", limit: 255
    t.string "source_code", limit: 255
    t.string "year", limit: 255
    t.text "import_permit"
    t.integer "reported_taxon_concept_id"
    t.integer "taxon_concept_id"
    t.datetime "created_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "updated_at", precision: nil, default: -> { "timezone('utc'::text, now())" }
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.integer "updated_by_id"
    t.integer "created_by_id"
  end

  create_table "trade_shipments", id: :serial, force: :cascade do |t|
    t.integer "source_id"
    t.integer "unit_id"
    t.integer "purpose_id"
    t.integer "term_id", null: false
    t.decimal "quantity", null: false
    t.string "appendix", limit: 255, null: false
    t.integer "trade_annual_report_upload_id"
    t.integer "exporter_id", null: false
    t.integer "importer_id", null: false
    t.integer "country_of_origin_id"
    t.boolean "reported_by_exporter", default: true, null: false
    t.integer "taxon_concept_id", null: false
    t.integer "year", null: false
    t.datetime "created_at", precision: nil
    t.datetime "updated_at", precision: nil
    t.integer "sandbox_id"
    t.integer "reported_taxon_concept_id"
    t.text "import_permit_number"
    t.text "export_permit_number"
    t.text "origin_permit_number"
    t.integer "legacy_shipment_number"
    t.integer "import_permits_ids", array: true
    t.integer "export_permits_ids", array: true
    t.integer "origin_permits_ids", array: true
    t.integer "updated_by_id"
    t.integer "created_by_id"
    t.datetime "epix_created_at", precision: nil
    t.datetime "epix_updated_at", precision: nil
    t.integer "epix_created_by_id"
    t.integer "epix_updated_by_id"
    t.index ["appendix"], name: "index_trade_shipments_on_appendix"
    t.index ["country_of_origin_id"], name: "index_trade_shipments_on_country_of_origin_id"
    t.index ["created_by_id", "updated_by_id"], name: "index_trade_shipments_on_created_by_id_and_updated_by_id"
    t.index ["export_permits_ids"], name: "index_trade_shipments_on_export_permits_ids", using: :gin
    t.index ["exporter_id"], name: "index_trade_shipments_on_exporter_id"
    t.index ["import_permits_ids"], name: "index_trade_shipments_on_import_permits_ids", using: :gin
    t.index ["importer_id"], name: "index_trade_shipments_on_importer_id"
    t.index ["origin_permits_ids"], name: "index_trade_shipments_on_origin_permits_ids", using: :gin
    t.index ["purpose_id"], name: "index_trade_shipments_on_purpose_id"
    t.index ["quantity"], name: "index_trade_shipments_on_quantity"
    t.index ["reported_taxon_concept_id"], name: "index_trade_shipments_on_reported_taxon_concept_id"
    t.index ["sandbox_id"], name: "index_trade_shipments_on_sandbox_id"
    t.index ["source_id"], name: "index_trade_shipments_on_source_id"
    t.index ["taxon_concept_id"], name: "index_trade_shipments_on_taxon_concept_id"
    t.index ["term_id"], name: "index_trade_shipments_on_term_id"
    t.index ["unit_id"], name: "index_trade_shipments_on_unit_id"
    t.index ["year", "exporter_id"], name: "index_trade_shipments_on_year_exporter_id"
    t.index ["year", "importer_id"], name: "index_trade_shipments_on_year_importer_id"
    t.index ["year"], name: "index_trade_shipments_on_year"
  end

  create_table "trade_taxon_concept_term_pairs", id: :serial, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.integer "term_id"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
  end

  create_table "trade_trade_data_downloads", id: :serial, force: :cascade do |t|
    t.string "user_ip", limit: 255
    t.string "report_type", limit: 255
    t.integer "year_from"
    t.integer "year_to"
    t.string "taxon", limit: 255
    t.string "appendix", limit: 255
    t.text "importer"
    t.text "exporter"
    t.text "origin"
    t.text "term"
    t.text "unit"
    t.text "source"
    t.text "purpose"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.integer "number_of_rows"
    t.string "city"
    t.string "country"
    t.string "organization"
  end

  create_table "trade_validation_errors", id: :serial, force: :cascade do |t|
    t.integer "annual_report_upload_id", null: false
    t.integer "validation_rule_id", null: false
    t.jsonb "matching_criteria", null: false
    t.boolean "is_ignored", default: false
    t.boolean "is_primary", default: false
    t.text "error_message", null: false
    t.integer "error_count", null: false
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.index ["annual_report_upload_id", "validation_rule_id", "matching_criteria"], name: "index_trade_validation_errors_unique", unique: true
    t.index ["annual_report_upload_id"], name: "index_trade_validation_errors_on_aru_id"
    t.index ["matching_criteria"], name: "index_trade_validation_errors_on_matching_criteria", opclass: :jsonb_path_ops, using: :gin
    t.index ["validation_rule_id"], name: "index_trade_validation_errors_on_vr_id"
  end

  create_table "trade_validation_rules", id: :serial, force: :cascade do |t|
    t.string "valid_values_view", limit: 255
    t.string "type", limit: 255, null: false
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.string "format_re", limit: 255
    t.integer "run_order", null: false
    t.string "column_names", limit: 255, array: true
    t.boolean "is_primary", default: true, null: false
    t.hstore "scope"
    t.boolean "is_strict", default: false, null: false
  end

  create_table "users", id: :serial, force: :cascade do |t|
    t.string "name", limit: 255, null: false
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.string "email", limit: 255, default: "", null: false
    t.string "encrypted_password", limit: 255, default: "", null: false
    t.string "reset_password_token", limit: 255
    t.datetime "reset_password_sent_at", precision: nil
    t.datetime "remember_created_at", precision: nil
    t.integer "sign_in_count", default: 0, null: false
    t.datetime "current_sign_in_at", precision: nil
    t.datetime "last_sign_in_at", precision: nil
    t.string "current_sign_in_ip", limit: 255
    t.string "last_sign_in_ip", limit: 255
    t.text "role", default: "api", null: false
    t.string "authentication_token", limit: 255
    t.text "organisation", default: "UNKNOWN", null: false
    t.integer "geo_entity_id"
    t.boolean "is_cites_authority", default: false, null: false
    t.boolean "is_active", default: true, null: false
    t.index ["authentication_token"], name: "index_users_on_authentication_token"
    t.index ["email"], name: "index_users_on_email", unique: true
    t.index ["reset_password_token"], name: "index_users_on_reset_password_token", unique: true
  end

  create_table "valid_taxon_concept_annex_year_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.string "annex", limit: 255
    t.datetime "effective_from", precision: nil
    t.datetime "effective_to", precision: nil
    t.index ["taxon_concept_id", "annex", "effective_from", "effective_to"], name: "tmp_valid_taxon_concept_annex_taxon_concept_id_annex_effec_idx1"
    t.index ["taxon_concept_id", "effective_from", "effective_to", "annex"], name: "valid_taxon_concept_annex_year_mview_idx"
  end

  create_table "valid_taxon_concept_appendix_year_mview", id: false, force: :cascade do |t|
    t.integer "taxon_concept_id"
    t.string "appendix", limit: 255
    t.datetime "effective_from", precision: nil
    t.datetime "effective_to", precision: nil
    t.index "taxon_concept_id, date_part('year'::text, effective_from), date_part('year'::text, effective_to), appendix", name: "valid_taxon_concept_appendix_year_mview_year_idx"
    t.index ["taxon_concept_id", "effective_from", "effective_to", "appendix"], name: "valid_taxon_concept_appendix_year_mview_idx"
  end

  create_table "versions", id: :serial, force: :cascade do |t|
    t.string "item_type", limit: 255, null: false
    t.integer "item_id", null: false
    t.string "event", limit: 255, null: false
    t.string "whodunnit", limit: 255
    t.text "object_yml"
    t.datetime "created_at", precision: nil
    t.text "object_changes_yml"
    t.jsonb "object", default: {}
    t.jsonb "object_changes", default: {}
    t.index ["item_type", "item_id"], name: "index_versions_on_item_type_and_item_id"
  end

  add_foreign_key "ahoy_events", "users", name: "ahoy_events_user_id_fk"
  add_foreign_key "ahoy_visits", "users", name: "ahoy_visits_user_id_fk"
  add_foreign_key "annotations", "annotations", column: "original_id", name: "annotations_source_id_fk"
  add_foreign_key "annotations", "events", name: "annotations_event_id_fk"
  add_foreign_key "annotations", "users", column: "created_by_id", name: "annotations_created_by_id_fk"
  add_foreign_key "annotations", "users", column: "updated_by_id", name: "annotations_updated_by_id_fk"
  add_foreign_key "change_types", "designations", name: "change_types_designation_id_fk"
  add_foreign_key "cites_suspension_confirmations", "events", column: "cites_suspension_notification_id", name: "cites_suspension_confirmations_notification_id_fk"
  add_foreign_key "cites_suspension_confirmations", "trade_restrictions", column: "cites_suspension_id", name: "cites_suspension_confirmations_cites_suspension_id_fk"
  add_foreign_key "comments", "users", column: "created_by_id", name: "comments_created_by_id_fk"
  add_foreign_key "comments", "users", column: "updated_by_id", name: "comments_updated_by_id_fk"
  add_foreign_key "common_names", "languages", name: "common_names_language_id_fk"
  add_foreign_key "common_names", "users", column: "created_by_id", name: "common_names_created_by_id_fk"
  add_foreign_key "common_names", "users", column: "updated_by_id", name: "common_names_updated_by_id_fk"
  add_foreign_key "designation_geo_entities", "designations", name: "designation_geo_entities_designation_id_fk"
  add_foreign_key "designation_geo_entities", "geo_entities", name: "designation_geo_entities_geo_entity_id_fk"
  add_foreign_key "designations", "taxonomies", name: "designations_taxonomy_id_fk"
  add_foreign_key "distribution_references", "distributions", name: "taxon_concept_geo_entity_references_taxon_concept_geo_entity_fk"
  add_foreign_key "distribution_references", "references", name: "taxon_concept_geo_entity_references_reference_id_fk"
  add_foreign_key "distribution_references", "users", column: "created_by_id", name: "distribution_references_created_by_id_fk"
  add_foreign_key "distribution_references", "users", column: "updated_by_id", name: "distribution_references_updated_by_id_fk"
  add_foreign_key "distributions", "geo_entities", name: "taxon_concept_geo_entities_geo_entity_id_fk"
  add_foreign_key "distributions", "taxon_concepts", name: "taxon_concept_geo_entities_taxon_concept_id_fk"
  add_foreign_key "distributions", "users", column: "created_by_id", name: "distributions_created_by_id_fk"
  add_foreign_key "distributions", "users", column: "updated_by_id", name: "distributions_updated_by_id_fk"
  add_foreign_key "document_citation_geo_entities", "document_citations", name: "document_citation_geo_entities_document_citation_id_fk"
  add_foreign_key "document_citation_geo_entities", "geo_entities", name: "document_citation_geo_entities_geo_entity_id_fk"
  add_foreign_key "document_citation_geo_entities", "users", column: "created_by_id", name: "document_citation_geo_entities_created_by_id_fk"
  add_foreign_key "document_citation_geo_entities", "users", column: "updated_by_id", name: "document_citation_geo_entities_updated_by_id_fk"
  add_foreign_key "document_citation_taxon_concepts", "document_citations", name: "document_citation_taxon_concepts_document_citation_id_fk"
  add_foreign_key "document_citation_taxon_concepts", "taxon_concepts", name: "document_citation_taxon_concepts_taxon_concept_id_fk"
  add_foreign_key "document_citation_taxon_concepts", "users", column: "created_by_id", name: "document_citation_taxon_concepts_created_by_id_fk"
  add_foreign_key "document_citation_taxon_concepts", "users", column: "updated_by_id", name: "document_citation_taxon_concepts_updated_by_id_fk"
  add_foreign_key "document_citations", "documents", name: "document_citations_document_id_fk"
  add_foreign_key "document_citations", "users", column: "created_by_id", name: "document_citations_created_by_id_fk"
  add_foreign_key "document_citations", "users", column: "updated_by_id", name: "document_citations_updated_by_id_fk"
  add_foreign_key "documents", "designations", name: "documents_designation_id_fk", on_delete: :nullify
  add_foreign_key "documents", "documents", column: "original_id", name: "documents_original_id_fk", on_delete: :nullify
  add_foreign_key "documents", "documents", column: "primary_language_document_id", name: "documents_primary_language_document_id_fk", on_delete: :nullify
  add_foreign_key "documents", "events", name: "documents_event_id_fk"
  add_foreign_key "documents", "languages", name: "documents_language_id_fk"
  add_foreign_key "documents", "users", column: "created_by_id", name: "documents_created_by_id_fk"
  add_foreign_key "documents", "users", column: "updated_by_id", name: "documents_updated_by_id_fk"
  add_foreign_key "eu_decision_confirmations", "eu_decisions", name: "eu_decision_confirmations_eu_decision_id_fk"
  add_foreign_key "eu_decision_confirmations", "events", name: "eu_decision_confirmations_event_id_fk"
  add_foreign_key "eu_decisions", "eu_decision_types", name: "eu_decisions_eu_decision_type_id_fk"
  add_foreign_key "eu_decisions", "events", column: "end_event_id", name: "eu_decisions_end_event_id_fk"
  add_foreign_key "eu_decisions", "events", column: "start_event_id", name: "eu_decisions_start_event_id_fk"
  add_foreign_key "eu_decisions", "geo_entities", name: "eu_decisions_geo_entity_id_fk"
  add_foreign_key "eu_decisions", "srg_histories", name: "eu_decisions_srg_history_id_fk"
  add_foreign_key "eu_decisions", "taxon_concepts", name: "eu_decisions_taxon_concept_id_fk"
  add_foreign_key "eu_decisions", "trade_codes", column: "source_id", name: "eu_decisions_source_id_fk"
  add_foreign_key "eu_decisions", "trade_codes", column: "term_id", name: "eu_decisions_term_id_fk"
  add_foreign_key "eu_decisions", "users", column: "created_by_id", name: "eu_decisions_created_by_id_fk"
  add_foreign_key "eu_decisions", "users", column: "updated_by_id", name: "eu_decisions_updated_by_id_fk"
  add_foreign_key "events", "designations", name: "events_designation_id_fk"
  add_foreign_key "events", "users", column: "created_by_id", name: "events_created_by_id_fk"
  add_foreign_key "events", "users", column: "updated_by_id", name: "events_updated_by_id_fk"
  add_foreign_key "geo_entities", "geo_entity_types", name: "geo_entities_geo_entity_type_id_fk"
  add_foreign_key "geo_relationships", "geo_entities", column: "other_geo_entity_id", name: "geo_relationships_other_geo_entity_id_fk"
  add_foreign_key "geo_relationships", "geo_entities", name: "geo_relationships_geo_entity_id_fk"
  add_foreign_key "geo_relationships", "geo_relationship_types", name: "geo_relationships_geo_relationship_type_id_fk"
  add_foreign_key "instruments", "designations", name: "instruments_designation_id_fk"
  add_foreign_key "listing_changes", "annotations", column: "hash_annotation_id", name: "listing_changes_hash_annotation_id_fk"
  add_foreign_key "listing_changes", "annotations", name: "listing_changes_annotation_id_fk"
  add_foreign_key "listing_changes", "change_types", name: "listing_changes_change_type_id_fk"
  add_foreign_key "listing_changes", "events", name: "listing_changes_event_id_fk"
  add_foreign_key "listing_changes", "listing_changes", column: "original_id", name: "listing_changes_source_id_fk"
  add_foreign_key "listing_changes", "listing_changes", column: "parent_id", name: "listing_changes_parent_id_fk"
  add_foreign_key "listing_changes", "species_listings", name: "listing_changes_species_listing_id_fk"
  add_foreign_key "listing_changes", "taxon_concepts", column: "inclusion_taxon_concept_id", name: "listing_changes_inclusion_taxon_concept_id_fk"
  add_foreign_key "listing_changes", "taxon_concepts", name: "listing_changes_taxon_concept_id_fk"
  add_foreign_key "listing_changes", "users", column: "created_by_id", name: "listing_changes_created_by_id_fk"
  add_foreign_key "listing_changes", "users", column: "updated_by_id", name: "listing_changes_updated_by_id_fk"
  add_foreign_key "listing_distributions", "geo_entities", name: "listing_distributions_geo_entity_id_fk"
  add_foreign_key "listing_distributions", "listing_changes", name: "listing_distributions_listing_change_id_fk"
  add_foreign_key "listing_distributions", "listing_distributions", column: "original_id", name: "listing_distributions_source_id_fk"
  add_foreign_key "listing_distributions", "users", column: "created_by_id", name: "listing_distributions_created_by_id_fk"
  add_foreign_key "listing_distributions", "users", column: "updated_by_id", name: "listing_distributions_updated_by_id_fk"
  add_foreign_key "nomenclature_change_inputs", "nomenclature_changes", name: "nomenclature_change_inputs_nomenclature_change_id_fk"
  add_foreign_key "nomenclature_change_inputs", "taxon_concepts", name: "nomenclature_change_inputs_taxon_concept_id_fk"
  add_foreign_key "nomenclature_change_inputs", "users", column: "created_by_id", name: "nomenclature_change_inputs_created_by_id_fk"
  add_foreign_key "nomenclature_change_inputs", "users", column: "updated_by_id", name: "nomenclature_change_inputs_updated_by_id_fk"
  add_foreign_key "nomenclature_change_output_reassignments", "nomenclature_change_outputs", name: "nomenclature_change_output_reassignments_output_id_fk"
  add_foreign_key "nomenclature_change_output_reassignments", "users", column: "created_by_id", name: "nomenclature_change_output_reassignments_created_by_id_fk"
  add_foreign_key "nomenclature_change_output_reassignments", "users", column: "updated_by_id", name: "nomenclature_change_output_reassignments_updated_by_id_fk"
  add_foreign_key "nomenclature_change_outputs", "nomenclature_changes", name: "nomenclature_change_outputs_nomenclature_change_id_fk"
  add_foreign_key "nomenclature_change_outputs", "ranks", column: "new_rank_id", name: "nomenclature_change_outputs_new_rank_id_fk"
  add_foreign_key "nomenclature_change_outputs", "taxon_concepts", column: "new_parent_id", name: "nomenclature_change_outputs_new_parent_id_fk"
  add_foreign_key "nomenclature_change_outputs", "taxon_concepts", column: "new_taxon_concept_id", name: "nomenclature_change_outputs_new_taxon_concept_id_fk"
  add_foreign_key "nomenclature_change_outputs", "taxon_concepts", name: "nomenclature_change_outputs_taxon_concept_id_fk"
  add_foreign_key "nomenclature_change_outputs", "users", column: "created_by_id", name: "nomenclature_change_outputs_created_by_id_fk"
  add_foreign_key "nomenclature_change_outputs", "users", column: "updated_by_id", name: "nomenclature_change_outputs_updated_by_id_fk"
  add_foreign_key "nomenclature_change_reassignment_targets", "nomenclature_change_outputs", name: "nomenclature_change_reassignment_targets_output_id_fk"
  add_foreign_key "nomenclature_change_reassignment_targets", "nomenclature_change_reassignments", name: "nomenclature_change_reassignment_targets_reassignment_id_fk"
  add_foreign_key "nomenclature_change_reassignment_targets", "users", column: "created_by_id", name: "nomenclature_change_reassignment_targets_created_by_id_fk"
  add_foreign_key "nomenclature_change_reassignment_targets", "users", column: "updated_by_id", name: "nomenclature_change_reassignment_targets_updated_by_id_fk"
  add_foreign_key "nomenclature_change_reassignments", "nomenclature_change_inputs", name: "nomenclature_change_reassignments_input_id_fk"
  add_foreign_key "nomenclature_change_reassignments", "users", column: "created_by_id", name: "nomenclature_change_reassignments_created_by_id_fk"
  add_foreign_key "nomenclature_change_reassignments", "users", column: "updated_by_id", name: "nomenclature_change_reassignments_updated_by_id_fk"
  add_foreign_key "nomenclature_changes", "events", name: "nomenclature_changes_event_id_fk"
  add_foreign_key "nomenclature_changes", "users", column: "created_by_id", name: "nomenclature_changes_created_by_id_fk"
  add_foreign_key "nomenclature_changes", "users", column: "updated_by_id", name: "nomenclature_changes_updated_by_id_fk"
  add_foreign_key "proposal_details", "document_tags", column: "proposal_outcome_id", name: "proposal_details_proposal_outcome_id_fk"
  add_foreign_key "proposal_details", "documents", name: "proposal_details_document_id_fk", on_delete: :cascade
  add_foreign_key "references", "users", column: "created_by_id", name: "references_created_by_id_fk"
  add_foreign_key "references", "users", column: "updated_by_id", name: "references_updated_by_id_fk"
  add_foreign_key "review_details", "document_tags", column: "process_stage_id", name: "review_details_process_stage_id_fk"
  add_foreign_key "review_details", "document_tags", column: "review_phase_id", name: "review_details_review_phase_id_fk"
  add_foreign_key "review_details", "documents", name: "review_details_document_id_fk", on_delete: :cascade
  add_foreign_key "species_listings", "designations", name: "species_listings_designation_id_fk"
  add_foreign_key "taxon_commons", "common_names", name: "taxon_commons_common_name_id_fk"
  add_foreign_key "taxon_commons", "taxon_concepts", name: "taxon_commons_taxon_concept_id_fk"
  add_foreign_key "taxon_commons", "users", column: "created_by_id", name: "taxon_commons_created_by_id_fk"
  add_foreign_key "taxon_commons", "users", column: "updated_by_id", name: "taxon_commons_updated_by_id_fk"
  add_foreign_key "taxon_concept_references", "references", name: "taxon_concept_references_reference_id_fk"
  add_foreign_key "taxon_concept_references", "taxon_concepts", name: "taxon_concept_references_taxon_concept_id_fk"
  add_foreign_key "taxon_concept_references", "users", column: "created_by_id", name: "taxon_concept_references_created_by_id_fk"
  add_foreign_key "taxon_concept_references", "users", column: "updated_by_id", name: "taxon_concept_references_updated_by_id_fk"
  add_foreign_key "taxon_concepts", "ranks", name: "taxon_concepts_rank_id_fk"
  add_foreign_key "taxon_concepts", "taxon_concepts", column: "parent_id", name: "taxon_concepts_parent_id_fk"
  add_foreign_key "taxon_concepts", "taxon_names", name: "taxon_concepts_taxon_name_id_fk"
  add_foreign_key "taxon_concepts", "taxonomies", name: "taxon_concepts_taxonomy_id_fk"
  add_foreign_key "taxon_concepts", "users", column: "created_by_id", name: "taxon_concepts_created_by_id_fk"
  add_foreign_key "taxon_concepts", "users", column: "dependents_updated_by_id", name: "taxon_concepts_dependents_updated_by_id_fk"
  add_foreign_key "taxon_concepts", "users", column: "updated_by_id", name: "taxon_concepts_updated_by_id_fk"
  add_foreign_key "taxon_instruments", "instruments", name: "taxon_instruments_instrument_id_fk"
  add_foreign_key "taxon_instruments", "taxon_concepts", name: "taxon_instruments_taxon_concept_id_fk"
  add_foreign_key "taxon_instruments", "users", column: "created_by_id", name: "taxon_instruments_created_by_id_fk"
  add_foreign_key "taxon_instruments", "users", column: "updated_by_id", name: "taxon_instruments_updated_by_id_fk"
  add_foreign_key "taxon_relationships", "taxon_concepts", name: "taxon_relationships_taxon_concept_id_fk"
  add_foreign_key "taxon_relationships", "taxon_relationship_types", name: "taxon_relationships_taxon_relationship_type_id_fk"
  add_foreign_key "taxon_relationships", "users", column: "created_by_id", name: "taxon_relationships_created_by_id_fk"
  add_foreign_key "taxon_relationships", "users", column: "updated_by_id", name: "taxon_relationships_updated_by_id_fk"
  add_foreign_key "term_trade_codes_pairs", "trade_codes", column: "term_id", name: "term_trade_codes_pairs_term_id_fk"
  add_foreign_key "term_trade_codes_pairs", "trade_codes", name: "term_trade_codes_pairs_trade_code_id_fk"
  add_foreign_key "trade_annual_report_uploads", "geo_entities", column: "trading_country_id", name: "trade_annual_report_uploads_trading_country_id_fk"
  add_foreign_key "trade_annual_report_uploads", "users", column: "created_by", name: "trade_annual_report_uploads_created_by_fk"
  add_foreign_key "trade_annual_report_uploads", "users", column: "created_by_id", name: "trade_annual_report_uploads_created_by_id_fk"
  add_foreign_key "trade_annual_report_uploads", "users", column: "updated_by", name: "trade_annual_report_uploads_updated_by_fk"
  add_foreign_key "trade_annual_report_uploads", "users", column: "updated_by_id", name: "trade_annual_report_uploads_updated_by_id_fk"
  add_foreign_key "trade_restriction_purposes", "trade_codes", column: "purpose_id", name: "trade_restriction_purposes_purpose_id"
  add_foreign_key "trade_restriction_purposes", "trade_restrictions", name: "trade_restriction_purposes_trade_restriction_id"
  add_foreign_key "trade_restriction_purposes", "users", column: "created_by_id", name: "trade_restriction_purposes_created_by_id_fk"
  add_foreign_key "trade_restriction_purposes", "users", column: "updated_by_id", name: "trade_restriction_purposes_updated_by_id_fk"
  add_foreign_key "trade_restriction_sources", "trade_codes", column: "source_id", name: "trade_restriction_sources_source_id"
  add_foreign_key "trade_restriction_sources", "trade_restrictions", name: "trade_restriction_sources_trade_restriction_id"
  add_foreign_key "trade_restriction_sources", "users", column: "created_by_id", name: "trade_restriction_sources_created_by_id_fk"
  add_foreign_key "trade_restriction_sources", "users", column: "updated_by_id", name: "trade_restriction_sources_updated_by_id_fk"
  add_foreign_key "trade_restriction_terms", "trade_codes", column: "term_id", name: "trade_restriction_terms_term_id"
  add_foreign_key "trade_restriction_terms", "trade_restrictions", name: "trade_restriction_terms_trade_restriction_id"
  add_foreign_key "trade_restriction_terms", "users", column: "created_by_id", name: "trade_restriction_terms_created_by_id_fk"
  add_foreign_key "trade_restriction_terms", "users", column: "updated_by_id", name: "trade_restriction_terms_updated_by_id_fk"
  add_foreign_key "trade_restrictions", "events", column: "end_notification_id", name: "trade_restrictions_end_notification_id_fk"
  add_foreign_key "trade_restrictions", "events", column: "start_notification_id", name: "trade_restrictions_start_notification_id_fk"
  add_foreign_key "trade_restrictions", "geo_entities", name: "trade_restrictions_geo_entity_id_fk"
  add_foreign_key "trade_restrictions", "taxon_concepts", name: "trade_restrictions_taxon_concept_id_fk"
  add_foreign_key "trade_restrictions", "trade_codes", column: "unit_id", name: "trade_restrictions_unit_id_fk"
  add_foreign_key "trade_restrictions", "users", column: "created_by_id", name: "trade_restrictions_created_by_id_fk"
  add_foreign_key "trade_restrictions", "users", column: "updated_by_id", name: "trade_restrictions_updated_by_id_fk"
  add_foreign_key "trade_shipments", "geo_entities", column: "country_of_origin_id", name: "trade_shipments_country_of_origin_id_fk"
  add_foreign_key "trade_shipments", "geo_entities", column: "exporter_id", name: "trade_shipments_exporter_id_fk"
  add_foreign_key "trade_shipments", "geo_entities", column: "importer_id", name: "trade_shipments_importer_id_fk"
  add_foreign_key "trade_shipments", "taxon_concepts", column: "reported_taxon_concept_id", name: "trade_shipments_reported_taxon_concept_id_fk"
  add_foreign_key "trade_shipments", "taxon_concepts", name: "trade_shipments_taxon_concept_id_fk"
  add_foreign_key "trade_shipments", "trade_annual_report_uploads", name: "trade_shipments_trade_annual_report_upload_id_fk"
  add_foreign_key "trade_shipments", "trade_codes", column: "purpose_id", name: "trade_shipments_purpose_id_fk"
  add_foreign_key "trade_shipments", "trade_codes", column: "source_id", name: "trade_shipments_source_id_fk"
  add_foreign_key "trade_shipments", "trade_codes", column: "term_id", name: "trade_shipments_term_id_fk"
  add_foreign_key "trade_shipments", "trade_codes", column: "unit_id", name: "trade_shipments_unit_id_fk"
  add_foreign_key "trade_shipments", "users", column: "created_by_id", name: "trade_shipments_created_by_id_fk"
  add_foreign_key "trade_shipments", "users", column: "updated_by_id", name: "trade_shipments_updated_by_id_fk"
  add_foreign_key "trade_taxon_concept_term_pairs", "taxon_concepts", name: "trade_taxon_concept_code_pairs_taxon_concept_id_fk"
  add_foreign_key "trade_taxon_concept_term_pairs", "trade_codes", column: "term_id", name: "trade_taxon_concept_code_pairs_term_id_fk"
  add_foreign_key "trade_validation_errors", "trade_annual_report_uploads", column: "annual_report_upload_id", name: "trade_validation_errors_aru_id_fk", on_delete: :cascade
  add_foreign_key "trade_validation_errors", "trade_validation_rules", column: "validation_rule_id", name: "trade_validation_errors_vr_id_fk", on_delete: :cascade
end
