^Croot@702dd4fc5a07:/SAPI# rspec
Version 2 of the Ruby SDK will enter maintenance mode as of November 20, 2020. To continue receiving service updates and new features, please upgrade to Version 3. More information can be found here: https://aws.amazon.com/blogs/developer/deprecation-schedule-for-aws-sdk-for-ruby-v2/

Admin::AhoyEventsController
  index
    GET index
      assigns to @ahoy_events sorted by time DESC

Admin::AhoyVisitsController
  index
    GET index
      assigns to @ahoy_events sorted by time DESC

Admin::ChangeTypesController
  GET index
    assigns @change_types sorted by designation and name
    renders the index template
  XHR POST create
    renders create when successful
    renders new when not successful
  XHR PUT update
    responds with 200 when successful
    responds with json when not successful
  DELETE destroy
    redirects after delete

Admin::CitesAcsController
  index
    GET index
      assigns @cites_acs sorted by name
      renders the index template

Admin::CitesCopsController
  index
    GET index
      assigns @cites_cops sorted by name
      renders the index template

Admin::CitesExtraordinaryMeetingsController
  index
    GET index
      assigns @cites_extraordinary_meetings sorted by name
      renders the index template

Admin::CitesHashAnnotationsController
  index
    GET index
      assigns @annotations sorted by parent_symbol and symbol
      renders the index template

Admin::CitesPcsController
  index
    GET index
      assigns @cites_pcs sorted by name
      renders the index template

Admin::CitesSuspensionNotificationsController
  index
    GET index
      assigns @cites_suspension_notifications sorted by name
      renders the index template

Admin::CitesSuspensionsController
  GET index
    renders the index template
    assigns @cites_suspensions
  GET new
    renders the new template
    assigns @geo_entities (country and territory) with two objects
  POST create
    renders new when not successful
    when successful
      renders index
  GET edit
    renders the edit template
    assigns @geo_entities (country and territory) with two objects
  PUT update
    renders edit when not successful
    when successful
      redirects to taxon_concepts cites suspensions page
  DELETE destroy
    redirects after delete

Admin::CitesTcsController
  index
    GET index
      assigns @cites_tcs sorted by name
      renders the index template

Admin::DesignationsController
  GET index
    GET index
      assigns @designations sorted by name
      renders the index template
    XHR GET index JSON
      renders json for dropdown
  XHR POST create
    renders create when successful
    renders new when not successful
  XHR PUT update
    responds with 200 when successful
    responds with json when not successful
  DELETE destroy
    redirects after delete

Admin::DistributionsController
  XHR GET 'new'
    returns http success and renders the new template
    assigns @geo_entities (country and territory) with two objects
    assigns the distribution variable
  XHR POST 'create'
    renders create when successful and has an existing reference
    renders create when successful and is creating a reference
  XHR GET edit
    renders the new template
    assigns the distribution variable
    assigns @geo_entities (country and territory) with two objects
  XHR PUT update
    responds with 200 when successful
  DELETE destroy
    redirects after delete

Admin::DocumentBatchesController
  GET new
    when no event
      renders the new template
    when event
      renders the new template
  POST create
    when no event
      creates a new Document
      redirects to index when successful
      does not create a new Document
      renders new when not successful
    when event
      redirects to index when successful
      renders new when not successful

Admin::DocumentsController
  index
    GET index
      assigns @documents sorted by time of creation
      search
        runs a full text search on title (FAILED - 1)
        retrieves documents inclusive of the given start date
        retrieves documents inclusive of the given end date
        retrieves documents after the given date
        retrieves documents before the given date
        ignores invalid dates
        retrieves documents for taxon concept
        retrieves documents for geo entity
        by proposal outcome
          retrieves documents for tag
        by document tags
          retrieves documents for review_phase tag
          retrieves documents for process_stage tag
      when no event
        renders the index template
      when event
        renders the event/documents/index template
        assigns @documents for event, sorted by title
      when secretariat is logged in
        returns only public documents
  GET edit
    renders the edit template
  PUT update
    when no event
      redirects to index when successful
      renders new when not successful
    when event
      redirects to index when successful
      renders new when not successful
    with nested review_details attributes
      assign review phase to Review
      assign process stage to Review
      assign recommended category to Review
    with nested proposal_details attributes
      assign outcome to Proposal
  DELETE destroy
    redirects after delete
  XHR GET JSON autocomplete
    When no event specified
      returns properly formatted json
    When an event is specified
      returns properly formatted json

Admin::EcSrgsController
  index
    GET index
      assigns @ec_srgs sorted by name
      renders the index template

Admin::EuCouncilRegulationsController
  index
    GET index
      assigns @eu_regulations sorted by effective_at
      renders the index template

Admin::EuHashAnnotationsController
  index
    GET index
      assigns @annotations sorted by parent_symbol and symbol
      renders the index template

Admin::EuImplementingRegulationsController
  index
    GET index
      assigns @eu_regulations sorted by effective_at
      renders the index template

Admin::EuOpinionsController
  GET index
    renders the index template
    renders the taxon_concepts_layout
  GET new
    renders the new template
    assigns @geo_entities (country and territory) with two objects
  POST create
    when successful
      when intersessional document is present
        redirects to the EU Opinions index
      when event is present
        redirects to the EU Opinions index
    when not successful
      renders new
  GET edit
    renders the edit template
    assigns @geo_entities
  PUT update
    when successful
      when eu decision type is present
        renders taxon_concepts EU Opinions page
      when eu decision type is not present
        renders taxon_concepts EU Opinions page
      when event is present
        renders taxon_concepts EU Opinions page
      when event is not present
        renders taxon_concepts EU Opinions page
    when not successful
      when eu decision type is present
        renders new
      when eu decision type is not present
        renders new
    when both eu_decision_type and srg_history are empty
      renders new
    when event is present
      renders new
    when event is not present
      renders new
    when both event and intersessional doc are empty
      renders new
    when both event and intersessional doc are present
      renders new
  DELETE destroy
    redirects after delete

Admin::EuRegulationsController
  index
    GET index
      assigns @eu_regulations sorted by effective_at
      renders the index template
  XHR POST activate
    renders create when successful

Admin::EuSuspensionRegulationsController
  index
    GET index
      assigns @eu_suspension_regulations sorted by effective_at
      renders the index template
  XHR POST activate
    renders create when successful

Admin::EuSuspensionsController
  GET index
    renders the index template
    renders the admin layout
  DELETE destroy
    redirects after delete

Admin::EventDocumentsController
  ordering
    GET show_order
      assigns @documents sorted by sort index
    POST update_order
      updates sort index for collection of documents (FAILED - 2)

Admin::EventsController
  index
    GET index
      assigns @events sorted by name
      renders the index template
  XHR GET new
    renders the new template
    assigns the event variable
  XHR POST create
    renders create when successful
    renders new when not successful
  XHR GET edit
    renders the edit template
    assigns the hybrid_relationship variable
  XHR PUT update JSON
    responds with 200 when successful
    responds with json when not successful
  DELETE destroy
    redirects after delete

Admin::ExportsController
  GET index
    renders the index template
  GET download with data_type=Names
    all
sh: 1: psql: not found
      returns taxon concepts names file (FAILED - 3)
      redirects when no results
    CITES_EU
sh: 1: psql: not found
      returns CITES_EU taxon concepts names file (FAILED - 4)
      redirects when no results
    CMS
sh: 1: psql: not found
      returns CMS taxon concepts names file (FAILED - 5)
      redirects when no results
  GET download with data_type=Distributions
    all
sh: 1: psql: not found
      returns taxon concepts distributions file (FAILED - 6)
      redirects when no results
    CITES_EU
sh: 1: psql: not found
      returns CITES_EU taxon concepts distributions file (FAILED - 7)
      redirects when no results
    CMS
sh: 1: psql: not found
      returns CMS taxon concepts distributions file (FAILED - 8)
      redirects when no results

Admin::GeoEntitiesController
  index
    GET index
      assigns @geo_entities sorted by name
      renders the index template
  XHR POST create
    renders create when successful
    renders new when not successful
  XHR PUT update JSON
    responds with 200 when successful
    responds with json when not successful
  DELETE destroy
    redirects after delete

Admin::HybridRelationshipsController
  XHR GET new
    renders the new template
    assigns the hybrid_relationship variable
  XHR POST create
    renders create when successful
    renders new when not successful
  XHR GET edit
    renders the edit template
    assigns the hybrid_relationship variable
  XHR PUT update
    responds with 200 when successful
    responds with json when not successful
  DELETE destroy
    redirects after delete

Admin::InstrumentsController
  GET index
    GET index
      assigns @instruments sorted by name
      renders the index template
    XHR GET index JSON
      renders json for dropdown
  XHR POST create
    renders create when successful
    renders new when not successful
  XHR PUT update
    responds with 200 when successful
    responds with json when not successful
  DELETE destroy
    redirects after delete
    fails to delete instrument because there are dependent objects

Admin::LanguagesController
  GET index
    assigns @languages sorted by iso_code1
    renders the index template
  XHR POST create
    renders create when successful
    renders new when not successful
  XHR PUT update
    responds with 200 when successful
    responds with json when not successful
  DELETE destroy
    redirects after delete

Admin::ListingChangesController
  GET index
    assigns @listing_changes sorted by effective_at
    renders the index template
    renders the admin layout
  DELETE destroy
    redirects after delete

Admin::NomenclatureChanges::LumpController
  GET show
    inputs
      renders the inputs template
    outputs
      renders the outputs template
    reassignments
      renders the notes template
      renders the summary template
      when legislation present
        renders the legislation template
      when no legislation
        redirects to next step
  POST create
    redirects to lump wizard
  PUT update
    when successful
      redirects to next step
    when unsuccessful
      re-renders step
    when last step
      when user is secretariat
        redirects to admin root path
      when user is manager
        redirects to nomenclature changes path (PENDING: Strange render mismatch after upgrading to Rails 4)
  Previous button
    when step is legislation
      renders notes step
    when step is summary
      when legislation
        renders legislation step
      when no legislation
        redirects to notes step

Admin::NomenclatureChanges::SplitController
  GET show
    inputs
      renders the inputs template
    outputs
      renders the outputs template
    reassignments
      renders the notes template
      renders the summary template
      when children present
        renders the children template
      when no children
        redirects to next step
      when names present
        renders the names template
      when no names
        redirects to next step
      when distribution present
        renders the distribution template
      when no distribution
        redirects to next step
      when legislation present
        renders the legislation template
      when no legislation
        redirects to next step
  POST create
    redirects to split wizard
  PUT update
    when successful
      redirects to next step
    when unsuccessful
      re-renders step
    when last step
      when user is secretariat
        redirects to admin root path
      when user is manager
        redirects to nomenclature changes path (PENDING: Strange render mismatch after upgrading to Rails 4)
  Previous button
    when step is names
      when children
        renders children template
      when no children
        redirects to notes step
    when step is distribution
      when names
        renders names template
      when no names and no children
        redirects to notes step
    when step is legislation
      when distribution
        renders distribution template
      when no distribution and no names
        redirects to children step
    when step is summary
      when legislation
        renders legislation template
      when no legislation and no distribution
        redirects to names step

Admin::NomenclatureChanges::StatusSwapController
  GET show
    primary_output
      renders the primary_output template
    swap
      renders the swap template
    reassignments
      when legislation present
        renders the legislation template
      when no legislation
        redirects to next step
    summary
      renders the summary template
  POST create
    redirects to status_change wizard
  PUT update
    when successful
      redirects to next step
    when unsuccessful
      re-renders step
    when last step
      when user is secretariat
        redirects to admin root path
      when user is manager
        redirects to nomenclature changes path (PENDING: Strange render mismatch after upgrading to Rails 4)

Admin::NomenclatureChanges::StatusToAcceptedController
  GET show
    primary_output
      renders the primary_output template
    summary
      renders the summary template
  POST create
    redirects to status_change wizard
  PUT update
    when successful
      redirects to next step
    when unsuccessful
      re-renders step
    when last step
      when user is secretariat
        redirects to admin root path
      when user is manager
        redirects to nomenclature changes path (PENDING: Strange render mismatch after upgrading to Rails 4)

Admin::NomenclatureChanges::StatusToSynonymController
  GET show
    primary_output
      renders the primary_output template
    relay
      renders the relay template
    summary
      renders the summary template
  POST create
    redirects to status_change wizard
  PUT update
    when successful
      redirects to next step
    when unsuccessful
      re-renders step
    when last step
      when user is secretariat
        redirects to admin root path
      when user is manager
        redirects to nomenclature changes path (PENDING: Strange render mismatch after upgrading to Rails 4)

Admin::NomenclatureChangesController
  GET index
    assigns @nomenclature_changes sorted by designation and name
    renders the index template
  DELETE destroy
    redirects after delete

Admin::RanksController
  GET index
    assigns @ranks sorted by taxonomic position
    renders the index template
  XHR POST create
    renders create when successful
    renders new when not successful
  XHR PUT update
    responds with 200 when successful
    responds with json when not successful
  DELETE destroy
    redirects after delete

Admin::ReferencesController
  index
    GET index
      assigns @references sorted by citation
      renders the index template
    XHR GET index JSON
      renders json for dropdown
  XHR POST create
    renders create when successful
    renders new when not successful
  XHR PUT update JSON
    responds with 200 when successful
    responds with json when not successful
  DELETE destroy
    redirects after delete

Admin::SpeciesListingsController
  index
    assigns @species_listings sorted by designation and name
    renders the index template
  XHR POST create
    renders create when successful
    renders new when not successful
  XHR PUT update
    responds with 200 when successful
    responds with json when not successful
  DELETE destroy
    redirects after delete

Admin::SrgHistoriesController
  GET index
    renders the index template
  POST create
    when successful
      renders the create js template
    when not successful
      renders new
  PUT update
    when successful
      renders the create js template
    when not successful
      renders new
  DELETE destroy
    redirects after delete

Admin::SynonymRelationshipsController
  XHR GET new
    renders the new template
    assigns the synonym_relationship variable
  XHR POST create
    renders create when successful
    renders new when not successful
  XHR GET edit
    renders the edit template
    assigns the synonym_relationship variable
  XHR PUT update
    responds with 200 when successful
    responds with json when not successful
  DELETE destroy
    redirects after delete

Admin::TagsController
  GET index
    renders the index template
  XHR POST create
    renders create when successful
    renders new when not successful
  XHR PUT update
    when JSON
      responds with 200 when successful
      responds with json error when not successful
  DELETE destroy
    redirects after delete

Admin::TaxonCitesSuspensionsController
  GET index
    renders the index template
    renders the taxon_concepts_layout
  GET new
    renders the new template
  POST create
    renders new when not successful
    when successful
      renders index
  GET edit
    renders the edit template
  PUT update
    renders edit when not successful
    when successful
      renders taxon_concepts cites suspensions page
  DELETE destroy
    redirects after delete
  Authorization for contributors
    GET index
      renders the index template
      renders the taxon_concepts_layout
    DELETE destroy
      fails to delete and redirects

Admin::TaxonCommonsController
  XHR GET 'new'
    returns http success and renders the new template
  XHR POST create
    renders create when successful
    renders new when not successful
  XHR GET edit
    renders the edit template
    assigns the  taxon common variable
  XHR PUT update
    renders create when successful
    renders new when not successful
  DELETE destroy
    redirects after delete
  ChangeObserver updates TaxonConcept's dependents_updated_at
    when TaxonCommon is changed
    updates associated @taxon_concept's
      dependents_updated_at when taxon common is updated
    updates associated @taxon_concept's
      dependents_updated_at when taxon common is deleted
  Authorization for contributors
    DELETE destroy
      fails to delete and redirects

Admin::TaxonConceptCommentsController
  GET index
    renders the index template
  POST create
    redirects to index with notice when success
  PUT update
    redirects to index with notice when success

Admin::TaxonConceptReferencesController
  XHR POST create
    renders create when successful
    renders new when not successful
  XHR GET edit
    renders the edit template
    assigns the  taxon concept reference variable
  XHR PUT update
    renders create when successful
    renders new when not successful
  XHR GET 'new'
    returns http success and renders the new template
  DELETE destroy
    redirects after delete

Admin::TaxonConceptsController
  GET index
    renders the index template
    redirects if 1 result
    assigns taxa in taxonomic order
  XHR POST create
    renders create when successful
    renders new when not successful
    renders new_synonym when not successful S
    renders new_hybrid when not successful H
    renders new_synonym when not successful N
  XHR PUT update
    when JSON
      responds with 200 when successful
      responds with json error when not successful
    when HTML
      redirects to edit when successful
      renders edit when not successful
  DELETE destroy
    redirects after delete
  DELETE destroy doesn't work for non managers
    redirects to admin root path and doesn't delete
  when E-library Viewer
    redirects to root path
    redirects to root path and doesn't delete
  XHR GET JSON autocomplete
    returns properly formatted json

Admin::TaxonEuSuspensionsController
  GET index
    renders the index template
    renders the taxon_concepts_layout
  GET new
    renders the new template
    assigns @geo_entities (country and territory) with two objects
  POST create
    when successful
      redirects to the EU suspensions index
    when not successful
      renders new
  GET edit
    renders the edit template
    assigns @geo_entities
  PUT update
    when successful
      when eu_decision_type is present
        renders taxon_concepts EU suspensions page
      when eu_decision_type is not present
        renders taxon_concepts EU suspensions page
    when not successful
      when eu_decision_type is present
        renders new
      when eu_decision_type is not present
        renders new
    when both eu_decision_type and srg_history are empty
      renders new
  DELETE destroy
    redirects after delete
  Authorization for contributors
    GET index
      renders the index template
      renders the taxon_concepts_layout
    DELETE destroy
      fails to delete and redirects

Admin::TaxonListingChangesController
  GET index
    assigns @listing_changes sorted by effective_at
    renders the index template
    renders the taxon_concepts_layout
  GET new
    renders the new template
    assigns @listing_change
  POST create
    renders new when not successful
    when successful
      redirects to taxon_concept listing_changes page
  GET edit
    renders the edit template
    assigns the listing_change variable
  PUT update
    renders edit when not successful
    redirects to index page and removes annotation when fields cleared
    when successful
      redirects to taxon_concept listing_changes page
      redirects to eu regulation listing changes page when param is set
  DELETE destroy
    redirects after delete
  Authorization for contributors
    GET index
      renders the index template
      renders the taxon_concepts_layout
    DELETE destroy
      fails to delete and redirects

Admin::TaxonQuotasController
  GET index
    renders the index template
    renders the taxon_concepts_layout
  GET new
    renders the new template
    assigns @geo_entities (country and territory) with two objects
  POST create
    renders new when not successful
    when successful
      renders index
  GET edit
    renders the edit template
    assigns @geo_entities (country and territory) with two objects
  PUT update
    renders new when not successful
    when successful
      renders taxon_concepts quotas page
  DELETE destroy
    redirects after delete
  Authorization for contributors
    GET index
      renders the index template
      renders the taxon_concepts_layout
    DELETE destroy
      fails to delete and redirects

Admin::TaxonRelationshipsController
  GET index
    assigns @taxon_relationships
    renders the index template
    renders the taxon_concepts_layout
  XHR POST create
    renders create when successful
    renders new when not successful
  DELETE destroy
    when relationship is bidirectional
      destroys relationship for taxon concept
        should change #count by -2
      destroys relationship for other taxon concept
        should change #count by -2
    when relationship is not bidirectional
      destroys relationship for taxon concept
        should change #count by -1
      destroys relationship for other taxon concept
        should change #count by -1

Admin::TaxonomiesController
  index
    GET index
      assigns @taxonomies sorted by name
      renders the index template
    XHR GET index JSON
      renders json for dropdown
  XHR POST create
    renders create when successful
    renders new when not successful
  XHR PUT update JSON
    responds with 200 when successful
    responds with json when not successful
  DELETE destroy
    redirects after delete
  Authorization for contributors
    GET index
      redirects to admin root
    DELETE destroy
      fails to delete and redirects to admin_root_path

Admin::TradeNameRelationshipsController
  XHR GET new
    renders the new template
    assigns the trade_name_relationship variable
  XHR POST create
    renders create when successful
    renders new when not successful
  XHR GET edit
    renders the edit template
    assigns the trade_name_relationship variable
  XHR PUT update
    responds with 200 when successful
    responds with json when not successful
  DELETE destroy
    redirects after delete

Admin::UsersController
  index
    GET index
      renders the index template
  XHR POST create
    renders create when successful
    renders new when not successful
  XHR GET edit
    renders the edit template
    assigns the hybrid_relationship variable
  XHR PUT update JS
    responds with 200 when successful
    responds with template new when not successful
  DELETE destroy
unknown OID 3802: failed to recognize type of 'validation_report'. It will be treated as String.
    redirects after delete

Api::V1::AutoCompleteTaxonConceptsController
Procedure: taxonomy
  GET index
    returns 1 result when searching for species name and filtering for rank SPECIES (FAILED - 9)
    returns 3 results when searching for species name and not filtering by rank (FAILED - 10)

Api::V1::DocumentGeoEntitiesController
  when searching by taxon concept name
Procedure: taxonomy
    returns Poland when searching by wolf (FAILED - 11)
    returns 0 geo entities when no match for taxon name (FAILED - 12)
    returns all geo entities when no taxon name given (FAILED - 13)

Api::V1::DocumentsController
  GET index returns all documents
    GET index contributor
      returns all documents
    GET index manager
      returns all documents
  GET index returns only public documents
    GET index api user
      returns only public documents
    GET index no user
      returns only public documents
  GET index returns only public documents for secretariat role
    GET index api user
      returns only public documents
  show action fails
    should return 403 status when permission denied
  GET should retrieve documents with no event_type
    returns documents with no event_type
  download documents
    single document selected
      should return 404 if file is missing
      should return zip file if file is found
    multiple documents selected
      should return 404 if all files are missing
      should return zip file if at least a file is found
    cascading documents logic
      should get subspecies documents

Api::V1::EventsController
  GET index
    returns only E-library events most recent first (FAILED - 14)

Api::V1::GeoEntitiesController
  GET index
    returns regions
    returns countries & territories

Api::V1::PurposesController
  GET index
    returns purposes (FAILED - 15)

Api::V1::SourcesController
  GET index
    returns sources (FAILED - 16)

Api::V1::TaxonConceptsController
  GET index
    logs with Ahoy with different parameters (FAILED - 17)

Api::V1::TermsController
  GET index
    returns terms (FAILED - 18)

Api::V1::UnitsController
  GET index
    returns units (FAILED - 19)

Checklist::GeoEntitiesController
  GET index
    returns regions
    returns countries & territories

Checklist::TaxonConceptsController
  XHR GET JSON autocomplete
Procedure: taxonomy
    when searching by accepted name
      returns 1 result (FAILED - 20)
    when query blank
      returns 0 results (FAILED - 21)

CitesTrade::ExportsController
  GET download
    raw format
      returns count of shipments
    comptab
sh: 1: psql: not found
      returns comptab shipments file (FAILED - 22)
sh: 1: psql: not found
      logs download information from public interface to the TradeDataDownload model (FAILED - 23)
    when shipments cannot be retrieved
      redirects to home page

CitesTrade::ShipmentsController
  GET index
Procedure: taxonomy
    should return all comptab shipments (FAILED - 24)
Procedure: taxonomy
    should return all gross_exports shipments (FAILED - 25)
Procedure: taxonomy
    should return genus & species shipments when searching by genus (FAILED - 26)
Procedure: taxonomy
    should return family, genus & species shipments when searching by family (FAILED - 27)
Procedure: taxonomy
    should return genus shipments when searching by taxon (FAILED - 28)
    serializer
Procedure: taxonomy
      should return comptab export when report_type invalid (FAILED - 29)
Procedure: taxonomy
      should return comptab export when report_type = comptab (FAILED - 30)
Procedure: taxonomy
      should return gross net export when report_type = gross_exports (FAILED - 31)

PagesController
  GET eu_legislation
    assigns annex regulations sorted by effective_at
    assigns suspension regulations

RegistrationsController
  when editing own account
DEPRECATION WARNING: [Devise] Changing the sanitized parameters through "Devise::ParameterSanitizer#for(sign_up) is deprecated and it will be removed from Devise 4.1.
Please use the `permit` method to add or remove any key:

  To add any new key, use the `keys` keyword argument:
  devise_parameter_sanitizer.permit(:sign_up, keys: [:param1, :param2, :param3])

  To remove any existing key, use the `except` keyword argument:
  devise_parameter_sanitizer.permit(:sign_up, except: [:email])
 (called from configure_permitted_parameters at /SAPI/app/controllers/application_controller.rb:43)
DEPRECATION WARNING: [Devise] Changing the sanitized parameters through "Devise::ParameterSanitizer#for(account_update) is deprecated and it will be removed from Devise 4.1.
Please use the `permit` method to add or remove any key:

  To add any new key, use the `keys` keyword argument:
  devise_parameter_sanitizer.permit(:account_update, keys: [:param1, :param2, :param3])

  To remove any existing key, use the `except` keyword argument:
  devise_parameter_sanitizer.permit(:account_update, except: [:email])
 (called from configure_permitted_parameters at /SAPI/app/controllers/application_controller.rb:44)
    should update name
DEPRECATION WARNING: [Devise] Changing the sanitized parameters through "Devise::ParameterSanitizer#for(sign_up) is deprecated and it will be removed from Devise 4.1.
Please use the `permit` method to add or remove any key:

  To add any new key, use the `keys` keyword argument:
  devise_parameter_sanitizer.permit(:sign_up, keys: [:param1, :param2, :param3])

  To remove any existing key, use the `except` keyword argument:
  devise_parameter_sanitizer.permit(:sign_up, except: [:email])
 (called from configure_permitted_parameters at /SAPI/app/controllers/application_controller.rb:43)
DEPRECATION WARNING: [Devise] Changing the sanitized parameters through "Devise::ParameterSanitizer#for(account_update) is deprecated and it will be removed from Devise 4.1.
Please use the `permit` method to add or remove any key:

  To add any new key, use the `keys` keyword argument:
  devise_parameter_sanitizer.permit(:account_update, keys: [:param1, :param2, :param3])

  To remove any existing key, use the `except` keyword argument:
  devise_parameter_sanitizer.permit(:account_update, except: [:email])
 (called from configure_permitted_parameters at /SAPI/app/controllers/application_controller.rb:44)
    should update password
DEPRECATION WARNING: [Devise] Changing the sanitized parameters through "Devise::ParameterSanitizer#for(sign_up) is deprecated and it will be removed from Devise 4.1.
Please use the `permit` method to add or remove any key:

  To add any new key, use the `keys` keyword argument:
  devise_parameter_sanitizer.permit(:sign_up, keys: [:param1, :param2, :param3])

  To remove any existing key, use the `except` keyword argument:
  devise_parameter_sanitizer.permit(:sign_up, except: [:email])
 (called from configure_permitted_parameters at /SAPI/app/controllers/application_controller.rb:43)
DEPRECATION WARNING: [Devise] Changing the sanitized parameters through "Devise::ParameterSanitizer#for(account_update) is deprecated and it will be removed from Devise 4.1.
Please use the `permit` method to add or remove any key:

  To add any new key, use the `keys` keyword argument:
  devise_parameter_sanitizer.permit(:account_update, keys: [:param1, :param2, :param3])

  To remove any existing key, use the `except` keyword argument:
  devise_parameter_sanitizer.permit(:account_update, except: [:email])
 (called from configure_permitted_parameters at /SAPI/app/controllers/application_controller.rb:44)
    should not update that account if not valid
  when editing another user's account
DEPRECATION WARNING: [Devise] Changing the sanitized parameters through "Devise::ParameterSanitizer#for(sign_up) is deprecated and it will be removed from Devise 4.1.
Please use the `permit` method to add or remove any key:

  To add any new key, use the `keys` keyword argument:
  devise_parameter_sanitizer.permit(:sign_up, keys: [:param1, :param2, :param3])

  To remove any existing key, use the `except` keyword argument:
  devise_parameter_sanitizer.permit(:sign_up, except: [:email])
 (called from configure_permitted_parameters at /SAPI/app/controllers/application_controller.rb:43)
DEPRECATION WARNING: [Devise] Changing the sanitized parameters through "Devise::ParameterSanitizer#for(account_update) is deprecated and it will be removed from Devise 4.1.
Please use the `permit` method to add or remove any key:

  To add any new key, use the `keys` keyword argument:
  devise_parameter_sanitizer.permit(:account_update, keys: [:param1, :param2, :param3])

  To remove any existing key, use the `except` keyword argument:
  devise_parameter_sanitizer.permit(:account_update, except: [:email])
 (called from configure_permitted_parameters at /SAPI/app/controllers/application_controller.rb:44)
    should not update that account
  when signing up
DEPRECATION WARNING: [Devise] Changing the sanitized parameters through "Devise::ParameterSanitizer#for(sign_up) is deprecated and it will be removed from Devise 4.1.
Please use the `permit` method to add or remove any key:

  To add any new key, use the `keys` keyword argument:
  devise_parameter_sanitizer.permit(:sign_up, keys: [:param1, :param2, :param3])

  To remove any existing key, use the `except` keyword argument:
  devise_parameter_sanitizer.permit(:sign_up, except: [:email])
 (called from configure_permitted_parameters at /SAPI/app/controllers/application_controller.rb:43)
DEPRECATION WARNING: [Devise] Changing the sanitized parameters through "Devise::ParameterSanitizer#for(account_update) is deprecated and it will be removed from Devise 4.1.
Please use the `permit` method to add or remove any key:

  To add any new key, use the `keys` keyword argument:
  devise_parameter_sanitizer.permit(:account_update, keys: [:param1, :param2, :param3])

  To remove any existing key, use the `except` keyword argument:
  devise_parameter_sanitizer.permit(:account_update, except: [:email])
 (called from configure_permitted_parameters at /SAPI/app/controllers/application_controller.rb:44)
DEPRECATION WARNING: [Devise] Parameter sanitization through a "Devise::ParameterSanitizer#sign_up" method is deprecated and it will be removed from Devise 4.1.
Please use the `permit` method on your sanitizer `initialize` method.

  class Devise::ParameterSanitizer < Devise::ParameterSanitizer
    def initialize(*)
      super
      permit(:sign_up, keys: [:param1, :param2, :param3])
    end
  end
 (called from block (4 levels) in <top (required)> at /SAPI/spec/controllers/registrations_controller_spec.rb:51)
    should create an account with the role set to api (FAILED - 32)

Species::ExportsController
  when data type and filters not given
    returns unprocessable entity status
  with ip address to csv separator conversion
    sets separator to comma with local ip address
    sets separator to comma with UK ip address
    sets separator to semicolon with AF ip address
    sets separator back to comma when a user overrides the encoded default
    sets separator to comma when IP address is nil
    sets separator to comma when IP address is unknown

Trade::AnnualReportUploadsController
  GET index
sh: 1: psql: not found
    should return all annual report uploads (FAILED - 33)
sh: 1: psql: not found
    should return annual report uploads in progress (FAILED - 34)
  GET show
sh: 1: psql: not found
    should return success (FAILED - 35)
  POST create
sh: 1: psql: not found
    should return success in jQuery File Upload way (FAILED - 36)
    should return error in jQuery File Upload way

Trade::EmberController
  GET 'start'
    returns http success

Trade::ExportsController
  GET download
    raw format
      returns count of shipments
sh: 1: psql: not found
      does not log download information from the admin interface
    when shipments cannot be retrieved
      redirects to home page

Trade::SandboxShipmentsController
  PUT update
sh: 1: psql: not found
    should return success when taxon_name not set (FAILED - 37)
sh: 1: psql: not found
    should return success when taxon_name does not exist (FAILED - 38)
  DELETE destroy
sh: 1: psql: not found
    should return success (FAILED - 39)
  POST update_batch
sh: 1: psql: not found
    should return success (FAILED - 40)
  POST destroy_batch
sh: 1: psql: not found
    should return success (FAILED - 41)

Trade::ShipmentsController
  GET index
Procedure: taxonomy
    should return all shipments (FAILED - 42)
Procedure: taxonomy
    should return genus & species shipments when searching by genus (FAILED - 43)
Procedure: taxonomy
    should return 1 shipment when searching for reporter_type I (FAILED - 44)
  PUT update
Procedure: taxonomy
    should auto resolve accepted taxon when blank (FAILED - 45)
Procedure: taxonomy
    should not auto resolve accepted taxon when given (FAILED - 46)
Procedure: taxonomy
    should delete orphaned permits (FAILED - 47)
  POST update_batch
Procedure: taxonomy
    should change reporter type from I to E (FAILED - 48)
Procedure: taxonomy
    should change reporter type from E to I (FAILED - 49)
Procedure: taxonomy
    should update year (FAILED - 50)
Procedure: taxonomy
    should auto resolve accepted taxon when blank (FAILED - 51)
Procedure: taxonomy
    should not auto resolve accepted taxon when given (FAILED - 52)
Procedure: taxonomy
    should set permit number to blank and delete orphaned permits (FAILED - 53)
  POST destroy_batch
Procedure: taxonomy
    should delete 1 shipment (FAILED - 54)
Procedure: taxonomy
    should delete 5 shipment (FAILED - 55)
Procedure: taxonomy
    should delete 2 shipments (FAILED - 56)
Procedure: taxonomy
    should delete 1 shipments (FAILED - 57)
Procedure: taxonomy
    should delete all shipments (FAILED - 58)
Procedure: taxonomy
    shouldn't delete any shipments (FAILED - 59)
Procedure: taxonomy
    should delete 1 shipment (FAILED - 60)
Procedure: taxonomy
    should delete 3 shipment (FAILED - 61)
Procedure: taxonomy
    should delete 0 shipments (FAILED - 62)
Procedure: taxonomy
    should delete 4 shipments (FAILED - 63)
Procedure: taxonomy
    should delete orphaned permits (FAILED - 64)
  DELETE destroy
Procedure: taxonomy
    should delete 1 shipment (FAILED - 65)
Procedure: taxonomy
    should delete orphaned permits (FAILED - 66)

Trade::ValidationErrorsController
  PUT update
sh: 1: psql: not found
    should update is_ignored (FAILED - 67)
  GET show
sh: 1: psql: not found
    should return success (FAILED - 68)

Trade::ValidationRulesController
  GET index
    should return success

Admin::NomenclatureChangesHelper
  split_blurb
    split with input
      should match "Genus1 lupus2465"
    split with outputs
      should match "Genus1 lupus2473"
    split with output new taxon
      should match "Genus1 lupus2488"
  lump_blurb
    lump with inputs
      should match "Lupus2496 lupus2495"
    lump with output
      should match "Lupus2528 lupus2527"
    lump with output new taxon
      should match "Errorus fatalus"
  status_change_blurb
    status upgrade with primary output
      should match "Ridiculus fatalus"
    status upgrade with swap
      should match "Confundus totalus"

AdminHelper
  edit_icon
    ouputs pencil icon for edit
  delete_icon
    ouputs bin icon for delete
  true_false_icon
    outputs tick icon for true
    outputs blank for false

ListingChangesHelper
  geo_entities_tooltip
    outputs all geo entities comma separated
  annotation_tooltip
    outputs the regular annotation in both short and long English form
  hash_annotation_tooltip
    outputs the hash annotation in long English form
  excluded_geo_entities_tooltip
    no exclusions
      should output blank exception
    geographic exclusion
      should list geographic exception
  excluded_taxon_concepts_tooltip
    no exclusions
      should output blank exception
    taxonomic exclusion
      should list taxonomic exception

Home page
DEPRECATION WARNING: [Devise] Changing the sanitized parameters through "Devise::ParameterSanitizer#for(sign_up) is deprecated and it will be removed from Devise 4.1.
Please use the `permit` method to add or remove any key:

  To add any new key, use the `keys` keyword argument:
  devise_parameter_sanitizer.permit(:sign_up, keys: [:param1, :param2, :param3])

  To remove any existing key, use the `except` keyword argument:
  devise_parameter_sanitizer.permit(:sign_up, except: [:email])
 (called from configure_permitted_parameters at /SAPI/app/controllers/application_controller.rb:43)
DEPRECATION WARNING: [Devise] Changing the sanitized parameters through "Devise::ParameterSanitizer#for(account_update) is deprecated and it will be removed from Devise 4.1.
Please use the `permit` method to add or remove any key:

  To add any new key, use the `keys` keyword argument:
  devise_parameter_sanitizer.permit(:account_update, keys: [:param1, :param2, :param3])

  To remove any existing key, use the `except` keyword argument:
  devise_parameter_sanitizer.permit(:account_update, except: [:email])
 (called from configure_permitted_parameters at /SAPI/app/controllers/application_controller.rb:44)
  redirects Data Manager to admin root path
DEPRECATION WARNING: [Devise] Changing the sanitized parameters through "Devise::ParameterSanitizer#for(sign_up) is deprecated and it will be removed from Devise 4.1.
Please use the `permit` method to add or remove any key:

  To add any new key, use the `keys` keyword argument:
  devise_parameter_sanitizer.permit(:sign_up, keys: [:param1, :param2, :param3])

  To remove any existing key, use the `except` keyword argument:
  devise_parameter_sanitizer.permit(:sign_up, except: [:email])
 (called from configure_permitted_parameters at /SAPI/app/controllers/application_controller.rb:43)
DEPRECATION WARNING: [Devise] Changing the sanitized parameters through "Devise::ParameterSanitizer#for(account_update) is deprecated and it will be removed from Devise 4.1.
Please use the `permit` method to add or remove any key:

  To add any new key, use the `keys` keyword argument:
  devise_parameter_sanitizer.permit(:account_update, keys: [:param1, :param2, :param3])

  To remove any existing key, use the `except` keyword argument:
  devise_parameter_sanitizer.permit(:account_update, except: [:email])
 (called from configure_permitted_parameters at /SAPI/app/controllers/application_controller.rb:44)
  redirects Data Contributor to admin root path
DEPRECATION WARNING: [Devise] Changing the sanitized parameters through "Devise::ParameterSanitizer#for(sign_up) is deprecated and it will be removed from Devise 4.1.
Please use the `permit` method to add or remove any key:

  To add any new key, use the `keys` keyword argument:
  devise_parameter_sanitizer.permit(:sign_up, keys: [:param1, :param2, :param3])

  To remove any existing key, use the `except` keyword argument:
  devise_parameter_sanitizer.permit(:sign_up, except: [:email])
 (called from configure_permitted_parameters at /SAPI/app/controllers/application_controller.rb:43)
DEPRECATION WARNING: [Devise] Changing the sanitized parameters through "Devise::ParameterSanitizer#for(account_update) is deprecated and it will be removed from Devise 4.1.
Please use the `permit` method to add or remove any key:

  To add any new key, use the `keys` keyword argument:
  devise_parameter_sanitizer.permit(:account_update, keys: [:param1, :param2, :param3])

  To remove any existing key, use the `except` keyword argument:
  devise_parameter_sanitizer.permit(:account_update, except: [:email])
 (called from configure_permitted_parameters at /SAPI/app/controllers/application_controller.rb:44)
  redirects E-library Viewer to public root path
DEPRECATION WARNING: [Devise] Changing the sanitized parameters through "Devise::ParameterSanitizer#for(sign_up) is deprecated and it will be removed from Devise 4.1.
Please use the `permit` method to add or remove any key:

  To add any new key, use the `keys` keyword argument:
  devise_parameter_sanitizer.permit(:sign_up, keys: [:param1, :param2, :param3])

  To remove any existing key, use the `except` keyword argument:
  devise_parameter_sanitizer.permit(:sign_up, except: [:email])
 (called from configure_permitted_parameters at /SAPI/app/controllers/application_controller.rb:43)
DEPRECATION WARNING: [Devise] Changing the sanitized parameters through "Devise::ParameterSanitizer#for(account_update) is deprecated and it will be removed from Devise 4.1.
Please use the `permit` method to add or remove any key:

  To add any new key, use the `keys` keyword argument:
  devise_parameter_sanitizer.permit(:account_update, keys: [:param1, :param2, :param3])

  To remove any existing key, use the `except` keyword argument:
  devise_parameter_sanitizer.permit(:account_update, except: [:email])
 (called from configure_permitted_parameters at /SAPI/app/controllers/application_controller.rb:44)
  redirects API User to public root path

Annotation
  full_name
    when parent_symbol given
      example at ./spec/models/annotation_spec.rb:33
    when event given
      example at ./spec/models/annotation_spec.rb:40
  destroy
    when no dependent objects attached
      should be truthy
    when dependent objects attached
      when listing changes
        should be falsey
      when hashed listing changes
        should be falsey

ApiRequest
  top_50_most_active_users
    should eq 3398
  recent_requests
    example at ./spec/models/api_request_spec.rb:63 (FAILED - 69)
  requests_by_response_status
    should eq {"200"=>1, "400"=>0, "401"=>0, "404"=>0, "422"=>0, "500"=>1}
  requests_by_controller
    should eq {"taxon_concepts"=>2, "distributions"=>0, "cites_legislation"=>0, "eu_legislation"=>0, "references"=>0}

ChangeType
  abbreviation
    change type with single word name
      should == "Wor"
    change type with two words name
      should == "Wor-Wor"

Checklist
Procedure: taxonomy
  ann_symbol
    for species Caiman latirostris
      example at ./spec/models/checklist/annotations_spec.rb:16 (FAILED - 70)
    for species Panax ginseng
      example at ./spec/models/checklist/annotations_spec.rb:20 (FAILED - 71)

Checklist
Procedure: taxonomy
  search by cites populations
    when America
      example at ./spec/models/checklist/appendix_population_and_region_spec.rb:14 (FAILED - 72)
    when Mexico
      example at ./spec/models/checklist/appendix_population_and_region_spec.rb:25 (FAILED - 73)
    when Canada
      example at ./spec/models/checklist/appendix_population_and_region_spec.rb:36 (FAILED - 74)
    when Argentina
      example at ./spec/models/checklist/appendix_population_and_region_spec.rb:47 (FAILED - 75)
    when South America
      example at ./spec/models/checklist/appendix_population_and_region_spec.rb:58 (FAILED - 76)
    when North America
      example at ./spec/models/checklist/appendix_population_and_region_spec.rb:69 (FAILED - 77)
    when North America and Argentina
      example at ./spec/models/checklist/appendix_population_and_region_spec.rb:81 (FAILED - 78)

Checklist
Procedure: taxonomy
  search by cites populations
    when Nepal
      example at ./spec/models/checklist/appendix_population_spec.rb:15 (FAILED - 79)
    when Poland
      example at ./spec/models/checklist/appendix_population_spec.rb:26 (FAILED - 80)
  search by cites appendices
    when App I
      example at ./spec/models/checklist/appendix_population_spec.rb:40 (FAILED - 81)
    when App II
      example at ./spec/models/checklist/appendix_population_spec.rb:51 (FAILED - 82)
    when App III
      example at ./spec/models/checklist/appendix_population_spec.rb:62 (FAILED - 83)
  search by cites populations and appendices
    when Nepal
      when App I
        example at ./spec/models/checklist/appendix_population_spec.rb:78 (FAILED - 84)
      when App II
        example at ./spec/models/checklist/appendix_population_spec.rb:90 (FAILED - 85)
    when Poland
      when App I
        example at ./spec/models/checklist/appendix_population_spec.rb:104 (FAILED - 86)
      when App II
        example at ./spec/models/checklist/appendix_population_spec.rb:116 (FAILED - 87)
    when Poland or Nepal
      when App I
        example at ./spec/models/checklist/appendix_population_spec.rb:130 (FAILED - 88)
      when App II
        example at ./spec/models/checklist/appendix_population_spec.rb:142 (FAILED - 89)
    when App I or II
      when Poland
        example at ./spec/models/checklist/appendix_population_spec.rb:156 (FAILED - 90)
      when Nepal
        example at ./spec/models/checklist/appendix_population_spec.rb:168 (FAILED - 91)

Checklist
Procedure: taxonomy
  when filtering by appendix
    I
      should return Cacatua goffiniana (FAILED - 92)
      should not return Agapornis roseicollis (FAILED - 93)

Checklist::Checklist
  summarise_filters
    when params empty
      should == "All results"
  when 1 region
    should == "Results from 1 region"
  when > 1 region
    should == "Results from 2 regions"

Checklist
Procedure: taxonomy
  when common names displayed
    should return all English names for Arctocephalus australis: 'South American Fur Seal, Southern Fur Seal' (FAILED - 94)
    should return all Spanish names for Arctocephalus australis: 'Lobo fino sudamericano, Oso marino austral' (FAILED - 95)
    should return all French names for Arctocephalus australis: 'Otarie à fourrure australe' (FAILED - 96)
    should return all English names for Arctocephalus spp.: 'Fur seals, Southern fur seals' (FAILED - 97)
    should return all Spanish names for Arctocephalus spp.: 'Osos marinos' (FAILED - 98)
    should return all French names for Arctocephalus spp.: 'Arctocéphales du sud, Otaries à fourrure, Otaries à fourrure du sud' (FAILED - 99)
    should include a species without any common names defined (FAILED - 100)

Checklist::HigherTaxaInjector
  run
    when same phylum
      when two species from different classes
Procedure: taxonomy
        example at ./spec/models/checklist/higher_taxa_injector_spec.rb:122 (FAILED - 101)
      when two species from different classes and expand_headers set
Procedure: taxonomy
        example at ./spec/models/checklist/higher_taxa_injector_spec.rb:139 (FAILED - 102)
    when same order
      when two species from different families
Procedure: taxonomy
        example at ./spec/models/checklist/higher_taxa_injector_spec.rb:158 (FAILED - 103)
      when two species from different families and skip family set
Procedure: taxonomy
        example at ./spec/models/checklist/higher_taxa_injector_spec.rb:171 (FAILED - 104)
  higher_taxa_headers
    when same genus
      when one species
Procedure: taxonomy
        example at ./spec/models/checklist/higher_taxa_injector_spec.rb:188 (FAILED - 105)
      when one species and skip family set
Procedure: taxonomy
        example at ./spec/models/checklist/higher_taxa_injector_spec.rb:201 (FAILED - 106)
      when one species and expand headers set
Procedure: taxonomy
        example at ./spec/models/checklist/higher_taxa_injector_spec.rb:213 (FAILED - 107)
      when two species
Procedure: taxonomy
        example at ./spec/models/checklist/higher_taxa_injector_spec.rb:228 (FAILED - 108)
      when species and subspecies
Procedure: taxonomy
        example at ./spec/models/checklist/higher_taxa_injector_spec.rb:241 (FAILED - 109)
    when same family
      when two species from different genera
Procedure: taxonomy
        example at ./spec/models/checklist/higher_taxa_injector_spec.rb:256 (FAILED - 110)
    when same order
      when two species from different families
Procedure: taxonomy
        example at ./spec/models/checklist/higher_taxa_injector_spec.rb:271 (FAILED - 111)
      when two species from different families and expand headers set
Procedure: taxonomy
        example at ./spec/models/checklist/higher_taxa_injector_spec.rb:286 (FAILED - 112)
      when genus and different family
Procedure: taxonomy
        example at ./spec/models/checklist/higher_taxa_injector_spec.rb:301 (FAILED - 113)
      when family and genus in different family
Procedure: taxonomy
        example at ./spec/models/checklist/higher_taxa_injector_spec.rb:316 (FAILED - 114)
    when same class
      when order and genus from different order
Procedure: taxonomy
        example at ./spec/models/checklist/higher_taxa_injector_spec.rb:333 (FAILED - 115)
      when order and genus from different order and expand headers set
Procedure: taxonomy
        example at ./spec/models/checklist/higher_taxa_injector_spec.rb:348 (FAILED - 116)

Checklist::HigherTaxaItem
  ancestors_path
    when animal
      should == "Chordata,Reptilia,Crocodylia,Alligatoridae"
    when plant
      should == "Agavaceae"

Checklist
Procedure: taxonomy
  when taxonomic order
    Plantae
      should include Agave (Agavaceae) before Panax (Araliaceae) (FAILED - 117)
    Animalia
      should include birds after last mammal (FAILED - 118)
      should include Falconiformes (Aves) before Psittaciformes (Aves) (FAILED - 119)
      should include Cathartidae within Falconiformes (FAILED - 120)
      should include Cathartidae (Falconiformes) before Falconidae (Falconiformes) (FAILED - 121)
      should include Cathartidae (Falconiformes) before Cacatuidae (Psittaciformes) (FAILED - 122)
      should include Hirudo medicinalis at the very end (after all Chordata) (FAILED - 123)
  when alphabetical order
    should include Falconiformes (Aves) before Psittaciformes (Aves) (FAILED - 124)
    should include Cathartidae before Falconiformes (FAILED - 125)
    should include Cathartidae (Falconiformes) before Falconidae (Falconiformes) (FAILED - 126)
    should include Cathartidae (Falconiformes) after Cacatuidae (Psittaciformes) (FAILED - 127)

Checklist::Pdf::HistoryAnnotationsKey
  annotations_key
    should == "\\newpage\n\\parindent 0in\\cpart{\\historicalSummaryOfAnnotations}\nx\\parindent -0.1in"
  hash_annotations_key
Procedure: taxonomy
    example at ./spec/models/checklist/pdf/history_annotations_key_spec.rb:59 (FAILED - 128)

Checklist::Pdf::History
  higher_taxon_name
    when family
Procedure: taxonomy
      example at ./spec/models/checklist/pdf/history_spec.rb:38 (FAILED - 129)
  listed_taxon_name
    when family
Procedure: taxonomy
      example at ./spec/models/checklist/pdf/history_spec.rb:56 (FAILED - 130)
    when genus
Procedure: taxonomy
      example at ./spec/models/checklist/pdf/history_spec.rb:71 (FAILED - 131)
  annotation_for_language
    annotation with footnote
Procedure: taxonomy
      example at ./spec/models/checklist/pdf/history_spec.rb:99 (FAILED - 132)

Checklist::Pdf::IndexAnnotationsKey
  annotations_key
    should == "\\newpage\n\\parindent 0in\\cpart{\\annotationsKey}\nxx\\parindent -0.1in"
  hash_annotations_key
Procedure: taxonomy
    example at ./spec/models/checklist/pdf/index_annotations_key_spec.rb:46 (FAILED - 133)
  non_hash_annotations_key
Procedure: taxonomy
    example at ./spec/models/checklist/pdf/index_annotations_key_spec.rb:102 (FAILED - 134)

Checklist::Pdf::IndexFetcher
  with common names
Procedure: taxonomy
    example at ./spec/models/checklist/pdf/index_fetcher_spec.rb:49 (FAILED - 135)
  with synonyms and authors
Procedure: taxonomy
    example at ./spec/models/checklist/pdf/index_fetcher_spec.rb:77 (FAILED - 136)

Checklist
Procedure: taxonomy
  when filtering by name
    by scientific name
      example at ./spec/models/checklist/scientific_name_spec.rb:15 (FAILED - 137)
    by common name
      example at ./spec/models/checklist/scientific_name_spec.rb:28 (FAILED - 138)

Checklist
Procedure: taxonomy
  when synonyms displayed
    should return Alligator cynocephalus as synonym for Caiman latirostris (FAILED - 139)

Species::TaxonConceptPrefixMatcher
Procedure: taxonomy
  results
    when query in capital letters
      example at ./spec/models/checklist/taxon_concept_prefix_matcher_spec.rb:13 (FAILED - 140)
    when match on accepted name
      example at ./spec/models/checklist/taxon_concept_prefix_matcher_spec.rb:22 (FAILED - 141)
    when match on synonym
      example at ./spec/models/checklist/taxon_concept_prefix_matcher_spec.rb:31 (FAILED - 142)
    when match on common name
      example at ./spec/models/checklist/taxon_concept_prefix_matcher_spec.rb:40 (FAILED - 143)

Checklist::Timeline
  when deleted
Procedure: taxonomy
    example at ./spec/models/checklist/timeline_spec.rb:23 (FAILED - 144)
Procedure: taxonomy
    example at ./spec/models/checklist/timeline_spec.rb:24 (FAILED - 145)
Procedure: taxonomy
    example at ./spec/models/checklist/timeline_spec.rb:25 (FAILED - 146)
  when deleted from III multiple times
Procedure: taxonomy
    example at ./spec/models/checklist/timeline_spec.rb:83 (FAILED - 147)
Procedure: taxonomy
    example at ./spec/models/checklist/timeline_spec.rb:84 (FAILED - 148)
Procedure: taxonomy
    example at ./spec/models/checklist/timeline_spec.rb:85 (FAILED - 149)
  when deleted and then readded
Procedure: taxonomy
    example at ./spec/models/checklist/timeline_spec.rb:112 (FAILED - 150)
Procedure: taxonomy
    example at ./spec/models/checklist/timeline_spec.rb:113 (FAILED - 151)
Procedure: taxonomy
    example at ./spec/models/checklist/timeline_spec.rb:114 (FAILED - 152)
  when reservation withdrawn
Procedure: taxonomy
    example at ./spec/models/checklist/timeline_spec.rb:154 (FAILED - 153)
Procedure: taxonomy
    example at ./spec/models/checklist/timeline_spec.rb:155 (FAILED - 154)
Procedure: taxonomy
    example at ./spec/models/checklist/timeline_spec.rb:156 (FAILED - 155)
  when reservation withdrawn and then readded
Procedure: taxonomy
    example at ./spec/models/checklist/timeline_spec.rb:202 (FAILED - 156)
Procedure: taxonomy
    example at ./spec/models/checklist/timeline_spec.rb:203 (FAILED - 157)
Procedure: taxonomy
    example at ./spec/models/checklist/timeline_spec.rb:204 (FAILED - 158)
Procedure: taxonomy
    example at ./spec/models/checklist/timeline_spec.rb:205 (FAILED - 159)
  when added multiple times
Procedure: taxonomy
    example at ./spec/models/checklist/timeline_spec.rb:227 (FAILED - 160)
Procedure: taxonomy
    example at ./spec/models/checklist/timeline_spec.rb:231 (FAILED - 161)
Procedure: taxonomy
    example at ./spec/models/checklist/timeline_spec.rb:232 (FAILED - 162)
  when automatic deletion from ancestor listing
Procedure: taxonomy
    example at ./spec/models/checklist/timeline_spec.rb:256 (FAILED - 163)
Procedure: taxonomy
    example at ./spec/models/checklist/timeline_spec.rb:260 (FAILED - 164)
Procedure: taxonomy
    example at ./spec/models/checklist/timeline_spec.rb:261 (FAILED - 165)

Checklist::TimelinesForTaxonConcept
  timelines
    when Appendix I
Procedure: taxonomy
      example at ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:25 (FAILED - 166)
Procedure: taxonomy
      example at ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:26 (FAILED - 167)
    when Appendix III
Procedure: taxonomy
      example at ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:46 (FAILED - 168)
Procedure: taxonomy
      example at ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:47 (FAILED - 169)
    when Appendix III reservation
Procedure: taxonomy
      example at ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:67 (FAILED - 170)
Procedure: taxonomy
      example at ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:68 (FAILED - 171)
Procedure: taxonomy
      example at ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:69 (FAILED - 172)
  timeline_years
    when in 1990
Procedure: taxonomy
      example at ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:81 (FAILED - 173)
Procedure: taxonomy
      example at ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:82 (FAILED - 174)
Procedure: taxonomy
      example at ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:83 (FAILED - 175)

CitesCaptivityProcess
  add some examples to (or delete) /SAPI/spec/models/cites_captivity_process_spec.rb (PENDING: Not yet implemented)

CitesCop
  create
    when designation invalid
      should be invalid
      should have 1 error on :designation_id
    when effective_at is blank
      should be invalid
      should have 1 error on :effective_at
  destroy
    when no dependent objects attached
      should be truthy
    when dependent objects attached
      when listing changes
        should be falsey

CitesSuspensionNotification
  create
    when designation invalid
      should be invalid
      should have 1 error on :designation_id
    when effective_at is blank
      should be invalid
      should have 1 error on :effective_at
  destroy
    when no dependent objects attached
      should be truthy
    when dependent objects attached
      when start notification
        should be falsey
      when end notification
        should be falsey
      when confirmation notification, make sure it gets destroyed
        example at ./spec/models/cites_suspension_notification_spec.rb:85 (FAILED - 176)
  end_date_formatted
    should == "10/05/2012"
  bases_for_suspension
    example at ./spec/models/cites_suspension_notification_spec.rb:103

CitesSuspension
  touching taxa
    create
      when taxon specific suspension
        should change result
      when global suspension
        should change result
      when suspension at higher taxonomic level
        should change result
    update
      when taxon specific suspension
        should change result
      when global suspension
        should change result
        should change result
      when suspension at higher taxonomic level
        should change result
    destroy
      when taxon specific suspension
        should change result
      when global suspension
        should change result
      when suspension at higher taxonomic level
        should change result
  validations
    create
      when start notification missing
        should be invalid
        should have 1 error on :start_notification_id
      when start date greater than end date
        should be invalid
        should have 1 error on :start_date
      when valid
        should be valid
  create
    downloads cache should be populated
      should not be empty
  destroy
    downloads cache should be cleared
      should be empty

CmsMapping
  add some examples to (or delete) /SAPI/spec/models/cms_mapping_spec.rb (PENDING: Not yet implemented)

CommonName
  Generating PDF
    english_to_pdf
      should print last word before the first word, separated by comma
      should print the last word before the other words, separated by comma
      should print the single word, if the common name is composed of only one word

DashboardStats
  #new
    takes three parameters and returns a DashboardStats object
  #species
Procedure: taxonomy
    has one results for argentina (FAILED - 177)
    has no results for ghana (FAILED - 178)

DashboardStats
  #trade
    when no time range specified
Procedure: taxonomy
      argentina should have 40 exported animals and no imports (FAILED - 179)
    when time range specified
Procedure: taxonomy
      argentina should have no exports in 2012-2012 (FAILED - 180)

Designation
  create
    when valid
      should be valid
    when name missing
      should be invalid
      should have 1 error on :name
    when name duplicated
      should be invalid
      should have 1 error on :name
  update
    when updating a non-protected name
      should be truthy
    when updating a protected name
      should be falsey
    when updating taxonomy with no dependent objects attached
      should be truthy
    when updating taxonomy with dependent objects attached
      should be falsey
  destroy
    when no dependent objects attached
      should be truthy
    when dependent objects attached
      should be falsey
    when protected name
      should be falsey

DocumentBatch
  save
    when invalid
      should be falsey
      should not change result
    when valid
      should be truthy
      should change result by 1

DocumentSearch
  results
    when searching by Swietenia macrophylla
      should eq [645, 646, 647, 648, 649]
    when searching by Brazil
      should eq [654, 655, 656, 657]
    when searching by Swietenia macrophylla in Brazil
      should eq [661, 662]
    when searching by Swietenia macrophylla in Brazil and Belize
      should eq [667, 668, 669, 670]
  documents_need_refreshing?
    when no changes in last 5 minutes
      should be falsey
    when document created in last 5 minutes
      should be truthy
    when document destroyed in last 5 minutes
      should be truthy
    when document updated in last 5 minutes
      should be truthy
  citations_need_refreshing?
    when no changes in last 5 minutes
      should be falsey
    when citation created in last 5 minutes
      should be truthy
    when citation destroyed in last 5 minutes
      should be truthy
    when citation updated in last 5 minutes
      should be truthy

Document
  create
    when date is blank
      should be invalid
      should have 1 error on :date
    setting title from filename
      should eq "Annual report upload exporter"
    when specified designation conflicts with event
      should eq #<Designation id: nil, name: "CITES", taxonomy_id: 4486, created_at: "2024-01-04 16:45:04", updated_at: "2024-01-04 16:45:04">
    when documents with same language and same primary document
      should be invalid
      should have 1 error on :primary_language_document_id
  update
    when primary document sort_index_updated
      secondary document sort_index is in sync
    when secondary document sort_index_updated
      primary document sort_index is in sync
  destroy
    when secondary document destroyed
      document count decreases by 1
    when primary document destroyed
      document count decreases by 1
      secondary document becomes primary

EuDecision
  create
    downloads cache should be populated
sh: 1: psql: not found
      example at ./spec/models/eu_decision_spec.rb:68 (FAILED - 181)
  save
    Eu decision type and SRG history can't be blank at the same time
      should be falsey
      should have an error message
    Eu decision creates correctly if only Eu decision type is populated
      should be truthy
    Eu decision creates correctly if only SRG history is populated
      should be truthy
    Eu decision creates correctly if both Eu decision type and SRG history are populated
      should be truthy
  destroy
    downloads cache should be cleared
      should be empty

EuOpinion
  create
    when taxon concept missing
      should be invalid
      should have 1 error on :taxon_concept
    when geo_entity missing
      should be invalid
      should have 1 error on :geo_entity
    when start_date missing
      should be invalid
      should have 1 error on :start_date
    when valid
      should be valid

EuRegulation
  create
    when eu_regulation to copy from given
      should == 1
    when designation invalid
      should be invalid
      should have 1 error on :designation_id
    when effective_at is blank
      should be invalid
      should have 1 error on :effective_at
  activate
    should be truthy
    should == 1
  deactivate
    should be falsey
    should == 1
  destroy
    when no dependent objects attached
      should be truthy
    when dependent objects attached
      when listing changes
        should be truthy

EuSuspension
  create
    when taxon concept missing
      should be invalid
      should have 1 error on :taxon_concept
    when geo_entity missing
      should be invalid
      should have 1 error on :geo_entity
    when valid
      should be valid
  is_current
    when start_event and end_event not set
      should be falsey
    when start_event is set but date is in the future
      should be falsey
    when start_event is set but is not current
      should be falsey
    when start_event is set but date is in past or present
      should be truthy
      should be truthy
    when end_event is set, but no start_event is set
      should be falsey
    when end_event is set, and start_event is set with date in future
      should be falsey
    when  start_event is set, and end_event is set with date in the future
      should be truthy
    when  start_event is set, and end_event is set with date in the past
      should be falsey
  start_date_formatted
    when there's no start_event
      should be empty
    when there's start_event
      should == "02/01/2024"
  end_date_formatted
    when there's no end_event
      should be empty
    when there's end_event
      should == "02/01/2024"

Event
  create
    when valid
      should be valid
    when name missing
      should be invalid
      should have 1 error on :name
    when name duplicated
      should be invalid
      should have 1 error on :name
    when url invalid
      should be invalid
      should have 1 error on :url
  effective_at_formatted
    should == "10/05/2012"

GeoEntitySearch
  results
    when searching by geo entity types set
      default set
        default locale
          should include #<GeoEntity id: nil, geo_entity_type_id: 1753, name_en: "Myanmar", name_fr: "Myanmar", name_es: "Myanmar", long_name: nil, iso_code2: "MM", iso_code3: nil, legacy_id: nil, legacy_type: nil, is_current: true, created_at: "2024-01-04 16:45:16", updated_at: "2024-01-04 16:45:16">
          should not include #<GeoEntity id: nil, geo_entity_type_id: 1757, name_en: "Burma", name_fr: "Birmanie", name_es: "Birmania", long_name: nil, iso_code2: "BU", iso_code3: nil, legacy_id: nil, legacy_type: nil, is_current: false, created_at: "2024-01-04 16:45:16", updated_at: "2024-01-04 16:45:16">
      Checklist regions (1)
        should include #<GeoEntity id: nil, geo_entity_type_id: 1760, name_en: "2- Asia", name_fr: "2- Asie", name_es: "2- Asia", long_name: nil, iso_code2: "KL", iso_code3: nil, legacy_id: nil, legacy_type: nil, is_current: true, created_at: "2024-01-04 16:45:16", updated_at: "2024-01-04 16:45:16">
        should eq 1
      Checklist countries & territories (2)
        should not include #<GeoEntity id: nil, geo_entity_type_id: 1768, name_en: "2- Asia", name_fr: "2- Asie", name_es: "2- Asia", long_name: nil, iso_code2: "MN", iso_code3: nil, legacy_id: nil, legacy_type: nil, is_current: true, created_at: "2024-01-04 16:45:16", updated_at: "2024-01-04 16:45:16">
        should include #<GeoEntity id: nil, geo_entity_type_id: 1773, name_en: "Burma", name_fr: "Birmanie", name_es: "Birmania", long_name: nil, iso_code2: "BU", iso_code3: nil, legacy_id: nil, legacy_type: nil, is_current: false, created_at: "2024-01-04 16:45:16", updated_at: "2024-01-04 16:45:16">
        should include #<GeoEntity id: nil, geo_entity_type_id: 1777, name_en: "Myanmar", name_fr: "Myanmar", name_es: "Myanmar", long_name: nil, iso_code2: "MM", iso_code3: nil, legacy_id: nil, legacy_type: nil, is_current: true, created_at: "2024-01-04 16:45:16", updated_at: "2024-01-04 16:45:16">
        should include #<GeoEntity id: nil, geo_entity_type_id: 1782, name_en: "American Samoa", name_fr: "Samoa américaines", name_es: "Samoa Americana", long_name: nil, iso_code2: "AS", iso_code3: nil, legacy_id: nil, legacy_type: nil, is_current: true, created_at: "2024-01-04 16:45:16", updated_at: "2024-01-04 16:45:16">
        should not include #<GeoEntity id: nil, geo_entity_type_id: 1787, name_en: "Introduction from the sea", name_fr: "Introduction en provenance de la mer", name_es: "Introducción procedente del mar", long_name: nil, iso_code2: "ZZ", iso_code3: nil, legacy_id: nil, legacy_type: nil, is_current: true, created_at: "2024-01-04 16:45:16", updated_at: "2024-01-04 16:45:16">
      Species+ regions, countries & territories (3)
        English locale
          should include #<GeoEntity id: nil, geo_entity_type_id: 1788, name_en: "2- Asia", name_fr: "2- Asie", name_es: "2- Asia", long_name: nil, iso_code2: "RS", iso_code3: nil, legacy_id: nil, legacy_type: nil, is_current: true, created_at: "2024-01-04 16:45:16", updated_at: "2024-01-04 16:45:16">
          should not include #<GeoEntity id: nil, geo_entity_type_id: 1793, name_en: "Burma", name_fr: "Birmanie", name_es: "Birmania", long_name: nil, iso_code2: "BU", iso_code3: nil, legacy_id: nil, legacy_type: nil, is_current: false, created_at: "2024-01-04 16:45:17", updated_at: "2024-01-04 16:45:17">
          should include #<GeoEntity id: nil, geo_entity_type_id: 1797, name_en: "Myanmar", name_fr: "Myanmar", name_es: "Myanmar", long_name: nil, iso_code2: "MM", iso_code3: nil, legacy_id: nil, legacy_type: nil, is_current: true, created_at: "2024-01-04 16:45:17", updated_at: "2024-01-04 16:45:17">
          should not include #<GeoEntity id: nil, geo_entity_type_id: 1803, name_en: "Introduction from the sea", name_fr: "Introduction en provenance de la mer", name_es: "Introducción procedente del mar", long_name: nil, iso_code2: "ZZ", iso_code3: nil, legacy_id: nil, legacy_type: nil, is_current: true, created_at: "2024-01-04 16:45:17", updated_at: "2024-01-04 16:45:17">
          should eq 1
          should eq 2
        Spanish locale
          should include #<GeoEntity id: nil, geo_entity_type_id: 1812, name_en: "2- Asia", name_fr: "2- Asie", name_es: "2- Asia", long_name: nil, iso_code2: "XY", iso_code3: nil, legacy_id: nil, legacy_type: nil, is_current: true, created_at: "2024-01-04 16:45:17", updated_at: "2024-01-04 16:45:17">
          should not include #<GeoEntity id: nil, geo_entity_type_id: 1817, name_en: "Burma", name_fr: "Birmanie", name_es: "Birmania", long_name: nil, iso_code2: "BU", iso_code3: nil, legacy_id: nil, legacy_type: nil, is_current: false, created_at: "2024-01-04 16:45:17", updated_at: "2024-01-04 16:45:17">
          should include #<GeoEntity id: nil, geo_entity_type_id: 1821, name_en: "Myanmar", name_fr: "Myanmar", name_es: "Myanmar", long_name: nil, iso_code2: "MM", iso_code3: nil, legacy_id: nil, legacy_type: nil, is_current: true, created_at: "2024-01-04 16:45:17", updated_at: "2024-01-04 16:45:17">
          should not include #<GeoEntity id: nil, geo_entity_type_id: 1827, name_en: "Introduction from the sea", name_fr: "Introduction en provenance de la mer", name_es: "Introducción procedente del mar", long_name: nil, iso_code2: "ZZ", iso_code3: nil, legacy_id: nil, legacy_type: nil, is_current: true, created_at: "2024-01-04 16:45:17", updated_at: "2024-01-04 16:45:17">
          should eq 2
          should eq 1
      Trade countries, territories and trade entities (4)
        should not include #<GeoEntity id: nil, geo_entity_type_id: 1836, name_en: "2- Asia", name_fr: "2- Asie", name_es: "2- Asia", long_name: nil, iso_code2: "DE", iso_code3: nil, legacy_id: nil, legacy_type: nil, is_current: true, created_at: "2024-01-04 16:45:17", updated_at: "2024-01-04 16:45:17">
        should include #<GeoEntity id: nil, geo_entity_type_id: 1841, name_en: "Burma", name_fr: "Birmanie", name_es: "Birmania", long_name: nil, iso_code2: "BU", iso_code3: nil, legacy_id: nil, legacy_type: nil, is_current: false, created_at: "2024-01-04 16:45:17", updated_at: "2024-01-04 16:45:17">
        should include #<GeoEntity id: nil, geo_entity_type_id: 1845, name_en: "Myanmar", name_fr: "Myanmar", name_es: "Myanmar", long_name: nil, iso_code2: "MM", iso_code3: nil, legacy_id: nil, legacy_type: nil, is_current: true, created_at: "2024-01-04 16:45:17", updated_at: "2024-01-04 16:45:17">
        should include #<GeoEntity id: nil, geo_entity_type_id: 1850, name_en: "American Samoa", name_fr: "Samoa américaines", name_es: "Samoa Americana", long_name: nil, iso_code2: "AS", iso_code3: nil, legacy_id: nil, legacy_type: nil, is_current: true, created_at: "2024-01-04 16:45:17", updated_at: "2024-01-04 16:45:17">
        should include #<GeoEntity id: nil, geo_entity_type_id: 1855, name_en: "Introduction from the sea", name_fr: "Introduction en provenance de la mer", name_es: "Introducción procedente del mar", long_name: nil, iso_code2: "ZZ", iso_code3: nil, legacy_id: nil, legacy_type: nil, is_current: true, created_at: "2024-01-04 16:45:17", updated_at: "2024-01-04 16:45:17">
  cached_results
    should not include #<GeoEntity id: 2321, geo_entity_type_id: 1856, name_en: "Burma", name_fr: nil, name_es: nil, long_name: nil, iso_code2: "BU", iso_code3: nil, legacy_id: nil, legacy_type: nil, is_current: false, created_at: "2024-01-04 16:45:17", updated_at: "2024-01-04 16:45:17">

GeoEntity
  nodes_and_descendants
    Europe should contain Europe, Poland and Wolin
      should include 2324, 2322, and 2323
      should == 3
  destroy
    when no dependent objects attached
      should be truthy
    when dependent objects attached
      when distributions
        should be falsey
      when exported shipments
        should be falsey
      when imported shipments
        should be falsey
      when originated shipments
        should be falsey
      when connected geo entities
        should be falsey

HtmlToLatex
  convert
    when italics
      when tag closed
        should == "Text about \\textit{Foobarus lolus} and friends"
      when tag not closed
        should == "Text about \\textit{Foobarus lolus and friends}"
    when paragraph
      when tag closed
        should == "Text, \\newline paragraph\\newline  and some more text"
      when tag not closed
        should == "Text, \\newline paragraph and some more text"
    when latex special characters
      within tags
        should == "\\textbf{Lolus \\& friends}"
      outside of tags
        should == "\\textbf{Lolus} \\& friends"

TaxonRelationship
  when hybrid
    should include "Lolcatus lolatus x lolcatus"
    should include "Lolcatus lolatus x lolcatus"

ListingChange
  validations
    create
      all fine with exception
        should be valid
      inclusion taxon concept is lower rank
        should have 1 error on :inclusion_taxon_concept_id
      species listing designation mismatch
        should have 1 error on :species_listing_id
      event designation mismatch
        should have 1 error on :event_id
  effective_at_formatted
    should == "10/05/2012"
  duplicates
    example at ./spec/models/listing_change_spec.rb:103

NomenclatureChange::DeleteUnreassignedProcessor
  run
    delete unreassigned
      should eq 1
      should eq 2
      should eq 1

NomenclatureChange::FullReassignment
  process
    when distributions present
      should eq 1
    when references present
      should eq 1
    when listing changes present
      should eq 1
    when EU Opinions present
      should eq 1
    when EU Suspensions present
      should eq 1
    when CITES Quotas present
      should eq 1
    when CITES Suspensions present
      should eq 1
    when common names present
      should eq 1
    when document citations present
      should eq 1

NomenclatureChange::Input
  validate
    when nomenclature change not specified
      should not be valid
    when taxon concept not specified
      should not be valid

NomenclatureChange::Lump::Constructor
  inputs
    build_inputs
      when previously no inputs in place
        should not eq 0
      when previously inputs in place
        should eq #<ActiveRecord::Associations::CollectionProxy [#<NomenclatureChange::Input id: nil, nomenclature_change_id: 589, taxon_concept_id: 23827, note_en: "", created_by_id: 3709, updated_by_id: 3709, created_at: "2024-01-04 16:45:33", updated_at: "2024-01-04 16:45:33", internal_note: "", note_es: "", note_fr: "">, #<NomenclatureChange::Input id: nil, nomenclature_change_id: 589, taxon_concept_id: 23835, note_en: "", created_by_id: 3709, updated_by_id: 3709, created_at: "2024-01-04 16:45:33", updated_at: "2024-01-04 16:45:33", internal_note: "", note_es: "", note_fr: "">]>
  outputs
    build_output
      when previously no output in place
        should not be nil
      when previously output in place
        should eq #<NomenclatureChange::Output id: nil, nomenclature_change_id: 591, taxon_concept_id: 23875, new_taxon_concept_id: nil, new_parent_id: nil, new_rank_id: nil, new_scientific_name: nil, new_author_year: nil, new_name_status: nil, note_en: "", created_by_id: 3711, updated_by_id: 3711, created_at: "2024-01-04 16:45:35", updated_at: "2024-01-04 16:45:35", internal_note: "", is_primary_output: true, parent_id: 23874, rank_id: 14053, scientific_name: "Lupus3829 lupus3828", author_year: nil, name_status: "A", note_es: "", note_fr: "", taxonomy_id: nil, tag_list: []>
  reassignments
    build_input_and_output_notes
      when previously no notes in place
        should not be blank
        should not be blank
        when output = input
          should be blank
      when previously notes in place
        should eq "blah"
        should eq "blah"
    build_parent_reassignments
      when previously no reassignments in place
        when no children
          should eq 0
        when children
          should eq 2
      when previously reassignments in place
        should eq #<ActiveRecord::Associations::CollectionProxy []>
      when output = input
        should eq [#<NomenclatureChange::Output id: nil, nomenclature_change_id: 600, taxon_concept_id: 24091, new_taxon_concept_id: nil, new_parent_id: nil, new_rank_id: nil, new_scientific_name: nil, new_author_year: nil, new_name_status: nil, note_en: "", created_by_id: 3720, updated_by_id: 3720, created_at: "2024-01-04 16:45:43", updated_at: "2024-01-04 16:45:43", internal_note: "", is_primary_output: true, parent_id: 24090, rank_id: 14126, scientific_name: "Lupus4045 lupus4044", author_year: nil, name_status: "A", note_es: "", note_fr: "", taxonomy_id: nil, tag_list: []>]
      when previously reassignments in place
        should eq #<ActiveRecord::Associations::CollectionProxy []>
    build_name_reassignments
      when previously no reassignments in place
        when no names
          should eq 0
        when names
          should eq 2
      when previously reassignments in place
        should eq #<ActiveRecord::Associations::CollectionProxy []>
      when output = input
        should eq [#<NomenclatureChange::Output id: nil, nomenclature_change_id: 605, taxon_concept_id: 24207, new_taxon_concept_id: nil, new_parent_id: nil, new_rank_id: nil, new_scientific_name: nil, new_author_year: nil, new_name_status: nil, note_en: "", created_by_id: 3725, updated_by_id: 3725, created_at: "2024-01-04 16:45:47", updated_at: "2024-01-04 16:45:47", internal_note: "", is_primary_output: true, parent_id: 24206, rank_id: 14167, scientific_name: "Lupus4161 lupus4160", author_year: nil, name_status: "A", note_es: "", note_fr: "", taxonomy_id: nil, tag_list: []>]
    build_distribution_reassignments
      when previously no reassignments in place
        when no distibutions
          should eq 0
        when distributions
          should eq 2
      when previously reassignments in place
        should eq #<ActiveRecord::Associations::CollectionProxy []>
    build_document_reassignments
      when previously no reassignments in place
        when no document citations
          should eq 0
        when document citations
          should eq 2
    build_legislation_reassignments
      when previously no reassignments in place
        when no CITES listings
          should eq 0
        when CITES listings
          should eq 1
      when previously reassignments in place
        should eq #<ActiveRecord::Associations::CollectionProxy []>
    build_common_names_reassignments
      when previously no reassignments in place
        when no common names
          should eq 0
        when common names
          should eq 1
      when previously reassignments in place
        should eq #<ActiveRecord::Associations::CollectionProxy [#<NomenclatureChange::Reassignment id: 323, nomenclature_change_input_id: 623, type: "NomenclatureChange::Reassignment", reassignable_type: "TaxonConcept", reassignable_id: nil, note_en: nil, created_by_id: 3736, updated_by_id: 3736, created_at: "2024-01-04 16:45:56", updated_at: "2024-01-04 16:45:56", note_es: nil, note_fr: nil, internal_note: nil>]>
    build_references_reassignments
      when previously no reassignments in place
        when no references
          should eq 0
        when references
          should eq 1
      when previously reassignments in place
        should eq #<ActiveRecord::Associations::CollectionProxy [#<NomenclatureChange::Reassignment id: 325, nomenclature_change_input_id: 630, type: "NomenclatureChange::Reassignment", reassignable_type: "TaxonConcept", reassignable_id: nil, note_en: nil, created_by_id: 3739, updated_by_id: 3739, created_at: "2024-01-04 16:45:59", updated_at: "2024-01-04 16:45:59", note_es: nil, note_fr: nil, internal_note: nil>]>

NomenclatureChange::OutputTaxonConceptProcessor
  run
    when output is existing taxon
      should be nil
    when output is new taxon
      should eq "Errorus fatalus"
    when output is existing taxon with new status
      should be nil
      should eq "A"
    when output is existing taxon with new name
      should eq "Errorus fatalus fatalus"
      should eq "A"
      should eq "Errorus lolcatus"

NomenclatureChange::Lump::Processor
  run
    when outputs are existing taxa
      should not change #count
      should not change #full_name
      relationships and trade
        should be is synonym
        should include #<TaxonConcept id: nil, taxonomy_id: 4756, parent_id: 24854, rank_id: 14370, taxon_name_id: 24841, author_year: nil, legacy_id: nil, legacy_type: nil, data: {"rank_name" => "SPECIES", "kingdom_id" => "24848", "kingdom_name" => "Lupus4801", "phylum_id" => "24849", "phylum_name" => "Lupus4800", "class_id" => "24850", "class_name" => "Lupus4799", "order_id" => "24851", "order_name" => "Lupus4798", "family_id" => "24852", "family_name" => "Lupus4797", "subfamily_id" => "24853", "subfamily_name" => "Lupus4796", "genus_id" => "24854", "genus_name" => "Lupus4795", "species_id" => "24855", "species_name" => "Lupus4794"}, listing: nil, notes: nil, taxonomic_position: "1", full_name: "Lupus4795 lupus4794", name_status: "A", created_at: "2024-01-04 16:46:10", updated_at: "2024-01-04 16:46:10", touched_at: nil, legacy_trade_code: nil, updated_by_id: 3752, created_by_id: 3752, dependents_updated_at: nil, nomenclature_note_en: nil, nomenclature_note_es: nil, nomenclature_note_fr: nil, dependents_updated_by_id: nil, kew_id: nil>
        should be empty
        should include #<Trade::Shipment id: nil, source_id: 2849, unit_id: 2847, purpose_id: 2848, term_id: 2846, quantity: #<BigDecimal:40123d6808,'0.1E1',9(27)>, appendix: "I", trade_annual_report_upload_id: nil, exporter_id: 2369, importer_id: 2368, country_of_origin_id: nil, reported_by_exporter: true, taxon_concept_id: 24887, year: 2013, created_at: "2024-01-04 16:46:12", updated_at: "2024-01-04 16:46:12", sandbox_id: nil, reported_taxon_concept_id: 24887, import_permit_number: nil, export_permit_number: nil, origin_permit_number: nil, legacy_shipment_number: nil, updated_by_id: 3754, created_by_id: 3754, import_permits_ids: nil, export_permits_ids: nil, origin_permits_ids: nil, epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
        should include #<Trade::Shipment id: nil, source_id: 2853, unit_id: 2851, purpose_id: 2852, term_id: 2850, quantity: #<BigDecimal:401e5f4fc0,'0.1E1',9(27)>, appendix: "I", trade_annual_report_upload_id: nil, exporter_id: 2371, importer_id: 2370, country_of_origin_id: nil, reported_by_exporter: true, taxon_concept_id: 24911, year: 2013, created_at: "2024-01-04 16:46:13", updated_at: "2024-01-04 16:46:13", sandbox_id: nil, reported_taxon_concept_id: 24911, import_permit_number: nil, export_permit_number: nil, origin_permit_number: nil, legacy_shipment_number: nil, updated_by_id: 3755, created_by_id: 3755, import_permits_ids: nil, export_permits_ids: nil, origin_permits_ids: nil, epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
    when output is new taxon
      should change #count by 1
      relationships and trade
        should be is synonym
        should include #<TaxonConcept id: 25023, taxonomy_id: 4768, parent_id: 25022, rank_id: 14418, taxon_name_id: 25016, author_year: nil, legacy_id: nil, legacy_type: nil, data: {"class_id" => "25018", "genus_id" => "25022", "order_id" => "25019", "family_id" => "25020", "phylum_id" => "25017", "rank_name" => "SPECIES", "class_name" => "Lupus4961", "genus_name" => "Errorus", "kingdom_id" => "25016", "order_name" => "Lupus4960", "species_id" => "25023", "family_name" => "Lupus4959", "phylum_name" => "Lupus4962", "kingdom_name" => "Lupus4963", "species_name" => "Fatalus", "subfamily_id" => "25021", "subfamily_name" => "Lupus4958"}, listing: nil, notes: nil, taxonomic_position: "0", full_name: "Errorus fatalus", name_status: "A", created_at: "2024-01-04 16:46:17", updated_at: "2024-01-04 16:46:17", touched_at: nil, legacy_trade_code: nil, updated_by_id: 3758, created_by_id: 3758, dependents_updated_at: nil, nomenclature_note_en: " ", nomenclature_note_es: " ", nomenclature_note_fr: " ", dependents_updated_by_id: nil, kew_id: nil>
        should include #<Trade::Shipment id: nil, source_id: 2869, unit_id: 2867, purpose_id: 2868, term_id: 2866, quantity: #<BigDecimal:40200d76f8,'0.1E1',9(27)>, appendix: "I", trade_annual_report_upload_id: nil, exporter_id: 2379, importer_id: 2378, country_of_origin_id: nil, reported_by_exporter: true, taxon_concept_id: 25031, year: 2013, created_at: "2024-01-04 16:46:18", updated_at: "2024-01-04 16:46:18", sandbox_id: nil, reported_taxon_concept_id: 25031, import_permit_number: nil, export_permit_number: nil, origin_permit_number: nil, legacy_shipment_number: nil, updated_by_id: 3759, created_by_id: 3759, import_permits_ids: nil, export_permits_ids: nil, origin_permits_ids: nil, epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
    when output is existing taxon with new status
      should not change #count
      should not change #full_name
      relationships and trade
        should be is synonym
        should include #<TaxonConcept id: nil, taxonomy_id: 4778, parent_id: 25150, rank_id: 14458, taxon_name_id: 25137, author_year: nil, legacy_id: nil, legacy_type: nil, data: {"rank_name" => "SPECIES", "kingdom_id" => "25144", "kingdom_name" => "Lupus5089", "phylum_id" => "25145", "phylum_name" => "Lupus5088", "class_id" => "25146", "class_name" => "Lupus5087", "order_id" => "25147", "order_name" => "Lupus5086", "family_id" => "25148", "family_name" => "Lupus5085", "subfamily_id" => "25149", "subfamily_name" => "Lupus5084", "genus_id" => "25150", "genus_name" => "Lupus5083", "species_id" => "25151", "species_name" => "Lupus5082"}, listing: nil, notes: nil, taxonomic_position: "1", full_name: "Lupus5083 lupus5082", name_status: "A", created_at: "2024-01-04 16:46:22", updated_at: "2024-01-04 16:46:22", touched_at: nil, legacy_trade_code: nil, updated_by_id: 3763, created_by_id: 3763, dependents_updated_at: nil, nomenclature_note_en: nil, nomenclature_note_es: nil, nomenclature_note_fr: nil, dependents_updated_by_id: nil, kew_id: nil>
        should include #<Trade::Shipment id: nil, source_id: 2889, unit_id: 2887, purpose_id: 2888, term_id: 2886, quantity: #<BigDecimal:401e59c7a8,'0.1E1',9(27)>, appendix: "I", trade_annual_report_upload_id: nil, exporter_id: 2389, importer_id: 2388, country_of_origin_id: nil, reported_by_exporter: true, taxon_concept_id: 25159, year: 2013, created_at: "2024-01-04 16:46:23", updated_at: "2024-01-04 16:46:23", sandbox_id: nil, reported_taxon_concept_id: 25159, import_permit_number: nil, export_permit_number: nil, origin_permit_number: nil, legacy_shipment_number: nil, updated_by_id: 3764, created_by_id: 3764, import_permits_ids: nil, export_permits_ids: nil, origin_permits_ids: nil, epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
    when output is existing taxon with new name
      should change #count by 1
      should not change #full_name
      relationships and trade
        should be is synonym
        should eq #<TaxonConcept id: nil, taxonomy_id: 4788, parent_id: 25283, rank_id: 14501, taxon_name_id: 25271, author_year: nil, legacy_id: nil, legacy_type: nil, data: {"rank_name"=>"GENUS", "kingdom_id"=>"25278", "kingdom_name"=>"Lupus5210", "phylum_id"=>"25279", "phylum_name"=>"Lupus5209", "class_id"=>"25280", "class_name"=>"Lupus5208", "order_id"=>"25281", "order_name"=>"Lupus5207", "family_id"=>"25282", "family_name"=>"Lupus5206", "subfamily_id"=>"25283", "subfamily_name"=>"Lupus5205", "genus_id"=>"25284", "genus_name"=>"Lupus5204"}, listing: nil, notes: nil, taxonomic_position: "1", full_name: "Lupus5204", name_status: "A", created_at: "2024-01-04 16:46:28", updated_at: "2024-01-04 16:46:28", touched_at: nil, legacy_trade_code: nil, updated_by_id: 3768, created_by_id: 3768, dependents_updated_at: nil, nomenclature_note_en: nil, nomenclature_note_es: nil, nomenclature_note_fr: nil, dependents_updated_by_id: nil, kew_id: nil>
        should include #<TaxonConcept id: 25345, taxonomy_id: 4790, parent_id: 25334, rank_id: 14517, taxon_name_id: 25338, author_year: nil, legacy_id: nil, legacy_type: nil, data: {"class_id" => "25330", "genus_id" => "25334", "order_id" => "25331", "family_id" => "25332", "phylum_id" => "25329", "rank_name" => "SPECIES", "class_name" => "Lupus5253", "genus_name" => "Errorus", "kingdom_id" => "25328", "order_name" => "Lupus5252", "species_id" => "25345", "family_name" => "Lupus5251", "phylum_name" => "Lupus5254", "kingdom_name" => "Lupus5255", "species_name" => "Lolcatus", "subfamily_id" => "25333", "subfamily_name" => "Lupus5250"}, listing: nil, notes: nil, taxonomic_position: "0", full_name: "Errorus lolcatus", name_status: "A", created_at: "2024-01-04 16:46:30", updated_at: "2024-01-04 16:46:30", touched_at: nil, legacy_trade_code: nil, updated_by_id: 3769, created_by_id: 3769, dependents_updated_at: nil, nomenclature_note_en: " ", nomenclature_note_es: " ", nomenclature_note_fr: " ", dependents_updated_by_id: nil, kew_id: nil>
        should include #<Trade::Shipment id: nil, source_id: 2913, unit_id: 2911, purpose_id: 2912, term_id: 2910, quantity: #<BigDecimal:40174c73e8,'0.1E1',9(27)>, appendix: "I", trade_annual_report_upload_id: nil, exporter_id: 2401, importer_id: 2400, country_of_origin_id: nil, reported_by_exporter: true, taxon_concept_id: 25353, year: 2013, created_at: "2024-01-04 16:46:31", updated_at: "2024-01-04 16:46:31", sandbox_id: nil, reported_taxon_concept_id: 25353, import_permit_number: nil, export_permit_number: nil, origin_permit_number: nil, legacy_shipment_number: nil, updated_by_id: 3770, created_by_id: 3770, import_permits_ids: nil, export_permits_ids: nil, origin_permits_ids: nil, epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
    when input with children that don't change name
      input / output species has public nomenclature note set
      child of input / output species does not inherit public nomenclature note
      input / output species has internal nomenclature note set
      child of input / output species does not inherit internal nomenclature note
      child of input / output species does not have legislation nomenclature note
    when input with children that change name
      input species has public nomenclature note set
      child of input species inherits public nomenclature note
      input species has internal nomenclature note set
      child of input species inherits internal nomenclature note
      output species has public nomenclature note set
      child of output species inherits public nomenclature note from input
      output species has internal nomenclature note set
      child of output species inherits internal nomenclature note from input
      output species child has listing changes from input species child transferred
      child of output species has legislation nomenclature note copied from input species
      original output species child retains higher taxa intact
      new output species child has higher taxa set correctly
      original input species child retains higher taxa intact
      original input species child is a synonym
  when input is genus and parent ressignments occur
    input genus child is a synonym
    input genus child is a synonym of output genus child
    input genus child's child is a synonym
    input genus child's child's name did not change
    output genus should have child with resolved name
    output genus child should have child with resolved name
    output genus child should have input genus citations
    input genus child has no quotas
    input genus child's accepted name has 1 quota
    input genus child's document citations retained
  summary
    should be a kind of Array

NomenclatureChange::Lump
  validate
    when required inputs missing
      when inputs
        should have 1 errors on :inputs
      when submitting
        should have 1 errors on :inputs
    when required outputs missing
      when outputs
        should have 1 errors on :output
      when submitting
        should have 1 errors on :output
      when only 1 input
        should have 1 errors on :inputs
  new_output_rank
    should eq "SPECIES"

NomenclatureChange::OutputReassignment
  validate
    when output not specified
      should not be valid
    when reassignable_type not specified
      should not be valid

NomenclatureChange::Output
  validate
    when nomenclature change not specified
      should not be valid
    when taxon concept not specified and new taxon concept attributes not specified
      should have 1 errors on :new_scientific_name
      should have 1 errors on :new_parent_id
      should have 1 errors on :new_rank_id
      should have 1 errors on :new_name_status
      should have 1 errors on :new_taxon_concept
    when new taxon concept invalid
      should have 1 error on :new_parent_id
    when taxon concept specified
      should eq 26184
      should eq 14848
      should eq "Lupus6035 lupus6034"
      should eq nil
      should eq "A"
  expected_parent_name
    when genus
      should be nil
    when species
      should eq "Canis"
    when subspecies
      should eq "Canis lupus"
    when variety
      should eq "Magnolia liliifera"

NomenclatureChange::ReassignmentCopyProcessor
  run
    when children
      should eq #<TaxonConcept id: 26258, taxonomy_id: 4918, parent_id: 26257, rank_id: 14920, taxon_name_id: 26217, author_year: nil, legacy_id: nil, legacy_type: nil, data: {"rank_name"=>"SPECIES", "kingdom_id"=>"26251", "kingdom_name"=>"Lupus6087", "phylum_id"=>"26252", "phylum_name"=>"Lupus6086", "class_id"=>"26253", "class_name"=>"Lupus6085", "order_id"=>"26254", "order_name"=>"Lupus6084", "family_id"=>"26255", "family_name"=>"Lupus6083", "subfamily_id"=>"26256", "subfamily_name"=>"Lupus6082", "genus_id"=>"26257", "genus_name"=>"Genus1", "species_id"=>"26258", "species_name"=>"Lupus6088"}, listing: nil, notes: nil, taxonomic_position: "1", full_name: "Genus1 lupus6088", name_status: "A", created_at: "2024-01-04 16:47:21", updated_at: "2024-01-04 16:47:21", touched_at: nil, legacy_trade_code: nil, updated_by_id: 3829, created_by_id: 3829, dependents_updated_at: nil, nomenclature_note_en: nil, nomenclature_note_es: nil, nomenclature_note_fr: nil, dependents_updated_by_id: nil, kew_id: nil>
      should eq "S"
      should eq 0
      should include #<TaxonConcept id: 26294, taxonomy_id: 4924, parent_id: 26292, rank_id: 14948, taxon_name_id: 26249, author_year: nil, legacy_id: nil, legacy_type: nil, data: {"class_id" => "26286", "genus_id" => "26290", "order_id" => "26287", "family_id" => "26288", "phylum_id" => "26285", "rank_name" => "SUBSPECIES", "class_name" => "Lupus6112", "genus_name" => "Genus1", "kingdom_id" => "26284", "order_name" => "Lupus6111", "species_id" => "26292", "family_name" => "Lupus6110", "phylum_name" => "Lupus6113", "kingdom_name" => "Lupus6114", "species_name" => "Lupus6116", "subfamily_id" => "26289", "subspecies_id" => "26294", "subfamily_name" => "Lupus6109", "subspecies_name" => "Lupus6117"}, listing: nil, notes: nil, taxonomic_position: "0", full_name: "Genus1 lupus6116 lupus6117", name_status: "A", created_at: "2024-01-04 16:47:23", updated_at: "2024-01-04 16:47:23", touched_at: nil, legacy_trade_code: nil, updated_by_id: 3832, created_by_id: 3832, dependents_updated_at: "2024-01-04 16:47:23", nomenclature_note_en: nil, nomenclature_note_es: nil, nomenclature_note_fr: nil, dependents_updated_by_id: 3832, kew_id: nil>
    when names
      should include #<TaxonConcept id: nil, taxonomy_id: 4926, parent_id: nil, rank_id: 14956, taxon_name_id: 26259, author_year: nil, legacy_id: nil, legacy_type: nil, data: nil, listing: nil, notes: nil, taxonomic_position: "1", full_name: "Lupus6126", name_status: "S", created_at: "2024-01-04 16:47:23", updated_at: "2024-01-04 16:47:23", touched_at: nil, legacy_trade_code: nil, updated_by_id: 3833, created_by_id: 3833, dependents_updated_at: nil, nomenclature_note_en: nil, nomenclature_note_es: nil, nomenclature_note_fr: nil, dependents_updated_by_id: nil, kew_id: nil>
      should include #<TaxonConcept id: nil, taxonomy_id: 4928, parent_id: nil, rank_id: 14964, taxon_name_id: 26269, author_year: nil, legacy_id: nil, legacy_type: nil, data: nil, listing: nil, notes: nil, taxonomic_position: "1", full_name: "Lupus6135", name_status: "S", created_at: "2024-01-04 16:47:24", updated_at: "2024-01-04 16:47:24", touched_at: nil, legacy_trade_code: nil, updated_by_id: 3834, created_by_id: 3834, dependents_updated_at: nil, nomenclature_note_en: nil, nomenclature_note_es: nil, nomenclature_note_fr: nil, dependents_updated_by_id: nil, kew_id: nil>
    when distribution
      should eq 4
      should not be nil
      should eq []
      should contain exactly "extinct" and "reintroduced"
      should eq []
      should eq 2
      should eq 4
    when legislation
      example at ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:101 (FAILED - 182)
      example at ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:102 (FAILED - 183)
      example at ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:108 (FAILED - 184)
      example at ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:115 (FAILED - 185)
      example at ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:122 (FAILED - 186)
      example at ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:129 (FAILED - 187)
      example at ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:136 (FAILED - 188)
      example at ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:142 (FAILED - 189)
      example at ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:149 (FAILED - 190)
      example at ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:150 (FAILED - 191)
      example at ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:156 (FAILED - 192)
      example at ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:163 (FAILED - 193)
      example at ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:170 (FAILED - 194)
      example at ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:177 (FAILED - 195)
      example at ./spec/models/nomenclature_change/reassignment_copy_processor_spec.rb:26 (FAILED - 196)
      example at ./spec/models/nomenclature_change/reassignment_copy_processor_spec.rb:27 (FAILED - 197)
      example at ./spec/models/nomenclature_change/reassignment_copy_processor_spec.rb:28 (FAILED - 198)
    when common names
      should eq 2
      should eq 2
    when references
      should eq 2
      should eq 2
    when document citations
      should eq 1
      when output species had no citations in place
        should eq 1
      when output species had an identical citation in place
        should eq 1
    when shipments
      should eq 2
      should be empty

NomenclatureChange::Reassignment
  validate
    when input not specified
      should not be valid
    when reassignable_type not specified
      should not be valid

NomenclatureChange::ReassignmentTarget
  validate
    when reassignment not specified
      should not be valid
    when output not specified
      should not be valid

NomenclatureChange::ReassignmentTransferProcessor
  run
    input reassignments
      when children
        should eq #<TaxonConcept id: 26666, taxonomy_id: 5050, parent_id: 26665, rank_id: 15275, taxon_name_id: 26621, author_year: nil, legacy_id: nil, legacy_type: nil, data: {"rank_name"=>"SPECIES", "kingdom_id"=>"26659", "kingdom_name"=>"Lupus6452", "phylum_id"=>"26660", "phylum_name"=>"Lupus6451", "class_id"=>"26661", "class_name"=>"Lupus6450", "order_id"=>"26662", "order_name"=>"Lupus6449", "family_id"=>"26663", "family_name"=>"Lupus6448", "subfamily_id"=>"26664", "subfamily_name"=>"Lupus6447", "genus_id"=>"26665", "genus_name"=>"Genus1", "species_id"=>"26666", "species_name"=>"Lupus6453"}, listing: nil, notes: nil, taxonomic_position: "1", full_name: "Genus1 lupus6453", name_status: "A", created_at: "2024-01-04 16:47:47", updated_at: "2024-01-04 16:47:47", touched_at: nil, legacy_trade_code: nil, updated_by_id: 3875, created_by_id: 3875, dependents_updated_at: nil, nomenclature_note_en: nil, nomenclature_note_es: nil, nomenclature_note_fr: nil, dependents_updated_by_id: nil, kew_id: nil>
        should eq "S"
        should eq 0
        should include #<TaxonConcept id: 26734, taxonomy_id: 5056, parent_id: 26724, rank_id: 15303, taxon_name_id: 26685, author_year: nil, legacy_id: nil, legacy_type: nil, data: {"class_id" => "26718", "genus_id" => "26722", "order_id" => "26719", "family_id" => "26720", "phylum_id" => "26717", "rank_name" => "SUBSPECIES", "class_name" => "Lupus6498", "genus_name" => "Genus1", "kingdom_id" => "26716", "order_name" => "Lupus6497", "species_id" => "26724", "family_name" => "Lupus6496", "phylum_name" => "Lupus6499", "kingdom_name" => "Lupus6500", "species_name" => "Lupus6502", "subfamily_id" => "26721", "subspecies_id" => "26734", "subfamily_name" => "Lupus6495", "subspecies_name" => "Lupus6510"}, listing: nil, notes: nil, taxonomic_position: "0", full_name: "Genus1 lupus6502 lupus6510", name_status: "A", created_at: "2024-01-04 16:47:50", updated_at: "2024-01-04 16:47:50", touched_at: nil, legacy_trade_code: nil, updated_by_id: 3878, created_by_id: 3878, dependents_updated_at: "2024-01-04 16:47:50", nomenclature_note_en: nil, nomenclature_note_es: nil, nomenclature_note_fr: nil, dependents_updated_by_id: 3878, kew_id: nil>
      when names
        should include #<TaxonConcept id: nil, taxonomy_id: 5058, parent_id: nil, rank_id: 15311, taxon_name_id: 26703, author_year: nil, legacy_id: nil, legacy_type: nil, data: nil, listing: nil, notes: nil, taxonomic_position: "1", full_name: "Lupus6526", name_status: "S", created_at: "2024-01-04 16:47:51", updated_at: "2024-01-04 16:47:51", touched_at: nil, legacy_trade_code: nil, updated_by_id: 3879, created_by_id: 3879, dependents_updated_at: nil, nomenclature_note_en: nil, nomenclature_note_es: nil, nomenclature_note_fr: nil, dependents_updated_by_id: nil, kew_id: nil>
        should be empty
      when distribution
        should eq 4
        should not be nil
        should eq []
        should contain exactly "extinct" and "reintroduced"
        should eq []
        should eq 2
        should be empty
      when legislation
        example at ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:101 (FAILED - 199)
        example at ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:102 (FAILED - 200)
        example at ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:108 (FAILED - 201)
        example at ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:115 (FAILED - 202)
        example at ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:122 (FAILED - 203)
        example at ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:129 (FAILED - 204)
        example at ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:136 (FAILED - 205)
        example at ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:142 (FAILED - 206)
        example at ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:149 (FAILED - 207)
        example at ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:150 (FAILED - 208)
        example at ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:156 (FAILED - 209)
        example at ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:163 (FAILED - 210)
        example at ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:170 (FAILED - 211)
        example at ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:177 (FAILED - 212)
        example at ./spec/models/nomenclature_change/reassignment_transfer_processor_spec.rb:26 (FAILED - 213)
        example at ./spec/models/nomenclature_change/reassignment_transfer_processor_spec.rb:27 (FAILED - 214)
        example at ./spec/models/nomenclature_change/reassignment_transfer_processor_spec.rb:28 (FAILED - 215)
      when common names
        should eq 2
        should be empty
      when references
        should eq 2
        should be empty
      when document citations
        should be empty (PENDING: No reason given)
        when output species had no citations in place
          should eq 1
        when output species had an identical citation in place
          should eq 1
      when shipments
        should eq 2
        should be empty
    output reassignments
      when names
        should include #<TaxonConcept id: nil, taxonomy_id: 5170, parent_id: nil, rank_id: 15609, taxon_name_id: 27318, author_year: nil, legacy_id: nil, legacy_type: nil, data: nil, listing: nil, notes: nil, taxonomic_position: "1", full_name: "Lupus7069", name_status: "S", created_at: "2024-01-04 16:48:22", updated_at: "2024-01-04 16:48:22", touched_at: nil, legacy_trade_code: nil, updated_by_id: 3914, created_by_id: 3914, dependents_updated_at: nil, nomenclature_note_en: nil, nomenclature_note_es: nil, nomenclature_note_fr: nil, dependents_updated_by_id: nil, kew_id: nil>
        should be empty
      when distribution
        should eq 2
        should not be nil
        should eq ["extinct"]
        should eq 1
        should be empty
      when legislation
        example at ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:70 (FAILED - 216)
        example at ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:71 (FAILED - 217)
        example at ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:77 (FAILED - 218)
        example at ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:84 (FAILED - 219)
        example at ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:91 (FAILED - 220)
        example at ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:98 (FAILED - 221)
        example at ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:104 (FAILED - 222)
        example at ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:111 (FAILED - 223)
        example at ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:112 (FAILED - 224)
        example at ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:118 (FAILED - 225)
        example at ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:125 (FAILED - 226)
        example at ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:132 (FAILED - 227)
        example at ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:139 (FAILED - 228)
        example at ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:140 (FAILED - 229)
        example at ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:141 (FAILED - 230)
        example at ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:142 (FAILED - 231)
      when common names
        should eq 2
        should be empty
      when references
        should eq 2
        should be empty
      when document citations
        should eq 1
        should be empty
      when shipments
        should eq 2
        should be empty

NomenclatureChange::Split::Constructor
  inputs
    build_input
      when previously no input in place
        should not be nil
      when previously input in place
        should eq #<NomenclatureChange::Input id: nil, nomenclature_change_id: 812, taxon_concept_id: 27947, note_en: "", created_by_id: 3947, updated_by_id: 3947, created_at: "2024-01-04 16:48:50", updated_at: "2024-01-04 16:48:50", internal_note: "", note_es: "", note_fr: "">
  outputs
    build_outputs
      when previously no outputs in place
        should not eq 0
      when previously output in place
        should eq #<ActiveRecord::Associations::CollectionProxy [#<NomenclatureChange::Output id: nil, nomenclature_change_id: 814, taxon_concept_id: 27964, new_taxon_concept_id: nil, new_parent_id: nil, new_rank_id: nil, new_scientific_name: nil, new_author_year: nil, new_name_status: nil, note_en: "", created_by_id: 3949, updated_by_id: 3949, created_at: "2024-01-04 16:48:50", updated_at: "2024-01-04 16:48:50", internal_note: "", is_primary_output: true, parent_id: 27962, rank_id: 15903, scientific_name: "Genus1 lupus7512", author_year: nil, name_status: "A", note_es: "", note_fr: "", taxonomy_id: nil, tag_list: []>, #<NomenclatureChange::Output id: nil, nomenclature_change_id: 814, taxon_concept_id: 27972, new_taxon_concept_id: nil, new_parent_id: nil, new_rank_id: nil, new_scientific_name: nil, new_author_year: nil, new_name_status: nil, note_en: "", created_by_id: 3949, updated_by_id: 3949, created_at: "2024-01-04 16:48:50", updated_at: "2024-01-04 16:48:50", internal_note: "", is_primary_output: true, parent_id: 27971, rank_id: 15903, scientific_name: "Genus2 lupus7519", author_year: nil, name_status: "A", note_es: "", note_fr: "", taxonomy_id: nil, tag_list: []>]>
  reassignments
    build_input_and_output_notes
      when previously no notes in place
        should not be blank
        should not be blank
        when output = input
          should be blank
      when previously notes in place
        should eq "blah"
        should eq "blah"
    build_parent_reassignments
      when previously no reassignments in place
        when no children
          should eq 0
        when children
          should eq 2
      when previously reassignments in place
        should eq #<ActiveRecord::Associations::CollectionProxy [#<NomenclatureChange::ParentReassignment id: 500, nomenclature_change_input_id: 875, type: "NomenclatureChange::ParentReassignment", reassignable_type: "TaxonConcept", reassignable_id: nil, note_en: nil, created_by_id: 3957, updated_by_id: 3957, created_at: "2024-01-04 16:48:56", updated_at: "2024-01-04 16:48:56", note_es: nil, note_fr: nil, internal_note: nil>]>
      when output = input
        should eq [#<NomenclatureChange::Output id: nil, nomenclature_change_id: 823, taxon_concept_id: 28134, new_taxon_concept_id: nil, new_parent_id: nil, new_rank_id: nil, new_scientific_name: nil, new_author_year: nil, new_name_status: nil, note_en: "", created_by_id: 3958, updated_by_id: 3958, created_at: "2024-01-04 16:48:57", updated_at: "2024-01-04 16:48:57", internal_note: "", is_primary_output: true, parent_id: 28133, rank_id: 15970, scientific_name: "Lupus7664 lupus7663", author_year: nil, name_status: "A", note_es: "", note_fr: "", taxonomy_id: nil, tag_list: []>]
      when previously reassignments in place
        should eq #<ActiveRecord::Associations::CollectionProxy [#<NomenclatureChange::ParentReassignment id: 503, nomenclature_change_input_id: 878, type: "NomenclatureChange::ParentReassignment", reassignable_type: "TaxonConcept", reassignable_id: nil, note_en: nil, created_by_id: 3959, updated_by_id: 3959, created_at: "2024-01-04 16:48:57", updated_at: "2024-01-04 16:48:57", note_es: nil, note_fr: nil, internal_note: nil>]>
    build_name_reassignments
      when previously no reassignments in place
        when no names
          should eq 0
        when names
          should eq 2
      when previously reassignments in place
        should eq #<ActiveRecord::Associations::CollectionProxy [#<NomenclatureChange::NameReassignment id: 506, nomenclature_change_input_id: 882, type: "NomenclatureChange::NameReassignment", reassignable_type: "TaxonRelationship", reassignable_id: nil, note_en: nil, created_by_id: 3962, updated_by_id: 3962, created_at: "2024-01-04 16:48:59", updated_at: "2024-01-04 16:48:59", note_es: nil, note_fr: nil, internal_note: nil>]>
      when output = input
        should eq [#<NomenclatureChange::Output id: nil, nomenclature_change_id: 828, taxon_concept_id: 28229, new_taxon_concept_id: nil, new_parent_id: nil, new_rank_id: nil, new_scientific_name: nil, new_author_year: nil, new_name_status: nil, note_en: "", created_by_id: 3963, updated_by_id: 3963, created_at: "2024-01-04 16:49:00", updated_at: "2024-01-04 16:49:00", internal_note: "", is_primary_output: true, parent_id: 28228, rank_id: 16011, scientific_name: "Lupus7750 lupus7749", author_year: nil, name_status: "A", note_es: "", note_fr: "", taxonomy_id: nil, tag_list: []>]
    build_distribution_reassignments
      when previously no reassignments in place
        when no distibutions
          should eq 0
        when distributions
          should eq 2
      when previously reassignments in place
        should eq #<ActiveRecord::Associations::CollectionProxy [#<NomenclatureChange::DistributionReassignment id: 511, nomenclature_change_input_id: 887, type: "NomenclatureChange::DistributionReassignment", reassignable_type: "Distribution", reassignable_id: nil, note_en: nil, created_by_id: 3966, updated_by_id: 3966, created_at: "2024-01-04 16:49:02", updated_at: "2024-01-04 16:49:02", note_es: nil, note_fr: nil, internal_note: nil>]>
    build_documents_reassignments
      when previously no reassignments in place
        when no document citations
          should eq 0
        when document citations
          should eq 2
      when geo_entity citations mismatch distribution
        should not include 1141
    build_legislation_reassignments
      when previously no reassignments in place
        when no CITES listings
          should eq 0
        when CITES listings
          should eq 1
      when previously reassignments in place
        should eq #<ActiveRecord::Associations::CollectionProxy [#<NomenclatureChange::LegislationReassignment id: 519, nomenclature_change_input_id: 894, type: "NomenclatureChange::LegislationReassignment", reassignable_type: "TaxonConcept", reassignable_id: nil, note_en: nil, created_by_id: 3972, updated_by_id: 3972, created_at: "2024-01-04 16:49:07", updated_at: "2024-01-04 16:49:07", note_es: nil, note_fr: nil, internal_note: nil>]>
    build_common_names_reassignments
      when previously no reassignments in place
        when no common names
          should eq 0
        when common names
          should eq 1
      when previously reassignments in place
        should eq #<ActiveRecord::Associations::CollectionProxy [#<NomenclatureChange::Reassignment id: 521, nomenclature_change_input_id: 898, type: "NomenclatureChange::Reassignment", reassignable_type: "TaxonConcept", reassignable_id: nil, note_en: nil, created_by_id: 3975, updated_by_id: 3975, created_at: "2024-01-04 16:49:09", updated_at: "2024-01-04 16:49:09", note_es: nil, note_fr: nil, internal_note: nil>]>
    build_references_reassignments
      when previously no reassignments in place
        when no references
          should eq 0
        when references
          should eq 1
      when previously reassignments in place
        should eq #<ActiveRecord::Associations::CollectionProxy [#<NomenclatureChange::Reassignment id: 523, nomenclature_change_input_id: 902, type: "NomenclatureChange::Reassignment", reassignable_type: "TaxonConcept", reassignable_id: nil, note_en: nil, created_by_id: 3978, updated_by_id: 3978, created_at: "2024-01-04 16:49:11", updated_at: "2024-01-04 16:49:11", note_es: nil, note_fr: nil, internal_note: nil>]>

NomenclatureChange::OutputTaxonConceptProcessor
  run
    when output is existing taxon
      should be nil
    when output is new taxon
      should eq "Errorus fatalus"
    when output is existing taxon with new status
      should be nil
      should eq "A"
    when output is existing taxon with new name
      should eq "Errorus fatalus fatalus"
      should eq "A"
      should eq "Errorus lolcatus"

NomenclatureChange::Split::Processor
  run
    when outputs are existing taxa
      should not change #count
      should not change #full_name
      should not change #full_name
      relationships and trade
        should be is synonym
        should include #<TaxonConcept id: nil, taxonomy_id: 5367, parent_id: 28736, rank_id: 16237, taxon_name_id: 28689, author_year: nil, legacy_id: nil, legacy_type: nil, data: {"rank_name" => "SPECIES", "kingdom_id" => "28730", "kingdom_name" => "Lupus8199", "phylum_id" => "28731", "phylum_name" => "Lupus8198", "class_id" => "28732", "class_name" => "Lupus8197", "order_id" => "28733", "order_name" => "Lupus8196", "family_id" => "28734", "family_name" => "Lupus8195", "subfamily_id" => "28735", "subfamily_name" => "Lupus8194", "genus_id" => "28736", "genus_name" => "Genus1", "species_id" => "28738", "species_name" => "Lupus8201"}, listing: nil, notes: nil, taxonomic_position: "1", full_name: "Genus1 lupus8201", name_status: "A", created_at: "2024-01-04 16:49:19", updated_at: "2024-01-04 16:49:19", touched_at: nil, legacy_trade_code: nil, updated_by_id: 3992, created_by_id: 3992, dependents_updated_at: nil, nomenclature_note_en: nil, nomenclature_note_es: nil, nomenclature_note_fr: nil, dependents_updated_by_id: nil, kew_id: nil>
        should be empty
        should include #<Trade::Shipment id: nil, source_id: 3369, unit_id: 3367, purpose_id: 3368, term_id: 3366, quantity: #<BigDecimal:40145061b8,'0.1E1',9(27)>, appendix: "I", trade_annual_report_upload_id: nil, exporter_id: 2685, importer_id: 2684, country_of_origin_id: nil, reported_by_exporter: true, taxon_concept_id: 28771, year: 2013, created_at: "2024-01-04 16:49:21", updated_at: "2024-01-04 16:49:21", sandbox_id: nil, reported_taxon_concept_id: 28771, import_permit_number: nil, export_permit_number: nil, origin_permit_number: nil, legacy_shipment_number: nil, updated_by_id: 3994, created_by_id: 3994, import_permits_ids: nil, export_permits_ids: nil, origin_permits_ids: nil, epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
        should include #<Trade::Shipment id: nil, source_id: 3373, unit_id: 3371, purpose_id: 3372, term_id: 3370, quantity: #<BigDecimal:401ded1978,'0.1E1',9(27)>, appendix: "I", trade_annual_report_upload_id: nil, exporter_id: 2687, importer_id: 2686, country_of_origin_id: nil, reported_by_exporter: true, taxon_concept_id: 28788, year: 2013, created_at: "2024-01-04 16:49:22", updated_at: "2024-01-04 16:49:22", sandbox_id: nil, reported_taxon_concept_id: 28788, import_permit_number: nil, export_permit_number: nil, origin_permit_number: nil, legacy_shipment_number: nil, updated_by_id: 3995, created_by_id: 3995, import_permits_ids: nil, export_permits_ids: nil, origin_permits_ids: nil, epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
    when output is new taxon
      should change #count by 1
      relationships and trade
        should be is synonym
        should include #<TaxonConcept id: 28848, taxonomy_id: 5379, parent_id: 28847, rank_id: 16285, taxon_name_id: 28799, author_year: nil, legacy_id: nil, legacy_type: nil, data: {"class_id" => "28843", "genus_id" => "28847", "order_id" => "28844", "family_id" => "28845", "phylum_id" => "28842", "rank_name" => "SPECIES", "class_name" => "Lupus8293", "genus_name" => "Errorus", "kingdom_id" => "28841", "order_name" => "Lupus8292", "species_id" => "28848", "family_name" => "Lupus8291", "phylum_name" => "Lupus8294", "kingdom_name" => "Lupus8295", "species_name" => "Fatalus", "subfamily_id" => "28846", "subfamily_name" => "Lupus8290"}, listing: nil, notes: nil, taxonomic_position: "0", full_name: "Errorus fatalus", name_status: "A", created_at: "2024-01-04 16:49:25", updated_at: "2024-01-04 16:49:25", touched_at: nil, legacy_trade_code: nil, updated_by_id: 3998, created_by_id: 3998, dependents_updated_at: nil, nomenclature_note_en: " ", nomenclature_note_es: " ", nomenclature_note_fr: " ", dependents_updated_by_id: nil, kew_id: nil>
        should be empty
        should include #<Trade::Shipment id: nil, source_id: 3393, unit_id: 3391, purpose_id: 3392, term_id: 3390, quantity: #<BigDecimal:40168b5370,'0.1E1',9(27)>, appendix: "I", trade_annual_report_upload_id: nil, exporter_id: 2697, importer_id: 2696, country_of_origin_id: nil, reported_by_exporter: true, taxon_concept_id: 28873, year: 2013, created_at: "2024-01-04 16:49:26", updated_at: "2024-01-04 16:49:26", sandbox_id: nil, reported_taxon_concept_id: 28873, import_permit_number: nil, export_permit_number: nil, origin_permit_number: nil, legacy_shipment_number: nil, updated_by_id: 4000, created_by_id: 4000, import_permits_ids: nil, export_permits_ids: nil, origin_permits_ids: nil, epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
        should include #<Trade::Shipment id: nil, source_id: 3397, unit_id: 3395, purpose_id: 3396, term_id: 3394, quantity: #<BigDecimal:401f2bedc8,'0.1E1',9(27)>, appendix: "I", trade_annual_report_upload_id: nil, exporter_id: 2699, importer_id: 2698, country_of_origin_id: nil, reported_by_exporter: true, taxon_concept_id: 28890, year: 2013, created_at: "2024-01-04 16:49:27", updated_at: "2024-01-04 16:49:27", sandbox_id: nil, reported_taxon_concept_id: 28890, import_permit_number: nil, export_permit_number: nil, origin_permit_number: nil, legacy_shipment_number: nil, updated_by_id: 4001, created_by_id: 4001, import_permits_ids: nil, export_permits_ids: nil, origin_permits_ids: nil, epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
    when output is existing taxon with new status
      should not change #count
      should not change #full_name
      should not change #full_name
      relationships and trade
        should be is synonym
        should include #<TaxonConcept id: nil, taxonomy_id: 5395, parent_id: 28974, rank_id: 16349, taxon_name_id: 28931, author_year: nil, legacy_id: nil, legacy_type: nil, data: {"rank_name" => "SPECIES", "kingdom_id" => "28968", "kingdom_name" => "Lupus8399", "phylum_id" => "28969", "phylum_name" => "Lupus8398", "class_id" => "28970", "class_name" => "Lupus8397", "order_id" => "28971", "order_name" => "Lupus8396", "family_id" => "28972", "family_name" => "Lupus8395", "subfamily_id" => "28973", "subfamily_name" => "Lupus8394", "genus_id" => "28974", "genus_name" => "Genus1", "species_id" => "28976", "species_name" => "Lupus8401"}, listing: nil, notes: nil, taxonomic_position: "1", full_name: "Genus1 lupus8401", name_status: "A", created_at: "2024-01-04 16:49:31", updated_at: "2024-01-04 16:49:31", touched_at: nil, legacy_trade_code: nil, updated_by_id: 4006, created_by_id: 4006, dependents_updated_at: nil, nomenclature_note_en: nil, nomenclature_note_es: nil, nomenclature_note_fr: nil, dependents_updated_by_id: nil, kew_id: nil>
        should include #<Trade::Shipment id: nil, source_id: 3421, unit_id: 3419, purpose_id: 3420, term_id: 3418, quantity: #<BigDecimal:401dd298c8,'0.1E1',9(27)>, appendix: "I", trade_annual_report_upload_id: nil, exporter_id: 2711, importer_id: 2710, country_of_origin_id: nil, reported_by_exporter: true, taxon_concept_id: 28992, year: 2013, created_at: "2024-01-04 16:49:32", updated_at: "2024-01-04 16:49:32", sandbox_id: nil, reported_taxon_concept_id: 28992, import_permit_number: nil, export_permit_number: nil, origin_permit_number: nil, legacy_shipment_number: nil, updated_by_id: 4007, created_by_id: 4007, import_permits_ids: nil, export_permits_ids: nil, origin_permits_ids: nil, epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
    when output is existing taxon with new name
      should change #count by 1
      should not change #full_name
      should not change #full_name
      relationships and trade
        should be is synonym
        should eq #<TaxonConcept id: nil, taxonomy_id: 5407, parent_id: 29092, rank_id: 16394, taxon_name_id: 29044, author_year: nil, legacy_id: nil, legacy_type: nil, data: {"rank_name"=>"GENUS", "kingdom_id"=>"29087", "kingdom_name"=>"Lupus8492", "phylum_id"=>"29088", "phylum_name"=>"Lupus8491", "class_id"=>"29089", "class_name"=>"Lupus8490", "order_id"=>"29090", "order_name"=>"Lupus8489", "family_id"=>"29091", "family_name"=>"Lupus8488", "subfamily_id"=>"29092", "subfamily_name"=>"Lupus8487", "genus_id"=>"29093", "genus_name"=>"Genus1"}, listing: nil, notes: nil, taxonomic_position: "1", full_name: "Genus1", name_status: "A", created_at: "2024-01-04 16:49:37", updated_at: "2024-01-04 16:49:37", touched_at: nil, legacy_trade_code: nil, updated_by_id: 4012, created_by_id: 4012, dependents_updated_at: nil, nomenclature_note_en: nil, nomenclature_note_es: nil, nomenclature_note_fr: nil, dependents_updated_by_id: nil, kew_id: nil>
        should include #<TaxonConcept id: 29124, taxonomy_id: 5409, parent_id: 29121, rank_id: 16410, taxon_name_id: 29081, author_year: nil, legacy_id: nil, legacy_type: nil, data: {"class_id" => "29117", "genus_id" => "29121", "order_id" => "29118", "family_id" => "29119", "phylum_id" => "29116", "rank_name" => "SPECIES", "class_name" => "Lupus8512", "genus_name" => "Errorus", "kingdom_id" => "29115", "order_name" => "Lupus8511", "species_id" => "29124", "family_name" => "Lupus8510", "phylum_name" => "Lupus8513", "kingdom_name" => "Lupus8514", "species_name" => "Lolcatus", "subfamily_id" => "29120", "subfamily_name" => "Lupus8509"}, listing: nil, notes: nil, taxonomic_position: "0", full_name: "Errorus lolcatus", name_status: "A", created_at: "2024-01-04 16:49:38", updated_at: "2024-01-04 16:49:38", touched_at: nil, legacy_trade_code: nil, updated_by_id: 4013, created_by_id: 4013, dependents_updated_at: nil, nomenclature_note_en: " ", nomenclature_note_es: " ", nomenclature_note_fr: " ", dependents_updated_by_id: nil, kew_id: nil>
        should include #<Trade::Shipment id: nil, source_id: 3449, unit_id: 3447, purpose_id: 3448, term_id: 3446, quantity: #<BigDecimal:401d69dfe0,'0.1E1',9(27)>, appendix: "I", trade_annual_report_upload_id: nil, exporter_id: 2725, importer_id: 2724, country_of_origin_id: nil, reported_by_exporter: true, taxon_concept_id: 29132, year: 2013, created_at: "2024-01-04 16:49:39", updated_at: "2024-01-04 16:49:39", sandbox_id: nil, reported_taxon_concept_id: 29132, import_permit_number: nil, export_permit_number: nil, origin_permit_number: nil, legacy_shipment_number: nil, updated_by_id: 4014, created_by_id: 4014, import_permits_ids: nil, export_permits_ids: nil, origin_permits_ids: nil, epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
    when input with children that don't change name
      input / output species has public nomenclature note set
      child of input / output species does not inherit public nomenclature note
      input / output species has internal nomenclature note set
      child of input / output species does not inherit internal nomenclature note
      child of input / output species does not have legislation nomenclature note
    when input with children that change name
      input species has public nomenclature note set
      child of input species inherits public nomenclature note
      input species has internal nomenclature note set
      child of input species inherits internal nomenclature note
      output species has public nomenclature note set
      child of output species inherits public nomenclature note from output
      output species has internal nomenclature note set
      child of output species inherits internal nomenclature note from output
      output species child has listing changes from input species child transferred
      output species child has legislation nomenclature note copied from output species
      original output species child retains higher taxa intact
      new output species child has higher taxa set correctly
      original input species child retains higher taxa intact
      original input species child is a synonym
  when input is genus and parent ressignments occur
    input genus child is a synonym
    input genus child is a synonym of output genus child
    input genus child's child is a synonym
    input genus child's child's name did not change
    output genus should have child with resolved name
    output genus child should have child with resolved name
    output genus child should have input genus citations
    input genus child has no quotas
    input genus child's accepted name has 1 quota
    input genus child's document citations retained
  summary
    should be a kind of Array

NomenclatureChange::Split
  validate
    when required inputs missing
      when inputs
        should have 1 errors on :input
      when submitting
        should have 1 errors on :input
    when required outputs missing
      when outputs
        should have 1 errors on :outputs
      when submitting
        should have 1 errors on :outputs
    when output has different rank than input
      should have 1 errors on :outputs

NomenclatureChange::StatusSwap::Constructor
  build_primary_output
    when previously no primary output in place
      should not be nil
    when previously primary output in place
      should eq #<NomenclatureChange::Output id: 1288, nomenclature_change_id: 909, taxon_concept_id: 29819, new_taxon_concept_id: nil, new_parent_id: nil, new_rank_id: nil, new_scientific_name: nil, new_author_year: nil, new_name_status: "S", note_en: "", created_by_id: 4053, updated_by_id: 4053, created_at: "2024-01-04 16:50:23", updated_at: "2024-01-04 16:50:23", internal_note: "", is_primary_output: true, parent_id: 29818, rank_id: 16699, scientific_name: "Lupus9074 lupus9073", author_year: nil, name_status: "A", note_es: "", note_fr: "", taxonomy_id: nil, tag_list: []>
  build_secondary_output
    downgrade
      when previously no secondary output in place
        should not be nil
      when previously secondary output in place
        should eq #<NomenclatureChange::Output id: 1292, nomenclature_change_id: 911, taxon_concept_id: 29860, new_taxon_concept_id: nil, new_parent_id: 29867, new_rank_id: nil, new_scientific_name: nil, new_author_year: nil, new_name_status: "A", note_en: "public", created_by_id: 4055, updated_by_id: 4055, created_at: "2024-01-04 16:50:24", updated_at: "2024-01-04 16:50:24", internal_note: "internal", is_primary_output: false, parent_id: nil, rank_id: 16715, scientific_name: "Confundus totalus", author_year: nil, name_status: "S", note_es: "", note_fr: "", taxonomy_id: nil, tag_list: []>
  build_secondary_output_note
    when previously no notes in place
      should be blank
      should not be blank
    when previously notes in place
      should eq "blah"
      should eq "blah"

NomenclatureChange::StatusSwap::Processor
  run
    from accepted name
      should be is synonym
      should eq #<TaxonConcept id: nil, taxonomy_id: 5520, parent_id: 30004, rank_id: 16763, taxon_name_id: 29924, author_year: nil, legacy_id: nil, legacy_type: nil, data: {"rank_name"=>"GENUS", "kingdom_id"=>"29999", "kingdom_name"=>"Lupus9252", "phylum_id"=>"30000", "phylum_name"=>"Lupus9251", "class_id"=>"30001", "class_name"=>"Lupus9250", "order_id"=>"30002", "order_name"=>"Lupus9249", "family_id"=>"30003", "family_name"=>"Lupus9248", "subfamily_id"=>"30004", "subfamily_name"=>"Lupus9247", "genus_id"=>"30005", "genus_name"=>"Lupus9246"}, listing: nil, notes: nil, taxonomic_position: "1", full_name: "Lupus9246", name_status: "A", created_at: "2024-01-04 16:50:30", updated_at: "2024-01-04 16:50:30", touched_at: nil, legacy_trade_code: nil, updated_by_id: 4062, created_by_id: 4062, dependents_updated_at: nil, nomenclature_note_en: nil, nomenclature_note_es: nil, nomenclature_note_fr: nil, dependents_updated_by_id: nil, kew_id: nil>
      should eq "A"
      should include #<TaxonConcept id: 30063, taxonomy_id: 5524, parent_id: 30070, rank_id: 16786, taxon_name_id: 30001, author_year: nil, legacy_id: nil, legacy_type: nil, data: {"rank_name" => "SPECIES", "kingdom_id" => "30064", "kingdom_name" => "Lupus9311", "phylum_id" => "30065", "phylum_name" => "Lupus9310", "class_id" => "30066", "class_name" => "Lupus9309", "order_id" => "30067", "order_name" => "Lupus9308", "family_id" => "30068", "family_name" => "Lupus9307", "subfamily_id" => "30069", "subfamily_name" => "Lupus9306", "genus_id" => "30070", "genus_name" => "Confundus", "species_id" => "30063", "species_name" => "Totalus"}, listing: nil, notes: nil, taxonomic_position: "1", full_name: "Confundus totalus", name_status: "A", created_at: "2024-01-04 16:50:32", updated_at: "2024-01-04 16:50:32", touched_at: nil, legacy_trade_code: nil, updated_by_id: 4064, created_by_id: 4064, dependents_updated_at: nil, nomenclature_note_en: " public", nomenclature_note_es: " ", nomenclature_note_fr: " ", dependents_updated_by_id: nil, kew_id: nil>
      public nomenclature note is set
      internal nomenclature note is set
  summary
    should be a kind of Array

NomenclatureChange::StatusToAccepted::Processor
  run
    from trade name
      should eq "A"
      should be empty
      should include #<Trade::Shipment id: nil, source_id: 3615, unit_id: 3613, purpose_id: 3614, term_id: 3612, quantity: #<BigDecimal:401ec3a3d0,'0.1E1',9(27)>, appendix: "I", trade_annual_report_upload_id: nil, exporter_id: 2813, importer_id: 2812, country_of_origin_id: nil, reported_by_exporter: true, taxon_concept_id: 30182, year: 2013, created_at: "2024-01-04 16:50:38", updated_at: "2024-01-04 16:50:38", sandbox_id: nil, reported_taxon_concept_id: 30183, import_permit_number: nil, export_permit_number: nil, origin_permit_number: nil, legacy_shipment_number: nil, updated_by_id: 4071, created_by_id: 4071, import_permits_ids: nil, export_permits_ids: nil, origin_permits_ids: nil, epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
      should include #<Trade::Shipment id: nil, source_id: 3619, unit_id: 3617, purpose_id: 3618, term_id: 3616, quantity: #<BigDecimal:401eb4a240,'0.1E1',9(27)>, appendix: "I", trade_annual_report_upload_id: nil, exporter_id: 2815, importer_id: 2814, country_of_origin_id: nil, reported_by_exporter: true, taxon_concept_id: 30198, year: 2013, created_at: "2024-01-04 16:50:38", updated_at: "2024-01-04 16:50:38", sandbox_id: nil, reported_taxon_concept_id: 30199, import_permit_number: nil, export_permit_number: nil, origin_permit_number: nil, legacy_shipment_number: nil, updated_by_id: 4072, created_by_id: 4072, import_permits_ids: nil, export_permits_ids: nil, origin_permits_ids: nil, epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
      should be empty

NomenclatureChange::StatusToAccepted
  validate
    when required primary output missing
      when primary_output
        should have 1 error on :primary_output
      when submitting
        should have 1 error on :primary_output
    when primary output has invalid name status
      when primary_output
        should have 1 error on :primary_output
    when primary output has valid name status
      when primary_output
        should have 0 errors on :primary_output

NomenclatureChange::StatusToSynonym::Constructor
  build_input
    when previously no input in place
      should not be nil
    when previously input in place
      should eq #<NomenclatureChange::Input id: 980, nomenclature_change_id: 929, taxon_concept_id: 30240, note_en: "", created_by_id: 4081, updated_by_id: 4081, created_at: "2024-01-04 16:50:40", updated_at: "2024-01-04 16:50:40", internal_note: "", note_es: "", note_fr: "">

NomenclatureChange::OutputTaxonConceptProcessor
  run
    when output is existing taxon
      should be nil

NomenclatureChange::StatusToSynonym::Processor
  run
    from N name
      should be is synonym
      should eq #<TaxonConcept id: nil, taxonomy_id: 5556, parent_id: 30286, rank_id: 16885, taxon_name_id: 30223, author_year: nil, legacy_id: nil, legacy_type: nil, data: {"rank_name"=>"GENUS", "kingdom_id"=>"30281", "kingdom_name"=>"Lupus9512", "phylum_id"=>"30282", "phylum_name"=>"Lupus9511", "class_id"=>"30283", "class_name"=>"Lupus9510", "order_id"=>"30284", "order_name"=>"Lupus9509", "family_id"=>"30285", "family_name"=>"Lupus9508", "subfamily_id"=>"30286", "subfamily_name"=>"Lupus9507", "genus_id"=>"30287", "genus_name"=>"Lupus9506"}, listing: nil, notes: nil, taxonomic_position: "1", full_name: "Lupus9506", name_status: "A", created_at: "2024-01-04 16:50:42", updated_at: "2024-01-04 16:50:42", touched_at: nil, legacy_trade_code: nil, updated_by_id: 4086, created_by_id: 4086, dependents_updated_at: nil, nomenclature_note_en: nil, nomenclature_note_es: nil, nomenclature_note_fr: nil, dependents_updated_by_id: nil, kew_id: nil>
      should include #<TaxonConcept id: 30312, taxonomy_id: 5558, parent_id: 30311, rank_id: 16900, taxon_name_id: 30248, author_year: nil, legacy_id: nil, legacy_type: nil, data: {"class_id" => "30307", "genus_id" => "30311", "order_id" => "30308", "family_id" => "30309", "phylum_id" => "30306", "rank_name" => "SPECIES", "class_name" => "Lupus9535", "genus_name" => "Lupus9531", "kingdom_id" => "30305", "order_name" => "Lupus9534", "species_id" => "30312", "family_name" => "Lupus9533", "phylum_name" => "Lupus9536", "kingdom_name" => "Lupus9537", "species_name" => "Lupus9530", "subfamily_id" => "30310", "subfamily_name" => "Lupus9532"}, listing: nil, notes: nil, taxonomic_position: "1", full_name: "Lupus9531 lupus9530", name_status: "A", created_at: "2024-01-04 16:50:43", updated_at: "2024-01-04 16:50:43", touched_at: nil, legacy_trade_code: nil, updated_by_id: 4087, created_by_id: 4087, dependents_updated_at: nil, nomenclature_note_en: nil, nomenclature_note_es: nil, nomenclature_note_fr: nil, dependents_updated_by_id: nil, kew_id: nil>
      should be empty
      should include #<Trade::Shipment id: nil, source_id: 3643, unit_id: 3641, purpose_id: 3642, term_id: 3640, quantity: #<BigDecimal:401a152958,'0.1E1',9(27)>, appendix: "I", trade_annual_report_upload_id: nil, exporter_id: 2827, importer_id: 2826, country_of_origin_id: nil, reported_by_exporter: true, taxon_concept_id: 30336, year: 2013, created_at: "2024-01-04 16:50:45", updated_at: "2024-01-04 16:50:45", sandbox_id: nil, reported_taxon_concept_id: 30336, import_permit_number: nil, export_permit_number: nil, origin_permit_number: nil, legacy_shipment_number: nil, updated_by_id: 4089, created_by_id: 4089, import_permits_ids: nil, export_permits_ids: nil, origin_permits_ids: nil, epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
      should include #<Trade::Shipment id: nil, source_id: 3647, unit_id: 3645, purpose_id: 3646, term_id: 3644, quantity: #<BigDecimal:4016ab9540,'0.1E1',9(27)>, appendix: "I", trade_annual_report_upload_id: nil, exporter_id: 2829, importer_id: 2828, country_of_origin_id: nil, reported_by_exporter: true, taxon_concept_id: 30352, year: 2013, created_at: "2024-01-04 16:50:46", updated_at: "2024-01-04 16:50:46", sandbox_id: nil, reported_taxon_concept_id: 30352, import_permit_number: nil, export_permit_number: nil, origin_permit_number: nil, legacy_shipment_number: nil, updated_by_id: 4090, created_by_id: 4090, import_permits_ids: nil, export_permits_ids: nil, origin_permits_ids: nil, epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
    from trade name
      should be is synonym
      should include #<TaxonConcept id: 30377, taxonomy_id: 5568, parent_id: 30376, rank_id: 16933, taxon_name_id: 30317, author_year: nil, legacy_id: nil, legacy_type: nil, data: {"class_id" => "30372", "genus_id" => "30376", "order_id" => "30373", "family_id" => "30374", "phylum_id" => "30371", "rank_name" => "SPECIES", "class_name" => "Lupus9599", "genus_name" => "Lupus9595", "kingdom_id" => "30370", "order_name" => "Lupus9598", "species_id" => "30377", "family_name" => "Lupus9597", "phylum_name" => "Lupus9600", "kingdom_name" => "Lupus9601", "species_name" => "Lupus9594", "subfamily_id" => "30375", "subfamily_name" => "Lupus9596"}, listing: nil, notes: nil, taxonomic_position: "1", full_name: "Lupus9595 lupus9594", name_status: "A", created_at: "2024-01-04 16:50:47", updated_at: "2024-01-04 16:50:47", touched_at: nil, legacy_trade_code: nil, updated_by_id: 4092, created_by_id: 4092, dependents_updated_at: "2024-01-04 16:50:47", nomenclature_note_en: nil, nomenclature_note_es: nil, nomenclature_note_fr: nil, dependents_updated_by_id: 4092, kew_id: nil>
      should be empty
      should be empty
      should include #<Trade::Shipment id: nil, source_id: 3667, unit_id: 3665, purpose_id: 3666, term_id: 3664, quantity: #<BigDecimal:40202accd0,'0.1E1',9(27)>, appendix: "I", trade_annual_report_upload_id: nil, exporter_id: 2839, importer_id: 2838, country_of_origin_id: nil, reported_by_exporter: true, taxon_concept_id: 30404, year: 2013, created_at: "2024-01-04 16:50:49", updated_at: "2024-01-04 16:50:49", sandbox_id: nil, reported_taxon_concept_id: 30405, import_permit_number: nil, export_permit_number: nil, origin_permit_number: nil, legacy_shipment_number: nil, updated_by_id: 4095, created_by_id: 4095, import_permits_ids: nil, export_permits_ids: nil, origin_permits_ids: nil, epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
      should include #<Trade::Shipment id: nil, source_id: 3671, unit_id: 3669, purpose_id: 3670, term_id: 3668, quantity: #<BigDecimal:401b5cb038,'0.1E1',9(27)>, appendix: "I", trade_annual_report_upload_id: nil, exporter_id: 2841, importer_id: 2840, country_of_origin_id: nil, reported_by_exporter: true, taxon_concept_id: 30413, year: 2013, created_at: "2024-01-04 16:50:50", updated_at: "2024-01-04 16:50:50", sandbox_id: nil, reported_taxon_concept_id: 30414, import_permit_number: nil, export_permit_number: nil, origin_permit_number: nil, legacy_shipment_number: nil, updated_by_id: 4096, created_by_id: 4096, import_permits_ids: nil, export_permits_ids: nil, origin_permits_ids: nil, epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>

NomenclatureChange::StatusToSynonym
  validate
    when required primary output missing
      when primary_output
        should have 1 error on :primary_output
      when submitting
        should have 1 error on :primary_output
    when primary output has invalid name status
      when primary_output
        should have 1 error on :primary_output
    when primary output has valid name status
      when primary_output
        should have 0 errors on :primary_output
    when required secondary output missing
      when relay
        should have 1 error on :secondary_output
      when submitting
        should have 1 error on :secondary_output

NomenclatureChange
  validate
    when status not specified
      should not be valid
    when previous status=submitted
      should not be valid
    when previous status=closed
      should not be valid
  submitting?
    when new object with status=submitted
      should be submitting
    when updating object with status new -> submitted
      should be submitting
    when updating object with status submitted -> closed
      should not be submitting
    when updating object with status closed -> submitted
      should not be submitting

PresetTag
  create
    when valid
      should be valid
    when name missing
      should be invalid
      should have 1 error on :name
    when model (type) incorrect
      should be invalid
      should have 1 error on :model

Purpose
  destroy
    when no dependent objects attached
      should be truthy
    when dependent objects attached
      when CITES suspension
        should be falsey
      when shipments
        should be falsey

Quota
  create
    downloads cache should be populated
      should not be empty
  destroy
    downloads cache should be cleared
      should be empty
  validations
    create
      doesn't save a quota without a unit (PENDING: No reason given)
      when valid
        should be valid
      when quota missing
        should be invalid
        should have 2 error on :quota
      when publication date missing
        should be invalid
        should have 1 error on :publication_date
      when start date greater than end date
        should be invalid
        should have 1 error on :start_date

Rank
  parent_rank_lower_bound
    obligatory rank
      should == "0"
    optional rank
      should == "5"
  create
    when taxonomic position malformed
      should have 1 error on :taxonomic_position
  destroy
    when no dependent objects attached
      should be truthy
    when dependent objects attached
      should be falsey
    when protected name
      should be falsey
  in_range
    when no bounds specified
      should == ["KINGDOM", "PHYLUM", "CLASS", "ORDER", "FAMILY", "SUBFAMILY", "GENUS", "SPECIES", "SUBSPECIES", "VARIETY"]
    when lower bound specified
      should == ["KINGDOM", "PHYLUM", "CLASS"]
    when lower and upper bound specified
      should == ["FAMILY", "SUBFAMILY", "GENUS"]

Sapi::GeoIP
  resolve
    should == "Bogotá"

Source
  destroy
    when no dependent objects attached
      should be truthy
    when dependent objects attached
      when CITES suspension
        should be falsey
      when CITES quota
        should be falsey
      when shipments
        should be falsey

Species::CommonNamesExport
  path
    should == "public/downloads/common_names/"
  export
    when no results
      should be falsey
    when results
      when file not cached
sh: 1: psql: not found
        example at ./spec/models/species/common_names_export_spec.rb:32 (FAILED - 232)
      when file cached
        example at ./spec/models/species/common_names_export_spec.rb:38

Species::DocumentsExport
  path
    should == "public/downloads/documents/"
  export
    when no results
      when file not cached it should not be generated
    when results
      when file not cached it should be generated (PENDING: No reason given)
      when file cached it should not be generated (PENDING: No reason given)

Species::TaxonConceptPrefixMatcher
Procedure: taxonomy
  results
    when searching for hybrid
      when trade visibility
        example at ./spec/models/species/hybrid_prefix_matcher_spec.rb:14 (FAILED - 233)
      when trade internal visibility
        example at ./spec/models/species/hybrid_prefix_matcher_spec.rb:24 (FAILED - 234)
      when speciesplus visibility
        example at ./spec/models/species/hybrid_prefix_matcher_spec.rb:33 (FAILED - 235)

Species::Search
Procedure: taxonomy
  results
    when searching by scientific name
      when subspecies never listed
        example at ./spec/models/species/invisible_subspecies_search_spec.rb:8 (FAILED - 236)
        example at ./spec/models/species/invisible_subspecies_search_spec.rb:9 (FAILED - 237)

Species::ListingsExport
Procedure: taxonomy
  path
    example at ./spec/models/species/listings_export_spec.rb:10 (FAILED - 238)
  export
    when no results
      example at ./spec/models/species/listings_export_spec.rb:21 (FAILED - 239)
    when results
      when file not cached
        example at ./spec/models/species/listings_export_spec.rb:42 (FAILED - 240)
      when file cached
        example at ./spec/models/species/listings_export_spec.rb:48 (FAILED - 241)
  query
    when CITES
      when Appendix I
        example at ./spec/models/species/listings_export_spec.rb:65 (FAILED - 242)
        when Poland
          example at ./spec/models/species/listings_export_spec.rb:75 (FAILED - 243)
        when Nepal
          example at ./spec/models/species/listings_export_spec.rb:86 (FAILED - 244)
      when higher taxon ids
        example at ./spec/models/species/listings_export_spec.rb:96 (FAILED - 245)
      when implicitly listed subspecies present
        example at ./spec/models/species/listings_export_spec.rb:111 (FAILED - 246)
    when EU
      when Annex A
        example at ./spec/models/species/listings_export_spec.rb:122 (FAILED - 247)
        when Spain
          example at ./spec/models/species/listings_export_spec.rb:132 (FAILED - 248)
        when Nepal
          example at ./spec/models/species/listings_export_spec.rb:143 (FAILED - 249)
      when higher taxon ids
        example at ./spec/models/species/listings_export_spec.rb:153 (FAILED - 250)

Species::OrphanedTaxonConceptsExport
  path
    should == "public/downloads/orphaned_taxon_concepts/"
  export
    when no results
      should be falsey
    when results
      when file not cached
sh: 1: psql: not found
        example at ./spec/models/species/orphaned_taxon_concepts_export_spec.rb:33 (FAILED - 251)
      when file cached
        example at ./spec/models/species/orphaned_taxon_concepts_export_spec.rb:39

Species::Search
Procedure: taxonomy
  results
    when searching by scientific name
      when regular query
        example at ./spec/models/species/search_spec.rb:8 (FAILED - 252)
      when malicious query
        example at ./spec/models/species/search_spec.rb:12 (FAILED - 253)
      when leading whitespace
        example at ./spec/models/species/search_spec.rb:16 (FAILED - 254)
      when trailing whitespace
        example at ./spec/models/species/search_spec.rb:20 (FAILED - 255)

Species::SpeciesReferenceOutputExport
  path
    should == "public/downloads/species_reference_output/"
  export
    when no results
      should be falsey
    when results
      when file not cached
sh: 1: psql: not found
        example at ./spec/models/species/species_reference_output_spec.rb:32 (FAILED - 256)
      when file cached
        example at ./spec/models/species/species_reference_output_spec.rb:38

Species::StandardReferenceOutputExport
  path
    should == "public/downloads/standard_reference_output/"
  export
    when no results
      should be falsey
    when results
      when file not cached
sh: 1: psql: not found
        example at ./spec/models/species/standard_reference_output_spec.rb:32 (FAILED - 257)
      when file cached
        example at ./spec/models/species/standard_reference_output_spec.rb:38

Species::SynonymsAndTradeNamesExport
  path
    should == "public/downloads/synonyms_and_trade_names/"
  export
    when no results
      should be falsey
    when results
      when file not cached
sh: 1: psql: not found
        example at ./spec/models/species/synonyms_and_trade_names_export_spec.rb:38 (FAILED - 258)
      when file cached
        example at ./spec/models/species/synonyms_and_trade_names_export_spec.rb:44

Species::TaxonConceptPrefixMatcher
Procedure: taxonomy
  results
    when searching by common name
      when searching by hyphenated common name
        example at ./spec/models/species/taxon_concept_prefix_matcher_spec.rb:14 (FAILED - 259)
      when searching by hyphenated common name without hyphens
        example at ./spec/models/species/taxon_concept_prefix_matcher_spec.rb:23 (FAILED - 260)
      when searching by part of hyphenated common name
        example at ./spec/models/species/taxon_concept_prefix_matcher_spec.rb:32 (FAILED - 261)
    when searching by scientific name
      when regular query
        example at ./spec/models/species/taxon_concept_prefix_matcher_spec.rb:43 (FAILED - 262)
      when malicious query
        example at ./spec/models/species/taxon_concept_prefix_matcher_spec.rb:52 (FAILED - 263)
      when leading whitespace
        example at ./spec/models/species/taxon_concept_prefix_matcher_spec.rb:61 (FAILED - 264)
      when trailing whitespace
        example at ./spec/models/species/taxon_concept_prefix_matcher_spec.rb:70 (FAILED - 265)
      when implicitly listed subspecies
        example at ./spec/models/species/taxon_concept_prefix_matcher_spec.rb:79 (FAILED - 266)
      when explicitly listed subspecies
        example at ./spec/models/species/taxon_concept_prefix_matcher_spec.rb:88 (FAILED - 267)
      when implicitly listed higher taxon (without an explicitly listed ancestor)
        example at ./spec/models/species/taxon_concept_prefix_matcher_spec.rb:97 (FAILED - 268)
      when explicitly listed higher taxon
        example at ./spec/models/species/taxon_concept_prefix_matcher_spec.rb:106 (FAILED - 269)
      when explicitly listed higher taxon but ranks expected FAMILY
        example at ./spec/models/species/taxon_concept_prefix_matcher_spec.rb:117 (FAILED - 270)
      when explicitly listed higher taxon but ranks expected SPECIES
        example at ./spec/models/species/taxon_concept_prefix_matcher_spec.rb:127 (FAILED - 271)
      when searching for name that matches Species and Subspecies but  ranks expected SUBSPECIES
        example at ./spec/models/species/taxon_concept_prefix_matcher_spec.rb:137 (FAILED - 272)

Species::TaxonConceptsNamesExport
  path
    should == "public/downloads/taxon_concepts_names/"
  export
    when no results
      should be falsey
    when results
      when file not cached
sh: 1: psql: not found
        example at ./spec/models/species/taxon_concepts_export_spec.rb:32 (FAILED - 273)
      when file cached
        example at ./spec/models/species/taxon_concepts_export_spec.rb:38

Species::TaxonConceptPrefixMatcher
  results
    when searching for status N species
      when trade visibility
Procedure: taxonomy
        example at ./spec/models/species/trade_name_prefix_matcher_spec.rb:39 (FAILED - 274)
      when trade internal visibility
Procedure: taxonomy
        example at ./spec/models/species/trade_name_prefix_matcher_spec.rb:49 (FAILED - 275)
      when speciesplus visibility
Procedure: taxonomy
        example at ./spec/models/species/trade_name_prefix_matcher_spec.rb:58 (FAILED - 276)
    when searching for trade name
      when trade visibility
Procedure: taxonomy
        example at ./spec/models/species/trade_name_prefix_matcher_spec.rb:70 (FAILED - 277)
Procedure: taxonomy
        example at ./spec/models/species/trade_name_prefix_matcher_spec.rb:71 (FAILED - 278)
      when trade internal visibility
Procedure: taxonomy
        example at ./spec/models/species/trade_name_prefix_matcher_spec.rb:81 (FAILED - 279)
Procedure: taxonomy
        example at ./spec/models/species/trade_name_prefix_matcher_spec.rb:82 (FAILED - 280)
      when speciesplus visibility
Procedure: taxonomy
        example at ./spec/models/species/trade_name_prefix_matcher_spec.rb:91 (FAILED - 281)
Procedure: taxonomy
        example at ./spec/models/species/trade_name_prefix_matcher_spec.rb:92 (FAILED - 282)

Species::Search
Procedure: taxonomy
  results
    when searching by scientific name
      when subspecies previously listed
        example at ./spec/models/species/visible_subspecies_search_spec.rb:8 (FAILED - 283)

TaxonRelationship
  when synonymy
    should include "Lolcatus lolus"
    should include "Lolcatus lolus"

TaxonCommon
  update
    when common name changed
      should include "Lolcat"

TaxonConcept
  Agalychnis
Procedure: taxonomy
    REFERENCES
      cites_accepted
        for class Amphibia
          example at ./spec/models/taxon_concept/agalychnis_spec.rb:10 (FAILED - 284)
        for family Hylidae
          example at ./spec/models/taxon_concept/agalychnis_spec.rb:13 (FAILED - 285)
        for genus Agalychnis
          example at ./spec/models/taxon_concept/agalychnis_spec.rb:16 (FAILED - 286)
      standard_taxon_concept_references
        for class Amphibia
          example at ./spec/models/taxon_concept/agalychnis_spec.rb:21 (FAILED - 287)
        for family Hylidae
          example at ./spec/models/taxon_concept/agalychnis_spec.rb:24 (FAILED - 288)
        for genus Agalychnis
          example at ./spec/models/taxon_concept/agalychnis_spec.rb:27 (FAILED - 289)
    LISTING
      cites_listing
        for genus Agalychnis
          example at ./spec/models/taxon_concept/agalychnis_spec.rb:34 (FAILED - 290)
      eu_listing
        for genus Agalychnis
          example at ./spec/models/taxon_concept/agalychnis_spec.rb:40 (FAILED - 291)
      cites_listed
        for family Hylidae
          example at ./spec/models/taxon_concept/agalychnis_spec.rb:46 (FAILED - 292)
        for genus Agalychnis
          example at ./spec/models/taxon_concept/agalychnis_spec.rb:49 (FAILED - 293)
      eu_listed
        for family Hylidae
          example at ./spec/models/taxon_concept/agalychnis_spec.rb:55 (FAILED - 294)
        for genus Agalychnis
          example at ./spec/models/taxon_concept/agalychnis_spec.rb:58 (FAILED - 295)

TaxonConcept
  Agave
Procedure: taxonomy
    LISTING
      cites_listing
        for species Agave parviflora
          example at ./spec/models/taxon_concept/agave_spec.rb:10 (FAILED - 296)
        for species Agave arizonica
          example at ./spec/models/taxon_concept/agave_spec.rb:13 (FAILED - 297)
      cites_listed
        for species Agave parviflora
          example at ./spec/models/taxon_concept/agave_spec.rb:19 (FAILED - 298)
        for species Agave arizonica
          example at ./spec/models/taxon_concept/agave_spec.rb:22 (FAILED - 299)
      cites_show
        for species Agave parviflora
          example at ./spec/models/taxon_concept/agave_spec.rb:28 (FAILED - 300)
        for species Agave arizonica
          example at ./spec/models/taxon_concept/agave_spec.rb:31 (FAILED - 301)
      eu_listing
        for species Agave parviflora
          example at ./spec/models/taxon_concept/agave_spec.rb:37 (FAILED - 302)
        for species Agave arizonica
          example at ./spec/models/taxon_concept/agave_spec.rb:40 (FAILED - 303)
      eu_listed
        for species Agave parviflora
          example at ./spec/models/taxon_concept/agave_spec.rb:46 (FAILED - 304)
        for species Agave arizonica
          example at ./spec/models/taxon_concept/agave_spec.rb:49 (FAILED - 305)
      eu_show
        for species Agave parviflora
          example at ./spec/models/taxon_concept/agave_spec.rb:55 (FAILED - 306)
        for species Agave arizonica
          example at ./spec/models/taxon_concept/agave_spec.rb:58 (FAILED - 307)

TaxonConcept
  Ailuropoda
Procedure: taxonomy
    LISTING
      cites_listing
        for species Ailuropoda melanoleuca
          example at ./spec/models/taxon_concept/ailuropoda_spec.rb:10 (FAILED - 308)
        for genus level Ailuropoda
          example at ./spec/models/taxon_concept/ailuropoda_spec.rb:13 (FAILED - 309)
      eu_listing
        for species Ailuropoda melanoleuca
          example at ./spec/models/taxon_concept/ailuropoda_spec.rb:19 (FAILED - 310)
        for genus level Ailuropoda
          example at ./spec/models/taxon_concept/ailuropoda_spec.rb:22 (FAILED - 311)
      cites_listed
        for genus Ailuropoda
          example at ./spec/models/taxon_concept/ailuropoda_spec.rb:28 (FAILED - 312)
        for species Ailuropoda melanoleuca
          example at ./spec/models/taxon_concept/ailuropoda_spec.rb:31 (FAILED - 313)
      eu_listed
        for genus Ailuropoda
          example at ./spec/models/taxon_concept/ailuropoda_spec.rb:37 (FAILED - 314)
        for species Ailuropoda melanoleuca
          example at ./spec/models/taxon_concept/ailuropoda_spec.rb:40 (FAILED - 315)

TaxonConcept
  Arctocephalus
Procedure: taxonomy
    LISTING
      cites_listing
        should be II at species level Arctocephalus australis (FAILED - 316)
        should be I at species level Arctocephalus townsendi (FAILED - 317)
        should be I/II at genus level Arctocephalus (FAILED - 318)
      cites_listed
        should be true for genus Arctocephalus (FAILED - 319)
        should be true for species Arctocephalus townsendi (FAILED - 320)
        should be false for species Arctocephalus australis (inclusion in higher taxa listing) (FAILED - 321)
      eu_listed
        should be true for genus Arctocephalus (FAILED - 322)
        should be true for species Arctocephalus townsendi (FAILED - 323)
        should be false for species Arctocephalus australis (inclusion in higher taxa listing) (FAILED - 324)

TaxonConcept
  Boa constrictor
Procedure: taxonomy
    TAXONOMY
      full_name
        for subspecies Boa constrictor occidentalis
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:9 (FAILED - 325)
        for species Boa constrictor
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:12 (FAILED - 326)
        for genus Boa
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:15 (FAILED - 327)
      ancestors
        family
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:21 (FAILED - 328)
        order
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:24 (FAILED - 329)
        class
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:27 (FAILED - 330)
    LISTING
      cites_listing
        for subspecies Boa constrictor occidentalis
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:35 (FAILED - 331)
        for subspecies Boa constrictor constrictor
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:38 (FAILED - 332)
        for species Boa constrictor
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:41 (FAILED - 333)
      eu_listing
        for subspecies Boa constrictor occidentalis
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:47 (FAILED - 334)
        for subspecies Boa constrictor constrictor
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:50 (FAILED - 335)
        for species Boa constrictor
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:53 (FAILED - 336)
      cites_listed
        for family Boidae
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:59 (FAILED - 337)
        for genus Boa
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:62 (FAILED - 338)
        for species Boa constrictor (inclusion in higher taxa listing)
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:65 (FAILED - 339)
        for subspecies Boa constrictor occidentalis
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:68 (FAILED - 340)
        for subspecies Boa constrictor constrictor
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:71 (FAILED - 341)
      cites_show
        for family Boidae
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:77 (FAILED - 342)
        for genus Boa
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:80 (FAILED - 343)
        for species Boa constrictor (inclusion in higher taxa listing)
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:83 (FAILED - 344)
        for subspecies Boa constrictor occidentalis
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:86 (FAILED - 345)
        for subspecies Boa constrictor constrictor
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:89 (FAILED - 346)
      cites_listed_descendants
        for family Boidae
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:95 (FAILED - 347)
        for genus Boa
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:98 (FAILED - 348)
        for species Boa constrictor (inclusion in higher taxa listing)
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:101 (FAILED - 349)
        for subspecies Boa constrictor occidentalis
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:104 (FAILED - 350)
      eu_listed
        for family Boidae
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:110 (FAILED - 351)
        for genus Boa
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:113 (FAILED - 352)
        for species Boa constrictor (inclusion in higher taxa listing)
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:116 (FAILED - 353)
        for subspecies Boa constrictor occidentalis
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:119 (FAILED - 354)
      show_in_species_plus_ac
        for family Boidae
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:125 (FAILED - 355)
        for genus Boa
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:128 (FAILED - 356)
        for species Boa constrictor (inclusion in higher taxa listing)
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:131 (FAILED - 357)
        for subspecies Boa constrictor occidentalis
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:134 (FAILED - 358)
        for subspecies Boa constrictor constrictor
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:137 (FAILED - 359)
      show_in_checklist_ac
        for family Boidae
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:143 (FAILED - 360)
        for genus Boa
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:146 (FAILED - 361)
        for species Boa constrictor (inclusion in higher taxa listing)
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:149 (FAILED - 362)
        for subspecies Boa constrictor occidentalis
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:152 (FAILED - 363)
        for subspecies Boa constrictor constrictor
          example at ./spec/models/taxon_concept/boa_constrictor_spec.rb:155 (FAILED - 364)

TaxonConcept
  Caiman latirostris
Procedure: taxonomy
    TAXONOMY
      full_name
        for species synonym Alligator cynocephalus
          example at ./spec/models/taxon_concept/caiman_latirostris_spec.rb:10 (FAILED - 365)
      rank_name
        for species synonym Alligator cynocephalus
          example at ./spec/models/taxon_concept/caiman_latirostris_spec.rb:15 (FAILED - 366)
    REFERENCES
      cites_accepted
        for species Caiman latirostris
          example at ./spec/models/taxon_concept/caiman_latirostris_spec.rb:23 (FAILED - 367)
        for synonym species Alligator cynocephalus
          example at ./spec/models/taxon_concept/caiman_latirostris_spec.rb:26 (FAILED - 368)
      standard_taxon_concept_references
        for species Caiman latirostris
          example at ./spec/models/taxon_concept/caiman_latirostris_spec.rb:31 (FAILED - 369)
    LISTING
      cites_listing
        for species Caiman latirostris
          example at ./spec/models/taxon_concept/caiman_latirostris_spec.rb:38 (FAILED - 370)
      eu_listing
        for species Caiman latirostris
          example at ./spec/models/taxon_concept/caiman_latirostris_spec.rb:44 (FAILED - 371)
      cites_listed
        for order Crocodylia
          example at ./spec/models/taxon_concept/caiman_latirostris_spec.rb:50 (FAILED - 372)
        for family Alligatoridae
          example at ./spec/models/taxon_concept/caiman_latirostris_spec.rb:53 (FAILED - 373)
        for genus Caiman
          example at ./spec/models/taxon_concept/caiman_latirostris_spec.rb:56 (FAILED - 374)
        for species Caiman latoristris
          example at ./spec/models/taxon_concept/caiman_latirostris_spec.rb:59 (FAILED - 375)
      eu_listed
        for order Crocodylia
          example at ./spec/models/taxon_concept/caiman_latirostris_spec.rb:65 (FAILED - 376)
        for family Alligatoridae
          example at ./spec/models/taxon_concept/caiman_latirostris_spec.rb:68 (FAILED - 377)
        for genus Caiman
          example at ./spec/models/taxon_concept/caiman_latirostris_spec.rb:71 (FAILED - 378)
        for species Caiman latoristris
          example at ./spec/models/taxon_concept/caiman_latirostris_spec.rb:74 (FAILED - 379)
      cites_show
        for order Crocodylia
          example at ./spec/models/taxon_concept/caiman_latirostris_spec.rb:80 (FAILED - 380)
        for family Alligatoridae
          example at ./spec/models/taxon_concept/caiman_latirostris_spec.rb:83 (FAILED - 381)
        for genus Caiman
          example at ./spec/models/taxon_concept/caiman_latirostris_spec.rb:86 (FAILED - 382)
        for species Caiman latoristris
          example at ./spec/models/taxon_concept/caiman_latirostris_spec.rb:89 (FAILED - 383)
        for synonym species Alligator cynocephalus
          example at ./spec/models/taxon_concept/caiman_latirostris_spec.rb:92 (FAILED - 384)
      ann_symbol
        for species Caiman latirostris
          example at ./spec/models/taxon_concept/caiman_latirostris_spec.rb:98 (FAILED - 385)
      hash_ann_symbol
        for species Caiman latirostris
          example at ./spec/models/taxon_concept/caiman_latirostris_spec.rb:104 (FAILED - 386)

TaxonConcept
  before validate
    taxonomic position not given for fixed order rank
      should eq "1.1"
    taxonomic position given for fixed order rank
      should eq "1.2"
    taxonomic position not given for fixed order root rank
      should eq "1"
  after save
    data should be populated when creating a child
      should eq "Derp"
      should eq "SPECIES"

TaxonConcept
  Canis lupus
Procedure: taxonomy
    LISTING
      cites_listing
        for species Canis lupus (population split listing)
          example at ./spec/models/taxon_concept/canis_lupus_spec.rb:9 (FAILED - 387)
      eu_listing
        for species Canis lupus (population split listing)
          example at ./spec/models/taxon_concept/canis_lupus_spec.rb:15 (FAILED - 388)
      cites_listed
        for species Canis lupus
          example at ./spec/models/taxon_concept/canis_lupus_spec.rb:21 (FAILED - 389)
        for subspecies Canis lupus crassodon
          example at ./spec/models/taxon_concept/canis_lupus_spec.rb:24 (FAILED - 390)
      eu_listed
        for species Canis lupus
          example at ./spec/models/taxon_concept/canis_lupus_spec.rb:30 (FAILED - 391)
      show_in_species_plus_ac
        for species Canis lupus
          example at ./spec/models/taxon_concept/canis_lupus_spec.rb:36 (FAILED - 392)
        for subspecies Canis lupus crassodon
          example at ./spec/models/taxon_concept/canis_lupus_spec.rb:39 (FAILED - 393)
      show_in_checklist_ac
        for species Canis lupus
          example at ./spec/models/taxon_concept/canis_lupus_spec.rb:45 (FAILED - 394)
        for subspecies Canis lupus crassodon
          example at ./spec/models/taxon_concept/canis_lupus_spec.rb:48 (FAILED - 395)
      show_in_species_plus
        for species Canis lupus
          example at ./spec/models/taxon_concept/canis_lupus_spec.rb:54 (FAILED - 396)
        for subspecies Canis lupus crassodon
          example at ./spec/models/taxon_concept/canis_lupus_spec.rb:57 (FAILED - 397)

TaxonConcept
  Caretta caretta CMS
Procedure: taxonomy
    LISTING
      cms_listing
        for family Cheloniidae
          example at ./spec/models/taxon_concept/caretta_caretta_cms_spec.rb:10 (FAILED - 398)
        for species Caretta caretta
          example at ./spec/models/taxon_concept/caretta_caretta_cms_spec.rb:13 (FAILED - 399)
      cms_listed
        for family Cheloniidae
          example at ./spec/models/taxon_concept/caretta_caretta_cms_spec.rb:19 (FAILED - 400)
        for species Caretta caretta
          example at ./spec/models/taxon_concept/caretta_caretta_cms_spec.rb:22 (FAILED - 401)
    CASCADING LISTING
      current_cms_additions
        for family Cheloniidae
          example at ./spec/models/taxon_concept/caretta_caretta_cms_spec.rb:30 (FAILED - 402)
        for species Caretta caretta
          example at ./spec/models/taxon_concept/caretta_caretta_cms_spec.rb:35 (FAILED - 403)

TaxonConcept
  Cedrela montana
Procedure: taxonomy
    LISTING
      cites_listing
        for species Cedrela montana
          example at ./spec/models/taxon_concept/cedrela_montana_spec.rb:10 (FAILED - 404)
      cites_listed
        for species Cedrela montana
          example at ./spec/models/taxon_concept/cedrela_montana_spec.rb:16 (FAILED - 405)
      cites_show
        for species Cedrela montana
          example at ./spec/models/taxon_concept/cedrela_montana_spec.rb:22 (FAILED - 406)
      eu_listing
        for species Cedrela montana
          example at ./spec/models/taxon_concept/cedrela_montana_spec.rb:28 (FAILED - 407)
      eu_listed
        for species Cedrela montana
          example at ./spec/models/taxon_concept/cedrela_montana_spec.rb:34 (FAILED - 408)
      eu_show
        for species Cedrela montana
          example at ./spec/models/taxon_concept/cedrela_montana_spec.rb:40 (FAILED - 409)

TaxonConcept
  Cervus elphus CMS
Procedure: taxonomy
    LISTING
      cms_listing
        for species Cervus elaphus
          example at ./spec/models/taxon_concept/cervus_elaphus_cms_spec.rb:10 (FAILED - 410)
        for subspecies Cervus elaphus bactrianus
          example at ./spec/models/taxon_concept/cervus_elaphus_cms_spec.rb:13 (FAILED - 411)
        for subspecies Cervus elaphus barbarus
          example at ./spec/models/taxon_concept/cervus_elaphus_cms_spec.rb:16 (FAILED - 412)
      show_in_species_plus_ac
        for subspecies Cervus elaphus bactrianus (instrument)
          example at ./spec/models/taxon_concept/cervus_elaphus_cms_spec.rb:22 (FAILED - 413)
        for subspecies Cervus elaphus barbarus (listing)
          example at ./spec/models/taxon_concept/cervus_elaphus_cms_spec.rb:25 (FAILED - 414)
      show_in_species_plus
        for subspecies Cervus elaphus bactrianus (instrument)
          example at ./spec/models/taxon_concept/cervus_elaphus_cms_spec.rb:31 (FAILED - 415)
        for subspecies Cervus elaphus barbarus (listing)
          example at ./spec/models/taxon_concept/cervus_elaphus_cms_spec.rb:34 (FAILED - 416)

TaxonConcept
  Cervus elaphus
Procedure: taxonomy
    TAXONOMY
      full_name
        for subspecies Cervus elaphus bactrianus
          example at ./spec/models/taxon_concept/cervus_elaphus_spec.rb:10 (FAILED - 417)
        for species Cervus elaphus
          example at ./spec/models/taxon_concept/cervus_elaphus_spec.rb:13 (FAILED - 418)
        for genus Cervus
          example at ./spec/models/taxon_concept/cervus_elaphus_spec.rb:16 (FAILED - 419)
    LISTING
      cites_listing
        for species Cervus elaphus
          example at ./spec/models/taxon_concept/cervus_elaphus_spec.rb:24 (FAILED - 420)
        for subspecies Cervus elaphus bactrianus
          example at ./spec/models/taxon_concept/cervus_elaphus_spec.rb:27 (FAILED - 421)
        for subspecies Cervus elaphus barbarus
          example at ./spec/models/taxon_concept/cervus_elaphus_spec.rb:30 (FAILED - 422)
        for subspecies Cervus elaphus hanglu
          example at ./spec/models/taxon_concept/cervus_elaphus_spec.rb:33 (FAILED - 423)
        for subspecies Cervus elaphus canadensis
          example at ./spec/models/taxon_concept/cervus_elaphus_spec.rb:36 (FAILED - 424)
      eu_listing
        for species Cervus elaphus
          example at ./spec/models/taxon_concept/cervus_elaphus_spec.rb:42 (FAILED - 425)
        for subspecies Cervus elaphus bactrianus
          example at ./spec/models/taxon_concept/cervus_elaphus_spec.rb:45 (FAILED - 426)
        for subspecies Cervus elaphus barbarus
          example at ./spec/models/taxon_concept/cervus_elaphus_spec.rb:48 (FAILED - 427)
        for subspecies Cervus elaphus hanglu
          example at ./spec/models/taxon_concept/cervus_elaphus_spec.rb:51 (FAILED - 428)
        for subspecies Cervus elaphus canadensis
          example at ./spec/models/taxon_concept/cervus_elaphus_spec.rb:54 (FAILED - 429)
      cites_listed
        for order Artiodactyla
          example at ./spec/models/taxon_concept/cervus_elaphus_spec.rb:60 (FAILED - 430)
        for family Cervidae
          example at ./spec/models/taxon_concept/cervus_elaphus_spec.rb:63 (FAILED - 431)
        for genus Cervus
          example at ./spec/models/taxon_concept/cervus_elaphus_spec.rb:66 (FAILED - 432)
        for species Cervus elaphus
          example at ./spec/models/taxon_concept/cervus_elaphus_spec.rb:69 (FAILED - 433)
        for subspecies Cervus elaphus bactrianus
          example at ./spec/models/taxon_concept/cervus_elaphus_spec.rb:72 (FAILED - 434)
        for subspecies Cervus elaphus barbarus
          example at ./spec/models/taxon_concept/cervus_elaphus_spec.rb:75 (FAILED - 435)
        for subspecies Cervus elaphus hanglu
          example at ./spec/models/taxon_concept/cervus_elaphus_spec.rb:78 (FAILED - 436)
        for subspecies Cervus elaphus canadensis
          example at ./spec/models/taxon_concept/cervus_elaphus_spec.rb:81 (FAILED - 437)
      eu_listed
        for order Artiodactyla
          example at ./spec/models/taxon_concept/cervus_elaphus_spec.rb:87 (FAILED - 438)
        for family Cervidae
          example at ./spec/models/taxon_concept/cervus_elaphus_spec.rb:90 (FAILED - 439)
        for genus Cervus
          example at ./spec/models/taxon_concept/cervus_elaphus_spec.rb:93 (FAILED - 440)
        for species Cervus elaphus
          example at ./spec/models/taxon_concept/cervus_elaphus_spec.rb:96 (FAILED - 441)
        for subspecies Cervus elaphus bactrianus
          example at ./spec/models/taxon_concept/cervus_elaphus_spec.rb:99 (FAILED - 442)
        for subspecies Cervus elaphus barbarus
          example at ./spec/models/taxon_concept/cervus_elaphus_spec.rb:102 (FAILED - 443)
        for subspecies Cervus elaphus hanglu
          example at ./spec/models/taxon_concept/cervus_elaphus_spec.rb:105 (FAILED - 444)
        for subspecies Cervus elaphus canadensis
          example at ./spec/models/taxon_concept/cervus_elaphus_spec.rb:108 (FAILED - 445)
      cites_show
        for subspecies Cervus elaphus hanglu
          example at ./spec/models/taxon_concept/cervus_elaphus_spec.rb:114 (FAILED - 446)
        for subspecies Cervus elaphus canadensis
          example at ./spec/models/taxon_concept/cervus_elaphus_spec.rb:117 (FAILED - 447)

TaxonConcept
  Colophon
Procedure: taxonomy
    LISTING
      cites_listing
        for genus Colophon
          example at ./spec/models/taxon_concept/colophon_spec.rb:10 (FAILED - 448)
        for species Colophon barnardi
          example at ./spec/models/taxon_concept/colophon_spec.rb:13 (FAILED - 449)
      eu_listing
        for genus Colophon
          example at ./spec/models/taxon_concept/colophon_spec.rb:19 (FAILED - 450)
        for species Colophon barnardi
          example at ./spec/models/taxon_concept/colophon_spec.rb:22 (FAILED - 451)
      cites_listed
        for genus Colophon
          example at ./spec/models/taxon_concept/colophon_spec.rb:28 (FAILED - 452)
        for species Colophon barnardi
          example at ./spec/models/taxon_concept/colophon_spec.rb:31 (FAILED - 453)
      eu_listed
        for genus Colophon
          example at ./spec/models/taxon_concept/colophon_spec.rb:37 (FAILED - 454)
        for species Colophon barnardi
          example at ./spec/models/taxon_concept/colophon_spec.rb:40 (FAILED - 455)
      cites_show
        for order Coleoptera
          example at ./spec/models/taxon_concept/colophon_spec.rb:46 (FAILED - 456)
        for family Lucanidae
          example at ./spec/models/taxon_concept/colophon_spec.rb:49 (FAILED - 457)
      current_party_ids
        for genus Colophon
          example at ./spec/models/taxon_concept/colophon_spec.rb:55 (FAILED - 458)
        for species Colophon barnardi
          example at ./spec/models/taxon_concept/colophon_spec.rb:58 (FAILED - 459)

TaxonConcept
  Dalbergia
Procedure: taxonomy
    LISTING
      cites_listing
        for species Dalbergia abbreviata
          example at ./spec/models/taxon_concept/dalbergia_spec.rb:10 (FAILED - 460)
        for species Dalbergia abrahamii
          example at ./spec/models/taxon_concept/dalbergia_spec.rb:13 (FAILED - 461)
      cites_listed
        for species Dalbergia abbreviata
          example at ./spec/models/taxon_concept/dalbergia_spec.rb:19 (FAILED - 462)
        for species Dalbergia abrahamii
          example at ./spec/models/taxon_concept/dalbergia_spec.rb:22 (FAILED - 463)
      cites_show
        for species Dalbergia abbreviata
          example at ./spec/models/taxon_concept/dalbergia_spec.rb:28 (FAILED - 464)
        for species Dalbergia abrahamii
          example at ./spec/models/taxon_concept/dalbergia_spec.rb:31 (FAILED - 465)

TaxonConcept
  destroy
    general
      when no dependent objects attached
        should be truthy
      when distributions
        should be truthy
      when common names
        should be truthy
      when references
        should be truthy
      when document citations
        should be falsey
    CMS
      when taxon instruments
        should be falsey
    CITES / EU
      when listing changes
        should be falsey
      when CITES quotas
        should be falsey
      when CITES suspensions
        should be falsey
      when EU opinions
        should be falsey
      when EU suspensions
        should be falsey
      when shipments
        should be falsey
      when reported shipments
        should be falsey

TaxonConcept
  Diospyros
Procedure: taxonomy
    LISTING
      cites_listing
        for species Diospyros aculeata
          example at ./spec/models/taxon_concept/diospyros_spec.rb:10 (FAILED - 466)
        for species Diospyros acuta
          example at ./spec/models/taxon_concept/diospyros_spec.rb:13 (FAILED - 467)
      cites_listed
        for species Diospyros aculeata
          example at ./spec/models/taxon_concept/diospyros_spec.rb:19 (FAILED - 468)
        for species Diospyros acuta
          example at ./spec/models/taxon_concept/diospyros_spec.rb:22 (FAILED - 469)
      cites_show
        for species Diospyros aculeata
          example at ./spec/models/taxon_concept/diospyros_spec.rb:28 (FAILED - 470)
        for species Diospyros acuta
          example at ./spec/models/taxon_concept/diospyros_spec.rb:31 (FAILED - 471)
      eu_listing
        for species Diospyros aculeata
          example at ./spec/models/taxon_concept/diospyros_spec.rb:37 (FAILED - 472)
        for species Diospyros acuta
          example at ./spec/models/taxon_concept/diospyros_spec.rb:40 (FAILED - 473)
      eu_listed
        for species Diospyros aculeata
          example at ./spec/models/taxon_concept/diospyros_spec.rb:46 (FAILED - 474)
        for species Diospyros acuta
          example at ./spec/models/taxon_concept/diospyros_spec.rb:49 (FAILED - 475)
      eu_show
        for species Diospyros aculeata
          example at ./spec/models/taxon_concept/diospyros_spec.rb:55 (FAILED - 476)
        for species Diospyros acuta
          example at ./spec/models/taxon_concept/diospyros_spec.rb:58 (FAILED - 477)

TaxonConcept
  Falconiformes
Procedure: taxonomy
    TAXONOMY
      rank_name
        for Falco hybrid
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:10 (FAILED - 478)
    LISTING
      cites_listing
        for order Falconiformes
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:18 (FAILED - 479)
        for species Falco araea
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:21 (FAILED - 480)
        for species Falco alopex (H)
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:24 (FAILED - 481)
        for species Gymnogyps californianus
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:27 (FAILED - 482)
        for species Sarcoramphus papa
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:30 (FAILED - 483)
        for species Vultur atratus
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:33 (FAILED - 484)
      eu_listing
        for order Falconiformes
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:39 (FAILED - 485)
        for species Falco araea
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:42 (FAILED - 486)
        for species Falco alopex (H)
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:45 (FAILED - 487)
        for species Gymnogyps californianus
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:48 (FAILED - 488)
        for species Sarcoramphus papa
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:51 (FAILED - 489)
        for species Vultur atratus
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:54 (FAILED - 490)
      cites_status
        for genus Vultur
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:60 (FAILED - 491)
        for species Vultur atratus
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:63 (FAILED - 492)
      cites_listed
        for order Falconiformes
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:69 (FAILED - 493)
        for family Falconidae (inclusion in higher taxa listing)
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:72 (FAILED - 494)
        for genus Falco
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:75 (FAILED - 495)
        for species Falco araea
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:78 (FAILED - 496)
        for species Falco alopex
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:81 (FAILED - 497)
        for species Vultur atratus
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:84 (FAILED - 498)
        for subspecies Falco peregrinus peregrinus
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:87 (FAILED - 499)
      eu_listed
        for order Falconiformes
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:93 (FAILED - 500)
        for family Falconidae (inclusion in higher taxa listing)
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:96 (FAILED - 501)
        for genus Falco
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:99 (FAILED - 502)
        for species Falco araea
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:102 (FAILED - 503)
        for species Falco alopex
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:105 (FAILED - 504)
        for species Vultur atratus
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:108 (FAILED - 505)
        for subspecies Falco peregrinus peregrinus
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:111 (FAILED - 506)
      cites_show
        for order Falconiformes
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:117 (FAILED - 507)
        for family Falconidae
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:120 (FAILED - 508)
        for Falco hybrid
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:123 (FAILED - 509)
      show_in_checklist_ac
        for subspecies Falco peregrinus peregrinus
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:129 (FAILED - 510)
      show_in_species_plus_ac
        for subspecies Falco peregrinus peregrinus
          example at ./spec/models/taxon_concept/falconiformes_spec.rb:135 (FAILED - 511)

TaxonConcept
  create
    when new
      should be truthy
      should be truthy
      should be truthy
      should == "Lolcatus lolcatus x lolatus"
    when duplicate
      should change #count by 0
    when duplicate but author name different
      should change #count by 1

TaxonConcept
  Loxodonta africana CMS
Procedure: taxonomy
    TAXONOMY
      full_name
        for species Loxodonta africana
          example at ./spec/models/taxon_concept/loxodonta_africana_cms_spec.rb:9 (FAILED - 512)
        for genus Loxodonta
          example at ./spec/models/taxon_concept/loxodonta_africana_cms_spec.rb:12 (FAILED - 513)
      rank
        for species Loxodonta africana
          example at ./spec/models/taxon_concept/loxodonta_africana_cms_spec.rb:17 (FAILED - 514)
      ancestors
        family
          example at ./spec/models/taxon_concept/loxodonta_africana_cms_spec.rb:22 (FAILED - 515)
        order
          example at ./spec/models/taxon_concept/loxodonta_africana_cms_spec.rb:25 (FAILED - 516)
        class
          example at ./spec/models/taxon_concept/loxodonta_africana_cms_spec.rb:28 (FAILED - 517)
    LISTING
      cms_listing
        for species Loxodonta africana
          example at ./spec/models/taxon_concept/loxodonta_africana_cms_spec.rb:36 (FAILED - 518)
      cms_listed
        for species Loxodonta africana
          example at ./spec/models/taxon_concept/loxodonta_africana_cms_spec.rb:42 (FAILED - 519)

TaxonConcept
  Loxodonta africana
Procedure: taxonomy
    TAXONOMY
      full_name
        for species Loxodonta africana
          example at ./spec/models/taxon_concept/loxodonta_africana_spec.rb:9 (FAILED - 520)
        for genus Loxodonta
          example at ./spec/models/taxon_concept/loxodonta_africana_spec.rb:12 (FAILED - 521)
      rank
        for species Loxodonta africana
          example at ./spec/models/taxon_concept/loxodonta_africana_spec.rb:17 (FAILED - 522)
      ancestors
        family
          example at ./spec/models/taxon_concept/loxodonta_africana_spec.rb:22 (FAILED - 523)
        order
          example at ./spec/models/taxon_concept/loxodonta_africana_spec.rb:25 (FAILED - 524)
        class
          example at ./spec/models/taxon_concept/loxodonta_africana_spec.rb:28 (FAILED - 525)
    LISTING
      cites_listing
        for species Loxodonta africana (population split listing)
          example at ./spec/models/taxon_concept/loxodonta_africana_spec.rb:36 (FAILED - 526)
      eu_listing
        for species Loxodonta africana (population split listing)
          example at ./spec/models/taxon_concept/loxodonta_africana_spec.rb:42 (FAILED - 527)
      cites_listed
        for species Loxodonta africana
          example at ./spec/models/taxon_concept/loxodonta_africana_spec.rb:48 (FAILED - 528)
        for family Elephantidae
          example at ./spec/models/taxon_concept/loxodonta_africana_spec.rb:51 (FAILED - 529)
      eu_listed
        for species Loxodonta africana
          example at ./spec/models/taxon_concept/loxodonta_africana_spec.rb:57 (FAILED - 530)
        for family Elephantidae
          example at ./spec/models/taxon_concept/loxodonta_africana_spec.rb:60 (FAILED - 531)

TaxonConcept
  Mellivora capensis
Procedure: taxonomy
    LISTING
      cites_listing
        for species Mellivora capensis
          example at ./spec/models/taxon_concept/mellivora_capensis_spec.rb:9 (FAILED - 532)
      eu_listing
        for species Mellivora capensis
          example at ./spec/models/taxon_concept/mellivora_capensis_spec.rb:15 (FAILED - 533)
      cites_listed
        for family Mustelinae
          example at ./spec/models/taxon_concept/mellivora_capensis_spec.rb:21 (FAILED - 534)
        for genus Mellivora
          example at ./spec/models/taxon_concept/mellivora_capensis_spec.rb:24 (FAILED - 535)
        for species Mellivora capensis
          example at ./spec/models/taxon_concept/mellivora_capensis_spec.rb:27 (FAILED - 536)
      eu_listed
        for family Mustelinae
          example at ./spec/models/taxon_concept/mellivora_capensis_spec.rb:33 (FAILED - 537)
        for genus Mellivora
          example at ./spec/models/taxon_concept/mellivora_capensis_spec.rb:36 (FAILED - 538)
        for species Mellivora capensis
          example at ./spec/models/taxon_concept/mellivora_capensis_spec.rb:39 (FAILED - 539)
      current_party_ids
        for species Mellivora capensis
          example at ./spec/models/taxon_concept/mellivora_capensis_spec.rb:45 (FAILED - 540)

TaxonConcept
  Moschus
Procedure: taxonomy
    LISTING
      cites_listing
        for genus Moschus
          example at ./spec/models/taxon_concept/moschus_spec.rb:10 (FAILED - 541)
        for species Moschus leucogaster
          example at ./spec/models/taxon_concept/moschus_spec.rb:13 (FAILED - 542)
        for species Moschus moschiferus
          example at ./spec/models/taxon_concept/moschus_spec.rb:16 (FAILED - 543)
        for subspecies Moschus moschiferus moschiferus
          example at ./spec/models/taxon_concept/moschus_spec.rb:19 (FAILED - 544)
      cites_listed
        for genus Moschus
          example at ./spec/models/taxon_concept/moschus_spec.rb:25 (FAILED - 545)
        for species Moschus leucogaster
          example at ./spec/models/taxon_concept/moschus_spec.rb:28 (FAILED - 546)
        for species Moschus moschiferus
          example at ./spec/models/taxon_concept/moschus_spec.rb:31 (FAILED - 547)
        for subspecies Moschus moschiferus moschiferus
          example at ./spec/models/taxon_concept/moschus_spec.rb:34 (FAILED - 548)
    CASCADING LISTING
      current_cites_additions
        for species Moschus leucogaster
          example at ./spec/models/taxon_concept/moschus_spec.rb:42 (FAILED - 549)
        for species Moschus moschiferus
          example at ./spec/models/taxon_concept/moschus_spec.rb:51 (FAILED - 550)
        for subspecies Moschus moschiferus moschiferus
          example at ./spec/models/taxon_concept/moschus_spec.rb:60 (FAILED - 551)

TaxonConcept
  Natator depressus
Procedure: taxonomy
    LISTING
      cites_listing
        for family Cheloniidae
          example at ./spec/models/taxon_concept/natator_depressus_spec.rb:10 (FAILED - 552)
        for species Natator depressus
          example at ./spec/models/taxon_concept/natator_depressus_spec.rb:13 (FAILED - 553)

TaxonConcept
  Notomys aquilo
Procedure: taxonomy
    LISTING
      cites_listing
        for genus Notomys
          example at ./spec/models/taxon_concept/notomys_aquilo_spec.rb:10 (FAILED - 554)
        for species Notomys aquilo
          example at ./spec/models/taxon_concept/notomys_aquilo_spec.rb:13 (FAILED - 555)
      cites_show
        for genus Notomys
          example at ./spec/models/taxon_concept/notomys_aquilo_spec.rb:19 (FAILED - 556)
        for species Notomys aquilo
          example at ./spec/models/taxon_concept/notomys_aquilo_spec.rb:22 (FAILED - 557)

TaxonConcept
  Panax ginseng
Procedure: taxonomy
    LISTING
      cites_listed
        for species Panax ginseng
          example at ./spec/models/taxon_concept/panax_ginseng_spec.rb:11 (FAILED - 558)
        for genus Panax
          example at ./spec/models/taxon_concept/panax_ginseng_spec.rb:14 (FAILED - 559)
      eu_listed
        for species Panax ginseng
          example at ./spec/models/taxon_concept/panax_ginseng_spec.rb:20 (FAILED - 560)
        for genus Panax
          example at ./spec/models/taxon_concept/panax_ginseng_spec.rb:23 (FAILED - 561)
      cites_listing
        for species Panax ginseng
          example at ./spec/models/taxon_concept/panax_ginseng_spec.rb:29 (FAILED - 562)
      eu_listing
        for species Panax ginseng
          example at ./spec/models/taxon_concept/panax_ginseng_spec.rb:35 (FAILED - 563)
      ann_symbol
        for species Panax ginseng
          example at ./spec/models/taxon_concept/panax_ginseng_spec.rb:41 (FAILED - 564)
      hash_ann_symbol
        for species Panax ginseng
          example at ./spec/models/taxon_concept/panax_ginseng_spec.rb:47 (FAILED - 565)

TaxonConcept
  Pereskia
Procedure: taxonomy
    LISTING
      cites_listing
        for genus Pereskia (not listed, shown)
          example at ./spec/models/taxon_concept/pereskia_spec.rb:10 (FAILED - 566)
        for genus Ariocarpus
          example at ./spec/models/taxon_concept/pereskia_spec.rb:13 (FAILED - 567)
        for family Cactaceae
          example at ./spec/models/taxon_concept/pereskia_spec.rb:16 (FAILED - 568)
      eu_listing
        for genus Pereskia (not listed, shown)
          example at ./spec/models/taxon_concept/pereskia_spec.rb:22 (FAILED - 569)
        for genus Ariocarpus
          example at ./spec/models/taxon_concept/pereskia_spec.rb:25 (FAILED - 570)
        for family Cactaceae
          example at ./spec/models/taxon_concept/pereskia_spec.rb:28 (FAILED - 571)
      cites_listed
        for family Cactaceae
          example at ./spec/models/taxon_concept/pereskia_spec.rb:34 (FAILED - 572)
        for genus Pereskia
          example at ./spec/models/taxon_concept/pereskia_spec.rb:37 (FAILED - 573)
      eu_listed
        for family Cactaceae
          example at ./spec/models/taxon_concept/pereskia_spec.rb:43 (FAILED - 574)
        for genus Pereskia
          example at ./spec/models/taxon_concept/pereskia_spec.rb:46 (FAILED - 575)
      cites_status
        for genus Pereskia
          example at ./spec/models/taxon_concept/pereskia_spec.rb:52 (FAILED - 576)
      cites_show
        for genus Pereskia
          example at ./spec/models/taxon_concept/pereskia_spec.rb:58 (FAILED - 577)

TaxonConcept
  Platysternon megacephalum
Procedure: taxonomy
    LISTING
      cites_listing
        for family Platysternidae
          example at ./spec/models/taxon_concept/platysternon_megacephalum_spec.rb:10 (FAILED - 578)
        for species Platysternon megacephalum
          example at ./spec/models/taxon_concept/platysternon_megacephalum_spec.rb:13 (FAILED - 579)
      cites_listed
        for species Platysternon megacephalum
          example at ./spec/models/taxon_concept/platysternon_megacephalum_spec.rb:19 (FAILED - 580)
      cites_show
        for species Platysternon megacephalum
          example at ./spec/models/taxon_concept/platysternon_megacephalum_spec.rb:25 (FAILED - 581)
      eu_listing
        for family Platysternidae
          example at ./spec/models/taxon_concept/platysternon_megacephalum_spec.rb:31 (FAILED - 582)
        for species Platysternon megacephalum
          example at ./spec/models/taxon_concept/platysternon_megacephalum_spec.rb:34 (FAILED - 583)
      eu_listed
        for species Platysternon megacephalum
          example at ./spec/models/taxon_concept/platysternon_megacephalum_spec.rb:40 (FAILED - 584)
      eu_show
        for species Platysternon megacephalum
          example at ./spec/models/taxon_concept/platysternon_megacephalum_spec.rb:46 (FAILED - 585)

TaxonConcept
  Pristis microdon
Procedure: taxonomy
    LISTING
      cites_listing
        for family Pristidae
          example at ./spec/models/taxon_concept/pristis_microdon_spec.rb:10 (FAILED - 586)
        for species Pristis microdon
          example at ./spec/models/taxon_concept/pristis_microdon_spec.rb:13 (FAILED - 587)
      cites_listed
        for species Pristis microdon
          example at ./spec/models/taxon_concept/pristis_microdon_spec.rb:19 (FAILED - 588)
      cites_show
        for species Pristis microdon
          example at ./spec/models/taxon_concept/pristis_microdon_spec.rb:25 (FAILED - 589)
      eu_listing
        for family Pristidae
          example at ./spec/models/taxon_concept/pristis_microdon_spec.rb:31 (FAILED - 590)
        for species Pristis microdon
          example at ./spec/models/taxon_concept/pristis_microdon_spec.rb:34 (FAILED - 591)
      eu_listed
        for species Pristis microdon
          example at ./spec/models/taxon_concept/pristis_microdon_spec.rb:40 (FAILED - 592)
      eu_show
        for species Pristis microdon
          example at ./spec/models/taxon_concept/pristis_microdon_spec.rb:46 (FAILED - 593)

TaxonConcept
  Pseudomys fieldi
Procedure: taxonomy
    LISTING
      cites_listing
        for subspecies Pseudomys fieldi preaconis
          example at ./spec/models/taxon_concept/pseudomys_fieldi_spec.rb:10 (FAILED - 594)
        for species Pseudomys fieldi
          example at ./spec/models/taxon_concept/pseudomys_fieldi_spec.rb:13 (FAILED - 595)
      eu_listing
        for subspecies Pseudomys fieldi preaconis
          example at ./spec/models/taxon_concept/pseudomys_fieldi_spec.rb:19 (FAILED - 596)
        for species Pseudomys fieldi
          example at ./spec/models/taxon_concept/pseudomys_fieldi_spec.rb:22 (FAILED - 597)
      cites_show
        for subspecies Pseudomys fieldi preaconis
          example at ./spec/models/taxon_concept/pseudomys_fieldi_spec.rb:28 (FAILED - 598)
        for species Pseudomys fieldi
          example at ./spec/models/taxon_concept/pseudomys_fieldi_spec.rb:31 (FAILED - 599)

TaxonConcept
  Psittaciformes
Procedure: taxonomy
    LISTING
      cites_listing
        for order Psittaciformes
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:10 (FAILED - 600)
        for species Cacatua goffiniana
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:13 (FAILED - 601)
        for species Cacatua ducorpsi (H)
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:16 (FAILED - 602)
        for species Probosciger aterrimus
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:19 (FAILED - 603)
        for species Amazona aestiva
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:22 (FAILED - 604)
        for species Agapornis roseicollis (DEL II, not listed, not shown)
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:25 (FAILED - 605)
        for species Psittacula krameri (DEL III, not listed, not shown)
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:28 (FAILED - 606)
        for subspecies Amazona festiva festiva
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:31 (FAILED - 607)
      eu_listing
        for order Psittaciformes
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:37 (FAILED - 608)
        for species Cacatua goffiniana
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:40 (FAILED - 609)
        for species Cacatua ducorpsi (H)
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:43 (FAILED - 610)
        for species Probosciger aterrimus
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:46 (FAILED - 611)
        for species Amazona aestiva
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:49 (FAILED - 612)
        for species Agapornis roseicollis (DEL II, not listed, not shown)
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:52 (FAILED - 613)
        for species Psittacula krameri (DEL III, not listed, not shown)
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:55 (FAILED - 614)
        for subspecies Amazona festiva festiva
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:58 (FAILED - 615)
      cites_listed
        for order Psittaciformes
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:64 (FAILED - 616)
        for family Cacatuidae
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:67 (FAILED - 617)
        for genus Cacatua
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:70 (FAILED - 618)
        for species Cacatua goffiniana
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:73 (FAILED - 619)
        for species Cacatua ducorpsi
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:76 (FAILED - 620)
        for subspecies Amazona festiva festiva
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:79 (FAILED - 621)
      eu_listed
        for order Psittaciformes
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:85 (FAILED - 622)
        for family Cacatuidae
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:88 (FAILED - 623)
        for genus Cacatua
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:91 (FAILED - 624)
        for species Cacatua goffiniana
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:94 (FAILED - 625)
        for species Cacatua ducorpsi
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:97 (FAILED - 626)
        for subspecies Amazona festiva festiva
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:100 (FAILED - 627)
      cites_show
        for species Agapornis roseicollis (DEL II)
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:106 (FAILED - 628)
        for species Amazona aestiva
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:109 (FAILED - 629)
        for species Psittacula krameri (DEL III)
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:112 (FAILED - 630)
      cites_status
        for species Agapornis roseicollis (DEL II)
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:118 (FAILED - 631)
        for species Psittacula krameri (DEL III)
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:121 (FAILED - 632)
      show_in_checklist_ac
        for subspecies Amazona festiva festiva
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:127 (FAILED - 633)
      show_in_species_plus_ac
        for subspecies Amazona festiva festiva
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:133 (FAILED - 634)
      show_in_species_plus
        for subspecies Amazona festiva festiva
          example at ./spec/models/taxon_concept/psittaciformes_spec.rb:139 (FAILED - 635)

TaxonConcept
  create
    when new
      should be truthy
      should be truthy
      should be truthy
      should == "Lolcatus lolus"
    when duplicate
      should change #count by 0
    when duplicate but author name different
      should change #count by 1
    when has accepted parent
      should == "Lolcatus lolus furiatus"
      overnight calculations
Procedure: taxonomy
        example at ./spec/models/taxon_concept/synonyms_spec.rb:93 (FAILED - 636)

TaxonConcept
  Tapiridae
Procedure: taxonomy
    TAXONOMY
      full_name
        for family Tapiridae
          example at ./spec/models/taxon_concept/tapiridae_spec.rb:9 (FAILED - 637)
      rank
        for family Tapiridae
          example at ./spec/models/taxon_concept/tapiridae_spec.rb:14 (FAILED - 638)
      ancestors
        order
          example at ./spec/models/taxon_concept/tapiridae_spec.rb:19 (FAILED - 639)
        class
          example at ./spec/models/taxon_concept/tapiridae_spec.rb:22 (FAILED - 640)
    LISTING
      cites_listing
        for family Tapiridae
          example at ./spec/models/taxon_concept/tapiridae_spec.rb:30 (FAILED - 641)
        for species Tapirus terrestris
          example at ./spec/models/taxon_concept/tapiridae_spec.rb:33 (FAILED - 642)
      eu_listing
        for family Tapiridae
          example at ./spec/models/taxon_concept/tapiridae_spec.rb:39 (FAILED - 643)
        for species Tapirus terrestris
          example at ./spec/models/taxon_concept/tapiridae_spec.rb:42 (FAILED - 644)
      cites_listed
        for family Tapiridae
          example at ./spec/models/taxon_concept/tapiridae_spec.rb:48 (FAILED - 645)
        for genus Tapirus
          example at ./spec/models/taxon_concept/tapiridae_spec.rb:51 (FAILED - 646)
        for species Tapirus terrestris
          example at ./spec/models/taxon_concept/tapiridae_spec.rb:54 (FAILED - 647)
      eu_listed
        for family Tapiridae
          example at ./spec/models/taxon_concept/tapiridae_spec.rb:60 (FAILED - 648)
        for genus Tapirus
          example at ./spec/models/taxon_concept/tapiridae_spec.rb:63 (FAILED - 649)
        for species Tapirus terrestris
          example at ./spec/models/taxon_concept/tapiridae_spec.rb:66 (FAILED - 650)

TaxonConcept
  create
    when new
      should be truthy
      should be truthy
      should be truthy
      should == "Lolcatus lolus"
    when duplicate
      should change #count by 0
    when duplicate but author name different
      should change #count by 1
    when has accepted parent
      should == "Lolcatus lolus furiatus"
      overnight calculations
Procedure: taxonomy
        example at ./spec/models/taxon_concept/trade_names_spec.rb:93 (FAILED - 651)

TaxonConcept
  Uroplatus
Procedure: taxonomy
    REFERENCES
      cites_accepted
        for genus Uroplatus
          example at ./spec/models/taxon_concept/uroplatus_spec.rb:10 (FAILED - 652)
        for species Uroplatus alluaudi
          example at ./spec/models/taxon_concept/uroplatus_spec.rb:13 (FAILED - 653)
        for species Uroplatus giganteus
          example at ./spec/models/taxon_concept/uroplatus_spec.rb:16 (FAILED - 654)
      standard_taxon_concept_references
        for family Gekkonidae
          example at ./spec/models/taxon_concept/uroplatus_spec.rb:21 (FAILED - 655)
        for genus Uroplatus
          example at ./spec/models/taxon_concept/uroplatus_spec.rb:24 (FAILED - 656)
        for species Uroplatus alluaudi
          example at ./spec/models/taxon_concept/uroplatus_spec.rb:27 (FAILED - 657)
        for species Uroplatus giganteus
          example at ./spec/models/taxon_concept/uroplatus_spec.rb:30 (FAILED - 658)
    LISTING
      cites_listing
        for genus Uroplatus
          example at ./spec/models/taxon_concept/uroplatus_spec.rb:37 (FAILED - 659)
        for species Uroplatus giganteus
          example at ./spec/models/taxon_concept/uroplatus_spec.rb:40 (FAILED - 660)
      eu_listing
        for genus Uroplatus
          example at ./spec/models/taxon_concept/uroplatus_spec.rb:46 (FAILED - 661)
        for species Uroplatus giganteus
          example at ./spec/models/taxon_concept/uroplatus_spec.rb:49 (FAILED - 662)
      cites_listed
        for family Gekkonidae
          example at ./spec/models/taxon_concept/uroplatus_spec.rb:55 (FAILED - 663)
        for genus Uroplatus
          example at ./spec/models/taxon_concept/uroplatus_spec.rb:58 (FAILED - 664)
        for species Uroplatus giganteus
          example at ./spec/models/taxon_concept/uroplatus_spec.rb:61 (FAILED - 665)
      eu_listed
        for family Gekkonidae
          example at ./spec/models/taxon_concept/uroplatus_spec.rb:67 (FAILED - 666)
        for genus Uroplatus
          example at ./spec/models/taxon_concept/uroplatus_spec.rb:70 (FAILED - 667)
        for species Uroplatus giganteus
          example at ./spec/models/taxon_concept/uroplatus_spec.rb:73 (FAILED - 668)

TaxonConcept
  create
    all fine
      should be truthy
    taxonomy does not match parent
      should have 1 error on :parent_id
    parent is not an accepted name
      should have 1 error on :parent_id
    parent rank is too high above child rank
      should have 1 error on :parent_id
    parent rank is below child rank
      should have 1 error on :parent_id
    scientific name is not given
      should have 1 error on :taxon_name_id
    when taxonomic position malformed
      should have 1 error on :taxonomic_position
    when full name is already given
      should have 1 error on :full_name
  update
    taxonomy
      cannot change taxonomy when dependents present
    scientific name
      cannot change species scientific name
      cannot change genus scientific name
    parent
      cannot change A species parent
      can change S species parent
      can change A genus parent
    rank
      cannot change A species rank
      can change S species rank

TaxonConcept
  Varanidae
Procedure: taxonomy
    REFERENCES
      cites_accepted
        for species Varanus bengalensis
          example at ./spec/models/taxon_concept/varanidae_spec.rb:10 (FAILED - 669)
      standard_taxon_concept_references
        for order Sauria
          example at ./spec/models/taxon_concept/varanidae_spec.rb:15 (FAILED - 670)
        for family Varanidae
          example at ./spec/models/taxon_concept/varanidae_spec.rb:18 (FAILED - 671)
        for species Varanus bengalensis
          example at ./spec/models/taxon_concept/varanidae_spec.rb:21 (FAILED - 672)
        for species Varanus bushi
          example at ./spec/models/taxon_concept/varanidae_spec.rb:24 (FAILED - 673)
          example at ./spec/models/taxon_concept/varanidae_spec.rb:25 (FAILED - 674)
    LISTING
      cites_listing
        for genus Varanus
          example at ./spec/models/taxon_concept/varanidae_spec.rb:32 (FAILED - 675)
        for species Varanus bengalensis
          example at ./spec/models/taxon_concept/varanidae_spec.rb:35 (FAILED - 676)
      eu_listing
        for genus Varanus
          example at ./spec/models/taxon_concept/varanidae_spec.rb:41 (FAILED - 677)
        for species Varanus bengalensis
          example at ./spec/models/taxon_concept/varanidae_spec.rb:44 (FAILED - 678)
      cites_listed
        for family Varanidae
          example at ./spec/models/taxon_concept/varanidae_spec.rb:50 (FAILED - 679)
        for genus Varanus
          example at ./spec/models/taxon_concept/varanidae_spec.rb:53 (FAILED - 680)
        for species Varanus bengalensis
          example at ./spec/models/taxon_concept/varanidae_spec.rb:56 (FAILED - 681)
      eu_listed
        for family Varanidae
          example at ./spec/models/taxon_concept/varanidae_spec.rb:62 (FAILED - 682)
        for genus Varanus
          example at ./spec/models/taxon_concept/varanidae_spec.rb:65 (FAILED - 683)
        for species Varanus bengalensis
          example at ./spec/models/taxon_concept/varanidae_spec.rb:68 (FAILED - 684)

TaxonConceptData
  to_h
    when regular accepted name
      should eq "Canidae"
    when N accepted name
      should eq "Canidae"
    when hybrid
      should eq "Canidae"
    when synonym
      should eq "Canidae"
    when trade name
      should eq "Canidae"

TaxonConceptPrefixMatcher
  when name status not specified
    should include #<TaxonConcept id: nil, taxonomy_id: 5744, parent_id: 31609, rank_id: 17975, taxon_name_id: 31569, author_year: nil, legacy_id: nil, legacy_type: nil, data: {"rank_name" => "GENUS", "kingdom_id" => "31604", "kingdom_name" => "Lupus10352", "phylum_id" => "31605", "phylum_name" => "Lupus10351", "class_id" => "31606", "class_name" => "Lupus10350", "order_id" => "31607", "order_name" => "Aaa", "family_id" => "31608", "family_name" => "Aac", "subfamily_id" => "31609", "subfamily_name" => "Aab", "genus_id" => "31610", "genus_name" => "Abb"}, listing: nil, notes: nil, taxonomic_position: "1", full_name: "Abb", name_status: "A", created_at: "2024-01-04 16:51:59", updated_at: "2024-01-04 16:51:59", touched_at: nil, legacy_trade_code: nil, updated_by_id: 4305, created_by_id: 4305, dependents_updated_at: nil, nomenclature_note_en: nil, nomenclature_note_es: nil, nomenclature_note_fr: nil, dependents_updated_by_id: nil, kew_id: nil>
    should not include #<TaxonConcept id: nil, taxonomy_id: 5745, parent_id: nil, rank_id: 17982, taxon_name_id: 31580, author_year: nil, legacy_id: nil, legacy_type: nil, data: {"rank_name" => "GENUS", "kingdom_id" => "31613", "kingdom_name" => "Lupus10355", "phylum_id" => "31614", "phylum_name" => "Lupus10354", "class_id" => "31615", "class_name" => "Lupus10353", "order_id" => "31616", "order_name" => "Aaa", "family_id" => "31617", "family_name" => "Aac", "subfamily_id" => "31618", "subfamily_name" => "Aab", "genus_id" => "31621", "genus_name" => "Abc"}, listing: nil, notes: nil, taxonomic_position: "1", full_name: "Abc", name_status: "H", created_at: "2024-01-04 16:51:59", updated_at: "2024-01-04 16:51:59", touched_at: nil, legacy_trade_code: nil, updated_by_id: 4306, created_by_id: 4306, dependents_updated_at: nil, nomenclature_note_en: nil, nomenclature_note_es: nil, nomenclature_note_fr: nil, dependents_updated_by_id: nil, kew_id: nil>
  when name status H
    should not include #<TaxonConcept id: nil, taxonomy_id: 5746, parent_id: 31627, rank_id: 17989, taxon_name_id: 31587, author_year: nil, legacy_id: nil, legacy_type: nil, data: {"rank_name" => "GENUS", "kingdom_id" => "31622", "kingdom_name" => "Lupus10358", "phylum_id" => "31623", "phylum_name" => "Lupus10357", "class_id" => "31624", "class_name" => "Lupus10356", "order_id" => "31625", "order_name" => "Aaa", "family_id" => "31626", "family_name" => "Aac", "subfamily_id" => "31627", "subfamily_name" => "Aab", "genus_id" => "31628", "genus_name" => "Abb"}, listing: nil, notes: nil, taxonomic_position: "1", full_name: "Abb", name_status: "A", created_at: "2024-01-04 16:52:00", updated_at: "2024-01-04 16:52:00", touched_at: nil, legacy_trade_code: nil, updated_by_id: 4307, created_by_id: 4307, dependents_updated_at: nil, nomenclature_note_en: nil, nomenclature_note_es: nil, nomenclature_note_fr: nil, dependents_updated_by_id: nil, kew_id: nil>
    should include #<TaxonConcept id: nil, taxonomy_id: 5747, parent_id: nil, rank_id: 17996, taxon_name_id: 31598, author_year: nil, legacy_id: nil, legacy_type: nil, data: {"rank_name" => "GENUS", "kingdom_id" => "31631", "kingdom_name" => "Lupus10361", "phylum_id" => "31632", "phylum_name" => "Lupus10360", "class_id" => "31633", "class_name" => "Lupus10359", "order_id" => "31634", "order_name" => "Aaa", "family_id" => "31635", "family_name" => "Aac", "subfamily_id" => "31636", "subfamily_name" => "Aab", "genus_id" => "31639", "genus_name" => "Abc"}, listing: nil, notes: nil, taxonomic_position: "1", full_name: "Abc", name_status: "H", created_at: "2024-01-04 16:52:00", updated_at: "2024-01-04 16:52:00", touched_at: nil, legacy_trade_code: nil, updated_by_id: 4308, created_by_id: 4308, dependents_updated_at: nil, nomenclature_note_en: nil, nomenclature_note_es: nil, nomenclature_note_fr: nil, dependents_updated_by_id: nil, kew_id: nil>
  when rank scope applied
    should == ["Aab", "Aac"]
    should == ["Aaa"]
    should == ["Aaa", "Aaab"]
  when taxon concept scope applied
    should == ["Aaa", "Aab", "Aac"]
    should == ["Aaab", "Aab", "Abb"]

TaxonRelationship
  has_opposite?
    a relationship with no opposite
      should == false
    with an opposite
      should == true
  after_create_create_opposite
    when creating a bidirectional relationship
      should == true
    when creating a non bidirectional relationship
      should == false
  validate_uniqueness_taxon_concept_id
    adding a duplicate relationship between the same taxon_concepts
      example at ./spec/models/taxon_relationship_spec.rb:66
  validate_intertaxonomic_relationship_uniqueness
    adding an intertaxonomic relationship between taxon concepts that are already related (A -> B)
      should == false
    adding an intertaxonomic relationship between taxon concepts that are already related in the opposite direction (B -> A)
      should == false
    adding an intertaxonomic relationship between taxon concepts that are not already related
      should == true

Taxonomy
  create
    when valid
      should be valid
    when name missing
      should be invalid
      should have 1 error on :name
    when name duplicated
      should be invalid
      should have 1 error on :name
  update
    when updating a non-protected name
      should be truthy
    when updating a protected name
      should be falsey
  destroy
    when no dependent objects attached
      should be truthy
    when dependent objects attached
      should be falsey
    when protected name
      should be falsey

Term
  destroy
    when no dependent objects attached
      should be truthy
    when dependent objects attached
      when CITES suspension
        should be falsey
      when CITES quota
        should be falsey
      when shipments
        should be falsey

Trade::AnnualReportUpload
  valid?
    when uploaded file as exporter with exporter column headers
      example at ./spec/models/trade/annual_report_upload_spec.rb:54 (FAILED - 685)
    when uploaded file as importer with exporter column headers
      example at ./spec/models/trade/annual_report_upload_spec.rb:64 (FAILED - 686)
    when uploaded file as importer with importer column headers
      example at ./spec/models/trade/annual_report_upload_spec.rb:74 (FAILED - 687)
    when uploaded file as exporter with importer column headers
      example at ./spec/models/trade/annual_report_upload_spec.rb:84 (FAILED - 688)
  validation_errors
    example at ./spec/models/trade/annual_report_upload_spec.rb:99 (FAILED - 689)
  create
    when blank lines in import file
      example at ./spec/models/trade/annual_report_upload_spec.rb:112 (FAILED - 690)
  destroy
    example at ./spec/models/trade/annual_report_upload_spec.rb:127 (FAILED - 691)
  submit
    it calls submission worker

Trade::DistinctValuesValidationRule
  validation_errors_for_aru
    exporter should not equal importer (E)
      example at ./spec/models/trade/distinct_values_validation_rule_spec.rb:52 (FAILED - 692)
    exporter should not equal importer (I)
      example at ./spec/models/trade/distinct_values_validation_rule_spec.rb:69 (FAILED - 693)
    exporter should not equal country of origin
      example at ./spec/models/trade/distinct_values_validation_rule_spec.rb:82 (FAILED - 694)

Trade::Filter
  results
    when searching by taxon concepts ids
      in the public interface
        at GENUS rank
Procedure: taxonomy
          example at ./spec/models/trade/filter_spec.rb:15 (FAILED - 695)
Procedure: taxonomy
          example at ./spec/models/trade/filter_spec.rb:16 (FAILED - 696)
Procedure: taxonomy
          example at ./spec/models/trade/filter_spec.rb:17 (FAILED - 697)
        at FAMILY rank
Procedure: taxonomy
          example at ./spec/models/trade/filter_spec.rb:25 (FAILED - 698)
      in the admin interface
        at GENUS rank
Procedure: taxonomy
          example at ./spec/models/trade/filter_spec.rb:34 (FAILED - 699)
Procedure: taxonomy
          example at ./spec/models/trade/filter_spec.rb:35 (FAILED - 700)
Procedure: taxonomy
          example at ./spec/models/trade/filter_spec.rb:36 (FAILED - 701)
        at FAMILY rank
Procedure: taxonomy
          example at ./spec/models/trade/filter_spec.rb:43 (FAILED - 702)
Procedure: taxonomy
          example at ./spec/models/trade/filter_spec.rb:44 (FAILED - 703)
Procedure: taxonomy
          example at ./spec/models/trade/filter_spec.rb:45 (FAILED - 704)
        at mixed ranks
Procedure: taxonomy
          example at ./spec/models/trade/filter_spec.rb:54 (FAILED - 705)
Procedure: taxonomy
          example at ./spec/models/trade/filter_spec.rb:55 (FAILED - 706)
Procedure: taxonomy
          example at ./spec/models/trade/filter_spec.rb:56 (FAILED - 707)
      when status N shipments present
Procedure: taxonomy
        example at ./spec/models/trade/filter_spec.rb:68 (FAILED - 708)
      when subspecies shipments present
Procedure: taxonomy
        example at ./spec/models/trade/filter_spec.rb:79 (FAILED - 709)
      when synonym subspecies shipments present
        when searching by taxonomic parent
Procedure: taxonomy
          example at ./spec/models/trade/filter_spec.rb:95 (FAILED - 710)
        when searching by accepted name
Procedure: taxonomy
          example at ./spec/models/trade/filter_spec.rb:103 (FAILED - 711)
    when searching by reported taxon concepts ids
      when trade names shipments present
Procedure: taxonomy
        example at ./spec/models/trade/filter_spec.rb:122 (FAILED - 712)
    when searching by appendices
      should include #<Trade::Shipment id: nil, source_id: 3836, unit_id: 3834, purpose_id: 3835, term_id: 3832, quantity: #<BigDecimal:401d5a4d50,'0.2E2',9(27)>, appendix: "I", trade_annual_report_upload_id: nil, exporter_id: 2947, importer_id: 2946, country_of_origin_id: 2946, reported_by_exporter: true, taxon_concept_id: 32280, year: 2012, created_at: "2024-01-04 16:52:31", updated_at: "2024-01-04 16:52:31", sandbox_id: nil, reported_taxon_concept_id: 32280, import_permit_number: "AAA", export_permit_number: "BBB;CCC", origin_permit_number: "EEE", legacy_shipment_number: nil, updated_by_id: 4371, created_by_id: 4371, import_permits_ids: [1254], export_permits_ids: [1255, 1256], origin_permits_ids: [1257], epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
      should == 1
    when searching for terms_ids
      should include #<Trade::Shipment id: nil, source_id: 3850, unit_id: 3848, purpose_id: 3849, term_id: 3846, quantity: #<BigDecimal:401d18d3c0,'0.2E2',9(27)>, appendix: "I", trade_annual_report_upload_id: nil, exporter_id: 2951, importer_id: 2950, country_of_origin_id: 2950, reported_by_exporter: true, taxon_concept_id: 32334, year: 2012, created_at: "2024-01-04 16:52:33", updated_at: "2024-01-04 16:52:33", sandbox_id: nil, reported_taxon_concept_id: 32334, import_permit_number: "AAA", export_permit_number: "BBB;CCC", origin_permit_number: "EEE", legacy_shipment_number: nil, updated_by_id: 4373, created_by_id: 4373, import_permits_ids: [1268], export_permits_ids: [1269, 1270], origin_permits_ids: [1271], epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
      should == 3
    when searching for units_ids
      should include #<Trade::Shipment id: nil, source_id: 3864, unit_id: 3862, purpose_id: 3863, term_id: 3860, quantity: #<BigDecimal:4013a75398,'0.2E2',9(27)>, appendix: "I", trade_annual_report_upload_id: nil, exporter_id: 2955, importer_id: 2954, country_of_origin_id: 2954, reported_by_exporter: true, taxon_concept_id: 32388, year: 2012, created_at: "2024-01-04 16:52:35", updated_at: "2024-01-04 16:52:35", sandbox_id: nil, reported_taxon_concept_id: 32388, import_permit_number: "AAA", export_permit_number: "BBB;CCC", origin_permit_number: "EEE", legacy_shipment_number: nil, updated_by_id: 4375, created_by_id: 4375, import_permits_ids: [1282], export_permits_ids: [1283, 1284], origin_permits_ids: [1285], epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
      should == 3
    when searching for purposes_ids
      should include #<Trade::Shipment id: nil, source_id: 3878, unit_id: 3876, purpose_id: 3877, term_id: 3874, quantity: #<BigDecimal:401fe06a50,'0.2E2',9(27)>, appendix: "I", trade_annual_report_upload_id: nil, exporter_id: 2959, importer_id: 2958, country_of_origin_id: 2958, reported_by_exporter: true, taxon_concept_id: 32442, year: 2012, created_at: "2024-01-04 16:52:38", updated_at: "2024-01-04 16:52:38", sandbox_id: nil, reported_taxon_concept_id: 32442, import_permit_number: "AAA", export_permit_number: "BBB;CCC", origin_permit_number: "EEE", legacy_shipment_number: nil, updated_by_id: 4377, created_by_id: 4377, import_permits_ids: [1296], export_permits_ids: [1297, 1298], origin_permits_ids: [1299], epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
      should == 7
    when searching for sources_ids
      when code
        should include #<Trade::Shipment id: nil, source_id: 3892, unit_id: 3890, purpose_id: 3891, term_id: 3888, quantity: #<BigDecimal:4016feb4a0,'0.2E2',9(27)>, appendix: "I", trade_annual_report_upload_id: nil, exporter_id: 2963, importer_id: 2962, country_of_origin_id: 2962, reported_by_exporter: true, taxon_concept_id: 32496, year: 2012, created_at: "2024-01-04 16:52:40", updated_at: "2024-01-04 16:52:40", sandbox_id: nil, reported_taxon_concept_id: 32496, import_permit_number: "AAA", export_permit_number: "BBB;CCC", origin_permit_number: "EEE", legacy_shipment_number: nil, updated_by_id: 4379, created_by_id: 4379, import_permits_ids: [1310], export_permits_ids: [1311, 1312], origin_permits_ids: [1313], epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
        should == 2
      when blank
        should include #<Trade::Shipment id: nil, source_id: nil, unit_id: nil, purpose_id: 3905, term_id: 3903, quantity: #<BigDecimal:401df56998,'0.5E2',9(27)>, appendix: "II", trade_annual_report_upload_id: nil, exporter_id: 2966, importer_id: 2967, country_of_origin_id: nil, reported_by_exporter: false, taxon_concept_id: 32553, year: 2013, created_at: "2024-01-04 16:52:43", updated_at: "2024-01-04 16:52:43", sandbox_id: nil, reported_taxon_concept_id: 32553, import_permit_number: nil, export_permit_number: nil, origin_permit_number: nil, legacy_shipment_number: nil, updated_by_id: 4381, created_by_id: 4381, import_permits_ids: nil, export_permits_ids: nil, origin_permits_ids: nil, epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
        should == 1
      when both code and blank
        should include #<Trade::Shipment id: nil, source_id: 3920, unit_id: 3918, purpose_id: 3919, term_id: 3916, quantity: #<BigDecimal:4019786d20,'0.2E2',9(27)>, appendix: "I", trade_annual_report_upload_id: nil, exporter_id: 2971, importer_id: 2970, country_of_origin_id: 2970, reported_by_exporter: true, taxon_concept_id: 32604, year: 2012, created_at: "2024-01-04 16:52:45", updated_at: "2024-01-04 16:52:45", sandbox_id: nil, reported_taxon_concept_id: 32604, import_permit_number: "AAA", export_permit_number: "BBB;CCC", origin_permit_number: "EEE", legacy_shipment_number: nil, updated_by_id: 4383, created_by_id: 4383, import_permits_ids: [1338], export_permits_ids: [1339, 1340], origin_permits_ids: [1341], epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
        should == 3
      when wild
        should include #<Trade::Shipment id: nil, source_id: 3935, unit_id: nil, purpose_id: 3933, term_id: 3931, quantity: #<BigDecimal:401fe169f0,'0.25E2',9(27)>, appendix: "II", trade_annual_report_upload_id: nil, exporter_id: 2974, importer_id: 2975, country_of_origin_id: nil, reported_by_exporter: false, taxon_concept_id: 32661, year: 2013, created_at: "2024-01-04 16:52:47", updated_at: "2024-01-04 16:52:47", sandbox_id: nil, reported_taxon_concept_id: 32661, import_permit_number: nil, export_permit_number: nil, origin_permit_number: nil, legacy_shipment_number: nil, updated_by_id: 4385, created_by_id: 4385, import_permits_ids: nil, export_permits_ids: nil, origin_permits_ids: nil, epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
        should == 5
      when wild and internal
        should include #<Trade::Shipment id: nil, source_id: 3949, unit_id: nil, purpose_id: 3947, term_id: 3945, quantity: #<BigDecimal:401a511210,'0.25E2',9(27)>, appendix: "II", trade_annual_report_upload_id: nil, exporter_id: 2978, importer_id: 2979, country_of_origin_id: nil, reported_by_exporter: false, taxon_concept_id: 32715, year: 2013, created_at: "2024-01-04 16:52:49", updated_at: "2024-01-04 16:52:49", sandbox_id: nil, reported_taxon_concept_id: 32715, import_permit_number: nil, export_permit_number: nil, origin_permit_number: nil, legacy_shipment_number: nil, updated_by_id: 4387, created_by_id: 4387, import_permits_ids: nil, export_permits_ids: nil, origin_permits_ids: nil, epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
        should == 4
    when searching for importers_ids
      should include #<Trade::Shipment id: nil, source_id: 3962, unit_id: 3960, purpose_id: 3961, term_id: 3958, quantity: #<BigDecimal:402004ec18,'0.2E2',9(27)>, appendix: "I", trade_annual_report_upload_id: nil, exporter_id: 2983, importer_id: 2982, country_of_origin_id: 2982, reported_by_exporter: true, taxon_concept_id: 32766, year: 2012, created_at: "2024-01-04 16:52:52", updated_at: "2024-01-04 16:52:52", sandbox_id: nil, reported_taxon_concept_id: 32766, import_permit_number: "AAA", export_permit_number: "BBB;CCC", origin_permit_number: "EEE", legacy_shipment_number: nil, updated_by_id: 4389, created_by_id: 4389, import_permits_ids: [1380], export_permits_ids: [1381, 1382], origin_permits_ids: [1383], epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
      should == 2
    when searching for exporters_ids
      should include #<Trade::Shipment id: nil, source_id: 3977, unit_id: 3974, purpose_id: 3975, term_id: 3972, quantity: #<BigDecimal:401b3d2740,'0.1E2',9(27)>, appendix: "II", trade_annual_report_upload_id: nil, exporter_id: 2986, importer_id: 2987, country_of_origin_id: 2987, reported_by_exporter: false, taxon_concept_id: 32823, year: 2013, created_at: "2024-01-04 16:52:54", updated_at: "2024-01-04 16:52:54", sandbox_id: nil, reported_taxon_concept_id: 32823, import_permit_number: nil, export_permit_number: nil, origin_permit_number: nil, legacy_shipment_number: nil, updated_by_id: 4391, created_by_id: 4391, import_permits_ids: nil, export_permits_ids: nil, origin_permits_ids: nil, epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
      should == 5
    when searching for countries_of_origin_ids
      should include #<Trade::Shipment id: nil, source_id: 3990, unit_id: 3988, purpose_id: 3989, term_id: 3986, quantity: #<BigDecimal:40203d1e80,'0.2E2',9(27)>, appendix: "I", trade_annual_report_upload_id: nil, exporter_id: 2991, importer_id: 2990, country_of_origin_id: 2990, reported_by_exporter: true, taxon_concept_id: 32874, year: 2012, created_at: "2024-01-04 16:52:57", updated_at: "2024-01-04 16:52:57", sandbox_id: nil, reported_taxon_concept_id: 32874, import_permit_number: "AAA", export_permit_number: "BBB;CCC", origin_permit_number: "EEE", legacy_shipment_number: nil, updated_by_id: 4393, created_by_id: 4393, import_permits_ids: [1408], export_permits_ids: [1409, 1410], origin_permits_ids: [1411], epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
      should == 2
    when searching by year
      when time range specified
        should include #<Trade::Shipment id: nil, source_id: 4005, unit_id: 4002, purpose_id: 4003, term_id: 4000, quantity: #<BigDecimal:40201e27c8,'0.1E2',9(27)>, appendix: "II", trade_annual_report_upload_id: nil, exporter_id: 2994, importer_id: 2995, country_of_origin_id: 2995, reported_by_exporter: false, taxon_concept_id: 32931, year: 2013, created_at: "2024-01-04 16:52:59", updated_at: "2024-01-04 16:52:59", sandbox_id: nil, reported_taxon_concept_id: 32931, import_permit_number: nil, export_permit_number: nil, origin_permit_number: nil, legacy_shipment_number: nil, updated_by_id: 4395, created_by_id: 4395, import_permits_ids: nil, export_permits_ids: nil, origin_permits_ids: nil, epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
        should == 6
      when time range specified incorrectly
        should == 0
      when time range start specified
        should include #<Trade::Shipment id: nil, source_id: 4025, unit_id: 4023, purpose_id: 4024, term_id: 4021, quantity: #<BigDecimal:401ed7b910,'0.2E2',9(27)>, appendix: "I", trade_annual_report_upload_id: nil, exporter_id: 3001, importer_id: 3000, country_of_origin_id: 3000, reported_by_exporter: true, taxon_concept_id: 33009, year: 2012, created_at: "2024-01-04 16:53:03", updated_at: "2024-01-04 16:53:03", sandbox_id: nil, reported_taxon_concept_id: 33009, import_permit_number: "AAA", export_permit_number: "BBB;CCC", origin_permit_number: "EEE", legacy_shipment_number: nil, updated_by_id: 4398, created_by_id: 4398, import_permits_ids: [1443], export_permits_ids: [1444, 1445], origin_permits_ids: [1446], epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
        should == 7
      when time range end specified
        should include #<Trade::Shipment id: nil, source_id: 4039, unit_id: 4037, purpose_id: 4038, term_id: 4035, quantity: #<BigDecimal:40198c2ef0,'0.2E2',9(27)>, appendix: "I", trade_annual_report_upload_id: nil, exporter_id: 3005, importer_id: 3004, country_of_origin_id: 3004, reported_by_exporter: true, taxon_concept_id: 33063, year: 2012, created_at: "2024-01-04 16:53:05", updated_at: "2024-01-04 16:53:05", sandbox_id: nil, reported_taxon_concept_id: 33063, import_permit_number: "AAA", export_permit_number: "BBB;CCC", origin_permit_number: "EEE", legacy_shipment_number: nil, updated_by_id: 4400, created_by_id: 4400, import_permits_ids: [1457], export_permits_ids: [1458, 1459], origin_permits_ids: [1460], epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
        should == 1
    when searching by reporter_type
      when reporter type is not I or E
        should == 7
      when reporter type is I
        should include #<Trade::Shipment id: nil, source_id: 4061, unit_id: 4058, purpose_id: 4059, term_id: 4056, quantity: #<BigDecimal:401d198e28,'0.1E2',9(27)>, appendix: "II", trade_annual_report_upload_id: nil, exporter_id: 3010, importer_id: 3011, country_of_origin_id: 3011, reported_by_exporter: false, taxon_concept_id: 33147, year: 2013, created_at: "2024-01-04 16:53:08", updated_at: "2024-01-04 16:53:08", sandbox_id: nil, reported_taxon_concept_id: 33147, import_permit_number: nil, export_permit_number: nil, origin_permit_number: nil, legacy_shipment_number: nil, updated_by_id: 4403, created_by_id: 4403, import_permits_ids: nil, export_permits_ids: nil, origin_permits_ids: nil, epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
        should == 5
      when reporter type is E
        should include #<Trade::Shipment id: nil, source_id: 4074, unit_id: 4072, purpose_id: 4073, term_id: 4070, quantity: #<BigDecimal:401244d0c0,'0.2E2',9(27)>, appendix: "I", trade_annual_report_upload_id: nil, exporter_id: 3015, importer_id: 3014, country_of_origin_id: 3014, reported_by_exporter: true, taxon_concept_id: 33198, year: 2012, created_at: "2024-01-04 16:53:11", updated_at: "2024-01-04 16:53:11", sandbox_id: nil, reported_taxon_concept_id: 33198, import_permit_number: "AAA", export_permit_number: "BBB;CCC", origin_permit_number: "EEE", legacy_shipment_number: nil, updated_by_id: 4405, created_by_id: 4405, import_permits_ids: [1492], export_permits_ids: [1493, 1494], origin_permits_ids: [1495], epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
        should == 2
    when searching by permit
      when permit number
        should include #<Trade::Shipment id: nil, source_id: 4088, unit_id: 4086, purpose_id: 4087, term_id: 4084, quantity: #<BigDecimal:401e316740,'0.2E2',9(27)>, appendix: "I", trade_annual_report_upload_id: nil, exporter_id: 3019, importer_id: 3018, country_of_origin_id: 3018, reported_by_exporter: true, taxon_concept_id: 33252, year: 2012, created_at: "2024-01-04 16:53:13", updated_at: "2024-01-04 16:53:13", sandbox_id: nil, reported_taxon_concept_id: 33252, import_permit_number: "AAA", export_permit_number: "BBB;CCC", origin_permit_number: "EEE", legacy_shipment_number: nil, updated_by_id: 4407, created_by_id: 4407, import_permits_ids: [1506], export_permits_ids: [1507, 1508], origin_permits_ids: [1509], epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
        should == 1
      when blank
        should include #<Trade::Shipment id: nil, source_id: 4103, unit_id: 4100, purpose_id: 4101, term_id: 4098, quantity: #<BigDecimal:4012f932e0,'0.1E2',9(27)>, appendix: "II", trade_annual_report_upload_id: nil, exporter_id: 3022, importer_id: 3023, country_of_origin_id: 3023, reported_by_exporter: false, taxon_concept_id: 33309, year: 2013, created_at: "2024-01-04 16:53:15", updated_at: "2024-01-04 16:53:15", sandbox_id: nil, reported_taxon_concept_id: 33309, import_permit_number: nil, export_permit_number: nil, origin_permit_number: nil, legacy_shipment_number: nil, updated_by_id: 4409, created_by_id: 4409, import_permits_ids: nil, export_permits_ids: nil, origin_permits_ids: nil, epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
        should == 5
      when both permit number and blank
        should == 6
    when searching by quantity
      should include #<Trade::Shipment id: nil, source_id: 4123, unit_id: 4121, purpose_id: 4122, term_id: 4119, quantity: #<BigDecimal:401a805f48,'0.2E2',9(27)>, appendix: "I", trade_annual_report_upload_id: nil, exporter_id: 3029, importer_id: 3028, country_of_origin_id: 3028, reported_by_exporter: true, taxon_concept_id: 33387, year: 2012, created_at: "2024-01-04 16:53:19", updated_at: "2024-01-04 16:53:19", sandbox_id: nil, reported_taxon_concept_id: 33387, import_permit_number: "AAA", export_permit_number: "BBB;CCC", origin_permit_number: "EEE", legacy_shipment_number: nil, updated_by_id: 4412, created_by_id: 4412, import_permits_ids: [1541], export_permits_ids: [1542, 1543], origin_permits_ids: [1544], epix_created_at: nil, epix_updated_at: nil, epix_created_by_id: nil, epix_updated_by_id: nil>
      should == 1
  total_cnt
    when none matches
      should == 0
    when one matches
      should == 1
    when two match
      should == 7

Trade::InclusionValidationRule
  matching_records_for_aru_and_error
    example at ./spec/models/trade/inclusion_validation_rule_spec.rb:65 (FAILED - 713)
  refresh_errors_if_needed
    when no updates
      example at ./spec/models/trade/inclusion_validation_rule_spec.rb:104 (FAILED - 714)
    when updates and error fixed for all records
      error record is destroyed (FAILED - 715)
    when updates and error fixed for some records
      error record is updated to reflect new error_count (FAILED - 716)
  validation_errors_for_aru
    species name may have extra whitespace between name segments
      example at ./spec/models/trade/inclusion_validation_rule_spec.rb:148 (FAILED - 717)
    trading partner should be a valid iso code
      example at ./spec/models/trade/inclusion_validation_rule_spec.rb:175 (FAILED - 718)
    term can only be paired with unit as defined by term_trade_codes_pairs table
      when invalid combination
        example at ./spec/models/trade/inclusion_validation_rule_spec.rb:202 (FAILED - 719)
      when required unit blank
        example at ./spec/models/trade/inclusion_validation_rule_spec.rb:214 (FAILED - 720)
    term can only be paired with purpose as defined by term_trade_codes_pairs table
      example at ./spec/models/trade/inclusion_validation_rule_spec.rb:234 (FAILED - 721)
    taxon_concept_id can only be paired with term as defined by trade_taxon_concept_term_pairs table
      when accepted name
        example at ./spec/models/trade/inclusion_validation_rule_spec.rb:255 (FAILED - 722)
      when hybrid
        example at ./spec/models/trade/inclusion_validation_rule_spec.rb:272 (FAILED - 723)

Trade::PermitMatcher
  results
    when searching by permit number
      when regular query
        should include #<Trade::Permit id: 1576, number: "006AAA", created_at: "2024-01-04 16:53:25", updated_at: "2024-01-04 16:53:25">
      when wildcard query
        should include #<Trade::Permit id: 1577, number: "006AAA", created_at: "2024-01-04 16:53:25", updated_at: "2024-01-04 16:53:25">
      when malicious query
        should be empty
      when leading whitespace
        should include #<Trade::Permit id: 1579, number: "006AAA", created_at: "2024-01-04 16:53:25", updated_at: "2024-01-04 16:53:25">
      when trailing whitespace
        should include #<Trade::Permit id: 1580, number: "006AAA", created_at: "2024-01-04 16:53:25", updated_at: "2024-01-04 16:53:25">

Trade::InclusionValidationRule
  validation_errors_for_aru
    when W source and country of origin blank and exporter doesn't match distribution (E)
      example at ./spec/models/trade/pov_inclusion_validation_rule_spec.rb:74 (FAILED - 724)
    when W source and country of origin blank and exporter doesn't match distribution (I)
      example at ./spec/models/trade/pov_inclusion_validation_rule_spec.rb:97 (FAILED - 725)
    when W source and country XX
      example at ./spec/models/trade/pov_inclusion_validation_rule_spec.rb:120 (FAILED - 726)
    when W source and country doesn't match distribution of higher taxa
      example at ./spec/models/trade/pov_inclusion_validation_rule_spec.rb:143 (FAILED - 727)
    when invalid scope specified
      example at ./spec/models/trade/pov_inclusion_validation_rule_spec.rb:160 (FAILED - 728)

Trade::ReportedTaxonConceptResolver
  resolving trade names
    should include #<TaxonConcept id: nil, taxonomy_id: 5844, parent_id: 33518, rank_id: 18677, taxon_name_id: 33471, author_year: nil, legacy_id: nil, legacy_type: nil, data: {"rank_name" => "SPECIES", "kingdom_id" => "33512", "kingdom_name" => "Lupus11571", "phylum_id" => "33513", "phylum_name" => "Lupus11570", "class_id" => "33514", "class_name" => "Lupus11569", "order_id" => "33515", "order_name" => "Lupus11568", "family_id" => "33516", "family_name" => "Lupus11567", "subfamily_id" => "33517", "subfamily_name" => "Lupus11566", "genus_id" => "33518", "genus_name" => "Lupus11565", "species_id" => "33519", "species_name" => "Lupus11564"}, listing: nil, notes: nil, taxonomic_position: "1", full_name: "Lupus11565 lupus11564", name_status: "A", created_at: "2024-01-04 16:53:25", updated_at: "2024-01-04 16:53:25", touched_at: nil, legacy_trade_code: nil, updated_by_id: 4442, created_by_id: 4442, dependents_updated_at: nil, nomenclature_note_en: nil, nomenclature_note_es: nil, nomenclature_note_fr: nil, dependents_updated_by_id: nil, kew_id: nil>
  resolving synonyms
    should include #<TaxonConcept id: nil, taxonomy_id: 5845, parent_id: 33527, rank_id: 18685, taxon_name_id: 33480, author_year: nil, legacy_id: nil, legacy_type: nil, data: {"rank_name" => "SPECIES", "kingdom_id" => "33521", "kingdom_name" => "Lupus11580", "phylum_id" => "33522", "phylum_name" => "Lupus11579", "class_id" => "33523", "class_name" => "Lupus11578", "order_id" => "33524", "order_name" => "Lupus11577", "family_id" => "33525", "family_name" => "Lupus11576", "subfamily_id" => "33526", "subfamily_name" => "Lupus11575", "genus_id" => "33527", "genus_name" => "Lupus11574", "species_id" => "33528", "species_name" => "Lupus11573"}, listing: nil, notes: nil, taxonomic_position: "1", full_name: "Lupus11574 lupus11573", name_status: "A", created_at: "2024-01-04 16:53:26", updated_at: "2024-01-04 16:53:26", touched_at: nil, legacy_trade_code: nil, updated_by_id: 4443, created_by_id: 4443, dependents_updated_at: nil, nomenclature_note_en: nil, nomenclature_note_es: nil, nomenclature_note_fr: nil, dependents_updated_by_id: nil, kew_id: nil>
  resolving accepted names
    should include #<TaxonConcept id: nil, taxonomy_id: 5846, parent_id: 33536, rank_id: 18693, taxon_name_id: 33489, author_year: nil, legacy_id: nil, legacy_type: nil, data: {"rank_name" => "SPECIES", "kingdom_id" => "33530", "kingdom_name" => "Lupus11589", "phylum_id" => "33531", "phylum_name" => "Lupus11588", "class_id" => "33532", "class_name" => "Lupus11587", "order_id" => "33533", "order_name" => "Lupus11586", "family_id" => "33534", "family_name" => "Lupus11585", "subfamily_id" => "33535", "subfamily_name" => "Lupus11584", "genus_id" => "33536", "genus_name" => "Lupus11583", "species_id" => "33537", "species_name" => "Lupus11582"}, listing: nil, notes: nil, taxonomic_position: "1", full_name: "Lupus11583 lupus11582", name_status: "A", created_at: "2024-01-04 16:53:26", updated_at: "2024-01-04 16:53:26", touched_at: nil, legacy_trade_code: nil, updated_by_id: 4444, created_by_id: 4444, dependents_updated_at: nil, nomenclature_note_en: nil, nomenclature_note_es: nil, nomenclature_note_fr: nil, dependents_updated_by_id: nil, kew_id: nil>

Trade::SandboxFilter
  results
sh: 1: psql: not found
    example at ./spec/models/trade/sandbox_filter_spec.rb:64 (FAILED - 729)
sh: 1: psql: not found
    example at ./spec/models/trade/sandbox_filter_spec.rb:65 (FAILED - 730)

Trade::Sandbox
  destroy
    example at ./spec/models/trade/sandbox_spec.rb:47 (FAILED - 731)

Trade::SandboxTemplate
  update
    example at ./spec/models/trade/sandbox_template_spec.rb:56 (FAILED - 732)
  update_batch
    example at ./spec/models/trade/sandbox_template_spec.rb:78 (FAILED - 733)

Trade::InclusionValidationRule
  validation_errors
    when W source and country of origin matches distribution
Procedure: taxonomy
      example at ./spec/models/trade/scoped_inclusion_validation_rule_spec.rb:21 (FAILED - 734)
    when W source and country of origin blank
      example at ./spec/models/trade/scoped_inclusion_validation_rule_spec.rb:48 (FAILED - 735)

Trade::Shipment
  create
    when reporter_type not given
      should have 2 error on :reporter_type
    when appendix valid
      should be valid
    when appendix not valid
      should have 1 error on :appendix
    when permit numbers given
      when export permit
        should == "A"
      when import permit
        should == "B"
      when origin permit
        should == "C"
  secondary validations
    when species name + appendix + year
      invalid
Procedure: taxonomy
        example at ./spec/models/trade/shipment_spec.rb:123 (FAILED - 736)
      invalid
Procedure: taxonomy
        example at ./spec/models/trade/shipment_spec.rb:132 (FAILED - 737)
      valid
Procedure: taxonomy
        example at ./spec/models/trade/shipment_spec.rb:141 (FAILED - 738)
    when species name + appendix N + year
      valid
Procedure: taxonomy
        example at ./spec/models/trade/shipment_spec.rb:163 (FAILED - 739)
    when species name + appendix N + year
      not CITES listed and not EU listed
Procedure: taxonomy
        example at ./spec/models/trade/shipment_spec.rb:184 (FAILED - 740)
    when term + unit
      invalid
        should not be empty
      valid
        should be empty
      blank unit is valid
        should be empty
      blank unit is invalid
        should not be empty
    when term + purpose
      invalid
        should not be empty
      valid
        should be empty
    when species name + term
      invalid
        should not be empty
      valid
        should be empty
    when species name + country of origin
      invalid
        should not be empty
      valid
        should be empty
      blank
        should be empty
    when species name + exporter
      invalid
        should not be empty
      valid
        should be empty
      valid with XX
        should be empty
    when exporter + country of origin
      invalid
        should not be empty
      valid
        should be empty
    when exporter + importer
      invalid
        should not be empty
      valid
        should be empty
    when species name + source code
      invalid
Procedure: taxonomy
        example at ./spec/models/trade/shipment_spec.rb:445 (FAILED - 741)
      valid
Procedure: taxonomy
        example at ./spec/models/trade/shipment_spec.rb:455 (FAILED - 742)

Trade::ShipmentsComptabExport
  total_cnt
    when internal
      example at ./spec/models/trade/shipments_comptab_export_spec.rb:12 (FAILED - 743)
    when public
      example at ./spec/models/trade/shipments_comptab_export_spec.rb:16 (FAILED - 744)
  query
    when internal
      example at ./spec/models/trade/shipments_comptab_export_spec.rb:23 (FAILED - 745)
    when public
      example at ./spec/models/trade/shipments_comptab_export_spec.rb:27 (FAILED - 746)

Trade::ShipmentsExport
  total_cnt
    when internal
      should == 4
    when public
      should == 4
  query
    when internal
      example at ./spec/models/trade/shipments_export_spec.rb:23 (FAILED - 747)
    when public
      example at ./spec/models/trade/shipments_export_spec.rb:27 (FAILED - 748)

Trade::ShipmentsGrossExportsExport
  total_cnt
    when internal
      example at ./spec/models/trade/shipments_gross_exports_export_spec.rb:12 (FAILED - 749)
    when public
      example at ./spec/models/trade/shipments_gross_exports_export_spec.rb:16 (FAILED - 750)
  query
    when internal
      example at ./spec/models/trade/shipments_gross_exports_export_spec.rb:23 (FAILED - 751)
    when public
      example at ./spec/models/trade/shipments_gross_exports_export_spec.rb:27 (FAILED - 752)
    when invalid date range
      This fails on Travis. It started failing after new version of some packages (like PG) have been installed (PENDING: No reason given)

Trade::ShipmentsGrossImportsExport
  total_cnt
    when internal
      example at ./spec/models/trade/shipments_gross_imports_export_spec.rb:12 (FAILED - 753)
    when public
      example at ./spec/models/trade/shipments_gross_imports_export_spec.rb:16 (FAILED - 754)
  query
    when internal
      example at ./spec/models/trade/shipments_gross_imports_export_spec.rb:23 (FAILED - 755)
    when public
      example at ./spec/models/trade/shipments_gross_imports_export_spec.rb:27 (FAILED - 756)
    when invalid date range
      This fails on Travis. It started failing after new version of some packages (like PG) have been installed (PENDING: No reason given)

Trade::ShipmentsNetExportsExport
  total_cnt
    when internal
      example at ./spec/models/trade/shipments_net_exports_export_spec.rb:12 (FAILED - 757)
    when public
      example at ./spec/models/trade/shipments_net_exports_export_spec.rb:16 (FAILED - 758)
  query
    when internal
      example at ./spec/models/trade/shipments_net_exports_export_spec.rb:23 (FAILED - 759)
    when public
      example at ./spec/models/trade/shipments_net_exports_export_spec.rb:27 (FAILED - 760)
    when invalid date range
      This fails on Travis. It started failing after new version of some packages (like PG) have been installed (PENDING: No reason given)

Trade::ShipmentsNetImportsExport
  total_cnt
    when internal
      example at ./spec/models/trade/shipments_net_imports_export_spec.rb:12 (FAILED - 761)
    when public
      example at ./spec/models/trade/shipments_net_imports_export_spec.rb:16 (FAILED - 762)
  query
    when internal
      example at ./spec/models/trade/shipments_net_imports_export_spec.rb:23 (FAILED - 763)
    when public
      example at ./spec/models/trade/shipments_net_imports_export_spec.rb:27 (FAILED - 764)
    when invalid date range
      This fails on Travis. It started failing after new version of some packages (like PG) have been installed (PENDING: No reason given)

Trade::TaxonConceptAppendixYearValidationRule
  validation_errors_for_aru
    when CITES listed
      when split listing
        example at ./spec/models/trade/taxon_concept_appendix_year_validation_rule_spec.rb:77 (FAILED - 765)
      when old listing
        example at ./spec/models/trade/taxon_concept_appendix_year_validation_rule_spec.rb:94 (FAILED - 766)
        example at ./spec/models/trade/taxon_concept_appendix_year_validation_rule_spec.rb:98 (FAILED - 767)
      when appendix N and CITES listed
        example at ./spec/models/trade/taxon_concept_appendix_year_validation_rule_spec.rb:113 (FAILED - 768)
        example at ./spec/models/trade/taxon_concept_appendix_year_validation_rule_spec.rb:117 (FAILED - 769)
      when reported under a synonym, but otherwise fine
        example at ./spec/models/trade/taxon_concept_appendix_year_validation_rule_spec.rb:132 (FAILED - 770)
      when hybrid
        example at ./spec/models/trade/taxon_concept_appendix_year_validation_rule_spec.rb:169 (FAILED - 771)
    when not CITES listed but EU listed
Procedure: taxonomy
      example at ./spec/models/trade/taxon_concept_appendix_year_validation_rule_spec.rb:185 (FAILED - 772)
    when not CITES listed and not EU listed
      example at ./spec/models/trade/taxon_concept_appendix_year_validation_rule_spec.rb:200 (FAILED - 773)

Trade::TaxonConceptSourceValidationRule
  validation_errors_for_aru
    when species name is from Kingdom Animalia, source_code can't be A
      example at ./spec/models/trade/taxon_concept_source_validation_rule_spec.rb:42 (FAILED - 774)
      example at ./spec/models/trade/taxon_concept_source_validation_rule_spec.rb:46 (FAILED - 775)
    when species name is from Kingdom Plantae, source_code can't be C or R
      example at ./spec/models/trade/taxon_concept_source_validation_rule_spec.rb:63 (FAILED - 776)

Trade::ValidationRule
  matching_records_for_aru_and_error
    example at ./spec/models/trade/validation_rule_spec.rb:56 (FAILED - 777)
  refresh_errors_if_needed
    when no updates
      example at ./spec/models/trade/validation_rule_spec.rb:94 (FAILED - 778)
    when updates and error fixed for all records
      error record is destroyed (FAILED - 779)
    when updates and error fixed for some records
      error record is updated to reflect new error_count (FAILED - 780)
  Trade::PresenceValidationRule
    validation_errors_for_aru
      trading_partner should not be blank
        example at ./spec/models/trade/validation_rule_spec.rb:136 (FAILED - 781)
  Trade::NumericalityValidationRule
    validation_errors_for_aru
      quantity should be a number
        example at ./spec/models/trade/validation_rule_spec.rb:157 (FAILED - 782)
  Trade::FormatValidationRule
    validation_errors_for_aru
      year should be a 4 digit value
        example at ./spec/models/trade/validation_rule_spec.rb:174 (FAILED - 783)

TradeRestriction
  export trade restrictions in csv
    filter_is_current
      should return @quota1 if filter set to current
      should return both @quota1 and @quota2 if filter set to "all"
    filter_geo_entities
      should get all quotas if geo_entities filter not set
      should return quota1 and quota3 if geo_entities filter set to @geo_entity1
      should return quota1, quota3, and quota4 if geo_entities filter set to @geo_entity1 and @geo_entity3
    filter_years
      should get all quotas if years filter not set
      should return quota1 and quota3 if years filter set to 2012
      should return quota1, quota3, and quota4 if years filter set to 2012 and 2013

Unit
  destroy
    when no dependent objects attached
      should be truthy
    when dependent objects attached
      when quotas
        should be falsey
      when shipments
        should be falsey

User
  create
    when organisation not given
      should not be valid
  destroy
    when no dependent objects attached
      should be truthy
    when dependent objects attached
      should be falsey
  abilities
    when is a Data Manager
      should be able to :manage and :all
    when is a Data Contributor
      should be able to :create and TaxonConcept(id: integer, taxonomy_id: integer, parent_id: integer, rank_id: integer, taxon_name_id: integer, author_year: string, legacy_id: integer, legacy_type: string, data: hstore, listing: hstore, notes: text, taxonomic_position: string, full_name: string, name_status: string, created_at: datetime, updated_at: datetime, touched_at: datetime, legacy_trade_code: string, updated_by_id: integer, created_by_id: integer, dependents_updated_at: datetime, nomenclature_note_en: text, nomenclature_note_es: text, nomenclature_note_fr: text, dependents_updated_by_id: integer, kew_id: integer)
      should not be able to :destroy and TaxonConcept(id: integer, taxonomy_id: integer, parent_id: integer, rank_id: integer, taxon_name_id: integer, author_year: string, legacy_id: integer, legacy_type: string, data: hstore, listing: hstore, notes: text, taxonomic_position: string, full_name: string, name_status: string, created_at: datetime, updated_at: datetime, touched_at: datetime, legacy_trade_code: string, updated_by_id: integer, created_by_id: integer, dependents_updated_at: datetime, nomenclature_note_en: text, nomenclature_note_es: text, nomenclature_note_fr: text, dependents_updated_by_id: integer, kew_id: integer)
    when is a E-library Viewer
      should not be able to :manage and TaxonConcept(id: integer, taxonomy_id: integer, parent_id: integer, rank_id: integer, taxon_name_id: integer, author_year: string, legacy_id: integer, legacy_type: string, data: hstore, listing: hstore, notes: text, taxonomic_position: string, full_name: string, name_status: string, created_at: datetime, updated_at: datetime, touched_at: datetime, legacy_trade_code: string, updated_by_id: integer, created_by_id: integer, dependents_updated_at: datetime, nomenclature_note_en: text, nomenclature_note_es: text, nomenclature_note_fr: text, dependents_updated_by_id: integer, kew_id: integer)
    when is an API User
      should not be able to :manage and TaxonConcept(id: integer, taxonomy_id: integer, parent_id: integer, rank_id: integer, taxon_name_id: integer, author_year: string, legacy_id: integer, legacy_type: string, data: hstore, listing: hstore, notes: text, taxonomic_position: string, full_name: string, name_status: string, created_at: datetime, updated_at: datetime, touched_at: datetime, legacy_trade_code: string, updated_by_id: integer, created_by_id: integer, dependents_updated_at: datetime, nomenclature_note_en: text, nomenclature_note_es: text, nomenclature_note_fr: text, dependents_updated_by_id: integer, kew_id: integer)
    when is a Secretariat
      should not be able to :create and :all
      should not be able to :update and :all
      should not be able to :destroy and :all
    when is not active
      should not be able to :create and :all
      should not be able to :update and :all
      should not be able to :destroy and :all

Species::ShowTaxonConceptSerializer
  when species is output of recent nomenclature changes (PENDING: No reason given)
  when new species is output of recent nomenclature changes (PENDING: No reason given)
  when species is output of old nomenclature changes
    should eq false
  when species is not output of nomenclature changes
    should eq false
  when nomenclature changes is not yet submitted
    should eq false

EuRegulationActivationWorker
  Set new EU regulation to true
    example at ./spec/workers/eu_regulation_activation_worker_spec.rb:32 (FAILED - 784)
    example at ./spec/workers/eu_regulation_activation_worker_spec.rb:33 (FAILED - 785)
    Set old EU regulation to false
      example at ./spec/workers/eu_regulation_activation_worker_spec.rb:40 (FAILED - 786)
      example at ./spec/workers/eu_regulation_activation_worker_spec.rb:41 (FAILED - 787)

EventListingChangesCopyWorker
  when copy into non-current regulation
    example at ./spec/workers/event_listing_changes_copy_worker_spec.rb:42 (FAILED - 788)
    example at ./spec/workers/event_listing_changes_copy_worker_spec.rb:43 (FAILED - 789)
  when copy into current regulation
    example at ./spec/workers/event_listing_changes_copy_worker_spec.rb:48 (FAILED - 790)
    example at ./spec/workers/event_listing_changes_copy_worker_spec.rb:49 (FAILED - 791)
  when exclusion
    example at ./spec/workers/event_listing_changes_copy_worker_spec.rb:70 (FAILED - 792)
    example at ./spec/workers/event_listing_changes_copy_worker_spec.rb:71 (FAILED - 793)
    example at ./spec/workers/event_listing_changes_copy_worker_spec.rb:72 (FAILED - 794)
    example at ./spec/workers/event_listing_changes_copy_worker_spec.rb:73 (FAILED - 795)

QuotasCopyWorker
  Copy single quota, for a given year
    example at ./spec/workers/quotas_copy_worker_spec.rb:47 (FAILED - 796)
    example at ./spec/workers/quotas_copy_worker_spec.rb:48 (FAILED - 797)
    example at ./spec/workers/quotas_copy_worker_spec.rb:49 (FAILED - 798)
    example at ./spec/workers/quotas_copy_worker_spec.rb:50 (FAILED - 799)
  Try to copy quota from wrong year
    example at ./spec/workers/quotas_copy_worker_spec.rb:59 (FAILED - 800)
    example at ./spec/workers/quotas_copy_worker_spec.rb:60 (FAILED - 801)
    example at ./spec/workers/quotas_copy_worker_spec.rb:61 (FAILED - 802)
  Copy quota when there are no current quotas
    example at ./spec/workers/quotas_copy_worker_spec.rb:70 (FAILED - 803)
    example at ./spec/workers/quotas_copy_worker_spec.rb:71 (FAILED - 804)
    example at ./spec/workers/quotas_copy_worker_spec.rb:72 (FAILED - 805)
  When multiple quotas copy quota for given country
    example at ./spec/workers/quotas_copy_worker_spec.rb:90 (FAILED - 806)
    example at ./spec/workers/quotas_copy_worker_spec.rb:91 (FAILED - 807)
    example at ./spec/workers/quotas_copy_worker_spec.rb:92 (FAILED - 808)
    example at ./spec/workers/quotas_copy_worker_spec.rb:93 (FAILED - 809)
    example at ./spec/workers/quotas_copy_worker_spec.rb:94 (FAILED - 810)
  When multiple quotas copy quota for both countries
    example at ./spec/workers/quotas_copy_worker_spec.rb:112 (FAILED - 811)
    example at ./spec/workers/quotas_copy_worker_spec.rb:113 (FAILED - 812)
    example at ./spec/workers/quotas_copy_worker_spec.rb:114 (FAILED - 813)
    example at ./spec/workers/quotas_copy_worker_spec.rb:115 (FAILED - 814)
    example at ./spec/workers/quotas_copy_worker_spec.rb:116 (FAILED - 815)
  When multiple quotas don't copy quota for given country
    example at ./spec/workers/quotas_copy_worker_spec.rb:134 (FAILED - 816)
    example at ./spec/workers/quotas_copy_worker_spec.rb:135 (FAILED - 817)
    example at ./spec/workers/quotas_copy_worker_spec.rb:136 (FAILED - 818)
    example at ./spec/workers/quotas_copy_worker_spec.rb:137 (FAILED - 819)
    example at ./spec/workers/quotas_copy_worker_spec.rb:138 (FAILED - 820)
  When multiple quotas copy quota for given taxon_concept
    example at ./spec/workers/quotas_copy_worker_spec.rb:155 (FAILED - 821)
    example at ./spec/workers/quotas_copy_worker_spec.rb:156 (FAILED - 822)
    example at ./spec/workers/quotas_copy_worker_spec.rb:157 (FAILED - 823)
    example at ./spec/workers/quotas_copy_worker_spec.rb:158 (FAILED - 824)
    example at ./spec/workers/quotas_copy_worker_spec.rb:159 (FAILED - 825)
  When multiple quotas copy quota for both taxon_concepts
    example at ./spec/workers/quotas_copy_worker_spec.rb:177 (FAILED - 826)
    example at ./spec/workers/quotas_copy_worker_spec.rb:178 (FAILED - 827)
    example at ./spec/workers/quotas_copy_worker_spec.rb:179 (FAILED - 828)
    example at ./spec/workers/quotas_copy_worker_spec.rb:180 (FAILED - 829)
    example at ./spec/workers/quotas_copy_worker_spec.rb:181 (FAILED - 830)
  When multiple quotas don't copy quota for given taxon_concept
    example at ./spec/workers/quotas_copy_worker_spec.rb:198 (FAILED - 831)
    example at ./spec/workers/quotas_copy_worker_spec.rb:199 (FAILED - 832)
    example at ./spec/workers/quotas_copy_worker_spec.rb:200 (FAILED - 833)
    example at ./spec/workers/quotas_copy_worker_spec.rb:201 (FAILED - 834)
    example at ./spec/workers/quotas_copy_worker_spec.rb:202 (FAILED - 835)
  When text to replace passed, should be replaced
    example at ./spec/workers/quotas_copy_worker_spec.rb:222 (FAILED - 836)
    example at ./spec/workers/quotas_copy_worker_spec.rb:223 (FAILED - 837)
    example at ./spec/workers/quotas_copy_worker_spec.rb:224 (FAILED - 838)
    example at ./spec/workers/quotas_copy_worker_spec.rb:225 (FAILED - 839)
    example at ./spec/workers/quotas_copy_worker_spec.rb:226 (FAILED - 840)
    example at ./spec/workers/quotas_copy_worker_spec.rb:227 (FAILED - 841)
    example at ./spec/workers/quotas_copy_worker_spec.rb:228 (FAILED - 842)
    example at ./spec/workers/quotas_copy_worker_spec.rb:229 (FAILED - 843)
  When url passed, should be replaced
    example at ./spec/workers/quotas_copy_worker_spec.rb:245 (FAILED - 844)
    example at ./spec/workers/quotas_copy_worker_spec.rb:246 (FAILED - 845)
    example at ./spec/workers/quotas_copy_worker_spec.rb:247 (FAILED - 846)
    example at ./spec/workers/quotas_copy_worker_spec.rb:248 (FAILED - 847)
    example at ./spec/workers/quotas_copy_worker_spec.rb:249 (FAILED - 848)
    example at ./spec/workers/quotas_copy_worker_spec.rb:250 (FAILED - 849)

SubmissionWorker
  when no primary errors (PENDING: No reason given)
  when primary errors present (PENDING: No reason given)
  when reported under a synonym (PENDING: No reason given)

Pending:
  Admin::NomenclatureChanges::LumpController PUT update when last step when user is manager redirects to nomenclature changes path
    # Strange render mismatch after upgrading to Rails 4
    # ./spec/controllers/admin/nomenclature_changes/lump_controller_spec.rb:113
  Admin::NomenclatureChanges::SplitController PUT update when last step when user is manager redirects to nomenclature changes path
    # Strange render mismatch after upgrading to Rails 4
    # ./spec/controllers/admin/nomenclature_changes/split_controller_spec.rb:166
  Admin::NomenclatureChanges::StatusSwapController PUT update when last step when user is manager redirects to nomenclature changes path
    # Strange render mismatch after upgrading to Rails 4
    # ./spec/controllers/admin/nomenclature_changes/status_swap_controller_spec.rb:107
  Admin::NomenclatureChanges::StatusToAcceptedController PUT update when last step when user is manager redirects to nomenclature changes path
    # Strange render mismatch after upgrading to Rails 4
    # ./spec/controllers/admin/nomenclature_changes/status_to_accepted_controller_spec.rb:80
  Admin::NomenclatureChanges::StatusToSynonymController PUT update when last step when user is manager redirects to nomenclature changes path
    # Strange render mismatch after upgrading to Rails 4
    # ./spec/controllers/admin/nomenclature_changes/status_to_synonym_controller_spec.rb:85
  CitesCaptivityProcess add some examples to (or delete) /SAPI/spec/models/cites_captivity_process_spec.rb
    # Not yet implemented
    # ./spec/models/cites_captivity_process_spec.rb:4
  CmsMapping add some examples to (or delete) /SAPI/spec/models/cms_mapping_spec.rb
    # Not yet implemented
    # ./spec/models/cms_mapping_spec.rb:19
  NomenclatureChange::ReassignmentTransferProcessor run input reassignments when document citations should be empty
    # No reason given
    # ./spec/models/nomenclature_change/reassignment_transfer_processor_spec.rb:40
  Quota validations create doesn't save a quota without a unit
    # No reason given
    # ./spec/models/quota_spec.rb:128
  Species::DocumentsExport export when results when file not cached it should be generated
    # No reason given
    # ./spec/models/species/documents_export_spec.rb:41
  Species::DocumentsExport export when results when file cached it should not be generated
    # No reason given
    # ./spec/models/species/documents_export_spec.rb:46
  Trade::ShipmentsGrossExportsExport query when invalid date range This fails on Travis. It started failing after new version of some packages (like PG) have been installed
    # No reason given
    # ./spec/models/trade/shipments_gross_exports_export_spec.rb:34
  Trade::ShipmentsGrossImportsExport query when invalid date range This fails on Travis. It started failing after new version of some packages (like PG) have been installed
    # No reason given
    # ./spec/models/trade/shipments_gross_imports_export_spec.rb:34
  Trade::ShipmentsNetExportsExport query when invalid date range This fails on Travis. It started failing after new version of some packages (like PG) have been installed
    # No reason given
    # ./spec/models/trade/shipments_net_exports_export_spec.rb:34
  Trade::ShipmentsNetImportsExport query when invalid date range This fails on Travis. It started failing after new version of some packages (like PG) have been installed
    # No reason given
    # ./spec/models/trade/shipments_net_imports_export_spec.rb:34
  Species::ShowTaxonConceptSerializer when species is output of recent nomenclature changes
    # No reason given
    # ./spec/serializers/show_taxon_concept_serializer_spec.rb:5
  Species::ShowTaxonConceptSerializer when new species is output of recent nomenclature changes
    # No reason given
    # ./spec/serializers/show_taxon_concept_serializer_spec.rb:23
  SubmissionWorker when no primary errors
    # No reason given
    # ./spec/workers/submission_worker_spec.rb:31
  SubmissionWorker when primary errors present
    # No reason given
    # ./spec/workers/submission_worker_spec.rb:66
  SubmissionWorker when reported under a synonym
    # No reason given
    # ./spec/workers/submission_worker_spec.rb:84

Failures:

  1) Admin::DocumentsController index GET index search runs a full text search on title
     Failure/Error: get :index, 'title_query' => 'good'
     ActiveRecord::StatementInvalid:
       PG::SyntaxError: ERROR:  syntax error at or near "AS"
       LINE 1: ...simple', ''' ' || 'good' || ' ''' || ':*')), 0))) AS pg_sear...
                                                                    ^
       : SELECT COUNT("documents".*, ((ts_rank((to_tsvector('simple', coalesce("documents"."title"::text, ''))), (to_tsquery('simple', ''' ' || 'good' || ' ''' || ':*')), 0))) AS pg_search_rank) FROM api_documents_mview documents  WHERE (((to_tsvector('simple', coalesce("documents"."title"::text, ''))) @@ (to_tsquery('simple', ''' ' || 'good' || ' ''' || ':*'))))
     # ./app/models/document_search.rb:23:in `total_cnt'
     # ./lib/modules/search_cache.rb:21:in `block in cached_total_cnt'
     # ./lib/modules/search_cache.rb:20:in `cached_total_cnt'
     # ./app/controllers/admin/documents_controller.rb:94:in `collection'
     # ./app/controllers/admin/documents_controller.rb:9:in `index'
     # ./spec/controllers/admin/documents_controller_spec.rb:36:in `block (5 levels) in <top (required)>'

  2) Admin::EventDocumentsController ordering POST update_order updates sort index for collection of documents
     Failure/Error: post :update_order, event_id: event.id, documents: {
     ArgumentError:
       wrong number of arguments (given 2, expected 1)
     # ./app/models/document_collection_order.rb:26:in `block in update'
     # ./app/models/document_collection_order.rb:25:in `each'
     # ./app/models/document_collection_order.rb:25:in `update'
     # ./app/controllers/admin/event_documents_controller.rb:12:in `update_order'
     # ./spec/controllers/admin/event_documents_controller_spec.rb:23:in `block (4 levels) in <top (required)>'

  3) Admin::ExportsController GET download with data_type=Names all returns taxon concepts names file
     Failure/Error: get :download, :data_type => "Names"
     Errno::ENOENT:
       No such file or directory @ rb_file_s_ctime - public/downloads/taxon_concepts_names/628a53e0384bdafba27f4f32cecf7d3f6be3e602en.csv
     # ./app/models/species/csv_copy_export.rb:22:in `ctime'
     # ./app/models/species/csv_copy_export.rb:22:in `export'
     # ./app/controllers/admin/exports_controller.rb:17:in `download'
     # ./spec/controllers/admin/exports_controller_spec.rb:21:in `block (4 levels) in <top (required)>'

  4) Admin::ExportsController GET download with data_type=Names CITES_EU returns CITES_EU taxon concepts names file
     Failure/Error: get :download, :data_type => "Names", :filters => { :taxonomy => 'CITES_EU' }
     Errno::ENOENT:
       No such file or directory @ rb_file_s_ctime - public/downloads/taxon_concepts_names/012908cbadb931457374ec2327abac765060dc37en.csv
     # ./app/models/species/csv_copy_export.rb:22:in `ctime'
     # ./app/models/species/csv_copy_export.rb:22:in `export'
     # ./app/controllers/admin/exports_controller.rb:17:in `download'
     # ./spec/controllers/admin/exports_controller_spec.rb:34:in `block (4 levels) in <top (required)>'

  5) Admin::ExportsController GET download with data_type=Names CMS returns CMS taxon concepts names file
     Failure/Error: get :download, :data_type => "Names", :filters => { :taxonomy => 'CMS' }
     Errno::ENOENT:
       No such file or directory @ rb_file_s_ctime - public/downloads/taxon_concepts_names/c5b9b58f693bbe5fb8f2ef0aa5a22805bc53bdc0en.csv
     # ./app/models/species/csv_copy_export.rb:22:in `ctime'
     # ./app/models/species/csv_copy_export.rb:22:in `export'
     # ./app/controllers/admin/exports_controller.rb:17:in `download'
     # ./spec/controllers/admin/exports_controller_spec.rb:47:in `block (4 levels) in <top (required)>'

  6) Admin::ExportsController GET download with data_type=Distributions all returns taxon concepts distributions file
     Failure/Error: get :download, :data_type => "Distributions"
     Errno::ENOENT:
       No such file or directory @ rb_file_s_ctime - public/downloads/taxon_concepts_distributions/628a53e0384bdafba27f4f32cecf7d3f6be3e602en.csv
     # ./app/models/species/csv_copy_export.rb:22:in `ctime'
     # ./app/models/species/csv_copy_export.rb:22:in `export'
     # ./app/controllers/admin/exports_controller.rb:29:in `download'
     # ./spec/controllers/admin/exports_controller_spec.rb:66:in `block (4 levels) in <top (required)>'

  7) Admin::ExportsController GET download with data_type=Distributions CITES_EU returns CITES_EU taxon concepts distributions file
     Failure/Error: get :download, :data_type => "Distributions", :filters => { :taxonomy => 'CITES_EU' }
     Errno::ENOENT:
       No such file or directory @ rb_file_s_ctime - public/downloads/taxon_concepts_distributions/012908cbadb931457374ec2327abac765060dc37en.csv
     # ./app/models/species/csv_copy_export.rb:22:in `ctime'
     # ./app/models/species/csv_copy_export.rb:22:in `export'
     # ./app/controllers/admin/exports_controller.rb:29:in `download'
     # ./spec/controllers/admin/exports_controller_spec.rb:80:in `block (4 levels) in <top (required)>'

  8) Admin::ExportsController GET download with data_type=Distributions CMS returns CMS taxon concepts distributions file
     Failure/Error: get :download, :data_type => "Distributions", :filters => { :taxonomy => 'CMS' }
     Errno::ENOENT:
       No such file or directory @ rb_file_s_ctime - public/downloads/taxon_concepts_distributions/c5b9b58f693bbe5fb8f2ef0aa5a22805bc53bdc0en.csv
     # ./app/models/species/csv_copy_export.rb:22:in `ctime'
     # ./app/models/species/csv_copy_export.rb:22:in `export'
     # ./app/controllers/admin/exports_controller.rb:29:in `download'
     # ./spec/controllers/admin/exports_controller_spec.rb:94:in `block (4 levels) in <top (required)>'

  9) Api::V1::AutoCompleteTaxonConceptsController GET index returns 1 result when searching for species name and filtering for rank SPECIES
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  10) Api::V1::AutoCompleteTaxonConceptsController GET index returns 3 results when searching for species name and not filtering by rank
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  11) Api::V1::DocumentGeoEntitiesController when searching by taxon concept name returns Poland when searching by wolf
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  12) Api::V1::DocumentGeoEntitiesController when searching by taxon concept name returns 0 geo entities when no match for taxon name
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  13) Api::V1::DocumentGeoEntitiesController when searching by taxon concept name returns all geo entities when no taxon name given
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  14) Api::V1::EventsController GET index returns only E-library events most recent first
     Failure/Error: get :index
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function count(integer, character varying, character varying, timestamp without time zone) does not exist
       LINE 1: SELECT COUNT(id, name, type, published_at) FROM "events"  WH...
                      ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT COUNT(id, name, type, published_at) FROM "events"  WHERE "events"."type" IN ('CitesCop', 'CitesAc', 'CitesPc', 'EcSrg', 'CitesTc', 'CitesExtraordinaryMeeting')
     # ./app/controllers/api/v1/events_controller.rb:10:in `index'
     # ./spec/controllers/api/events_controller_spec.rb:11:in `block (3 levels) in <top (required)>'

  15) Api::V1::PurposesController GET index returns purposes
     Failure/Error: get :index
     ArgumentError:
       wrong number of arguments (given 1, expected 0)
     # ./app/controllers/api/v1/purposes_controller.rb:6:in `index'
     # ./spec/controllers/api/purposes_controller_spec.rb:9:in `block (3 levels) in <top (required)>'

  16) Api::V1::SourcesController GET index returns sources
     Failure/Error: get :index
     ArgumentError:
       wrong number of arguments (given 1, expected 0)
     # ./app/controllers/api/v1/sources_controller.rb:6:in `index'
     # ./spec/controllers/api/sources_controller_spec.rb:9:in `block (3 levels) in <top (required)>'

  17) Api::V1::TaxonConceptsController GET index  logs with Ahoy with different parameters
     Failure/Error: get :index, {
     ActiveRecord::StatementInvalid:
       PG::UndefinedColumn: ERROR:  column taxon_concepts_mview.show_in_species_plus does not exist
       LINE 3: ..._concepts_mview"."taxonomy_is_cites_eu" = 't' AND "taxon_con...
                                                                    ^
       : SELECT  taxon_concepts_mview.*, matching_names.matched_names_ary AS synonyms_ary FROM "taxon_concepts_mview" LEFT JOIN (
               SELECT id, ARRAY_AGG_NOTNULL(matched_name) AS matched_names_ary FROM "auto_complete_taxon_concepts_mview"  WHERE (name_for_matching LIKE 'STORK%' AND type_of_match IN ('SELF','SYNONYM','COMMON_NAME','SUBSPECIES')) GROUP BY "auto_complete_taxon_concepts_mview"."id"
             ) matching_names ON matching_names.id = taxon_concepts_mview.id WHERE "taxon_concepts_mview"."taxonomy_is_cites_eu" = 't' AND "taxon_concepts_mview"."show_in_species_plus" = 't' AND (      EXISTS (
               SELECT * FROM UNNEST(ARRAY[kingdom_name, phylum_name, class_name, order_name, family_name, subfamily_name]) name
               WHERE UPPER(name) LIKE 'STORK%'
             ) OR matching_names.id IS NOT NULL
       )  ORDER BY taxonomic_position LIMIT 25 OFFSET 0
     # ./app/models/species/search.rb:17:in `results'
     # ./lib/modules/search_cache.rb:15:in `block in cached_results'
     # ./lib/modules/search_cache.rb:14:in `cached_results'
     # ./app/controllers/api/v1/taxon_concepts_controller.rb:10:in `index'
     # ./spec/controllers/api/taxon_concepts_controller_spec.rb:7:in `block (4 levels) in <top (required)>'
     # ./spec/controllers/api/taxon_concepts_controller_spec.rb:6:in `block (3 levels) in <top (required)>'

  18) Api::V1::TermsController GET index returns terms
     Failure/Error: get :index
     ArgumentError:
       wrong number of arguments (given 1, expected 0)
     # ./app/controllers/api/v1/terms_controller.rb:6:in `index'
     # ./spec/controllers/api/terms_controller_spec.rb:9:in `block (3 levels) in <top (required)>'

  19) Api::V1::UnitsController GET index returns units
     Failure/Error: get :index
     ArgumentError:
       wrong number of arguments (given 1, expected 0)
     # ./app/controllers/api/v1/units_controller.rb:6:in `index'
     # ./spec/controllers/api/units_controller_spec.rb:9:in `block (3 levels) in <top (required)>'

  20) Checklist::TaxonConceptsController XHR GET JSON autocomplete when searching by accepted name returns 1 result
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/arctocephalus.rb:114:in `block (2 levels) in <top (required)>'

  21) Checklist::TaxonConceptsController XHR GET JSON autocomplete when query blank returns 0 results
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/arctocephalus.rb:114:in `block (2 levels) in <top (required)>'

  22) CitesTrade::ExportsController GET download comptab returns comptab shipments file
     Failure/Error: response.content_type.should eq("text/csv")

       expected: "text/csv"
            got: "text/html"

       (compared using ==)
     # ./spec/controllers/cites_trade/exports_controller_spec.rb:20:in `block (4 levels) in <top (required)>'

  23) CitesTrade::ExportsController GET download comptab logs download information from public interface to the TradeDataDownload model
     Failure/Error: lambda do
       expected #count to have changed by 1, but was changed by 0
     # ./spec/controllers/cites_trade/exports_controller_spec.rb:28:in `block (4 levels) in <top (required)>'

  24) CitesTrade::ShipmentsController GET index should return all comptab shipments
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/cites_trade/shipments_controller_spec.rb:7:in `block (3 levels) in <top (required)>'

  25) CitesTrade::ShipmentsController GET index should return all gross_exports shipments
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/cites_trade/shipments_controller_spec.rb:7:in `block (3 levels) in <top (required)>'

  26) CitesTrade::ShipmentsController GET index should return genus & species shipments when searching by genus
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/cites_trade/shipments_controller_spec.rb:7:in `block (3 levels) in <top (required)>'

  27) CitesTrade::ShipmentsController GET index should return family, genus & species shipments when searching by family
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/cites_trade/shipments_controller_spec.rb:7:in `block (3 levels) in <top (required)>'

  28) CitesTrade::ShipmentsController GET index should return genus shipments when searching by taxon
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/cites_trade/shipments_controller_spec.rb:7:in `block (3 levels) in <top (required)>'

  29) CitesTrade::ShipmentsController GET index serializer should return comptab export when report_type invalid
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/cites_trade/shipments_controller_spec.rb:7:in `block (3 levels) in <top (required)>'

  30) CitesTrade::ShipmentsController GET index serializer should return comptab export when report_type = comptab
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/cites_trade/shipments_controller_spec.rb:7:in `block (3 levels) in <top (required)>'

  31) CitesTrade::ShipmentsController GET index serializer should return gross net export when report_type = gross_exports
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/cites_trade/shipments_controller_spec.rb:7:in `block (3 levels) in <top (required)>'

  32) RegistrationsController when signing up should create an account with the role set to api
     Failure/Error: post :create, :user => {
     ArgumentError:
       wrong number of arguments (given 0, expected 1..2)
     # ./spec/spec_helper.rb:106:in `sign_up'
     # ./spec/controllers/registrations_controller_spec.rb:51:in `block (4 levels) in <top (required)>'
     # ./spec/controllers/registrations_controller_spec.rb:50:in `block (3 levels) in <top (required)>'

  33) Trade::AnnualReportUploadsController GET index should return all annual report uploads
     Failure/Error: @aru.save(:validate => false)
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function resolve_taxa_in_sandbox(unknown, unknown) does not exist
       LINE 1: SELECT * FROM resolve_taxa_in_sandbox('trade_sandbox_23', NU...
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM resolve_taxa_in_sandbox('trade_sandbox_23', NULL)
     # ./app/models/trade/sandbox_template.rb:85:in `sanitize'
     # ./app/models/trade/sandbox.rb:14:in `copy'
     # ./app/models/trade/annual_report_upload.rb:36:in `copy_to_sandbox'
     # ./app/models/trade/annual_report_upload_observer.rb:4:in `after_create'
     # ./spec/controllers/trade/annual_report_uploads_controller_spec.rb:30:in `block (3 levels) in <top (required)>'

  34) Trade::AnnualReportUploadsController GET index should return annual report uploads in progress
     Failure/Error: @aru.save(:validate => false)
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function resolve_taxa_in_sandbox(unknown, unknown) does not exist
       LINE 1: SELECT * FROM resolve_taxa_in_sandbox('trade_sandbox_24', NU...
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM resolve_taxa_in_sandbox('trade_sandbox_24', NULL)
     # ./app/models/trade/sandbox_template.rb:85:in `sanitize'
     # ./app/models/trade/sandbox.rb:14:in `copy'
     # ./app/models/trade/annual_report_upload.rb:36:in `copy_to_sandbox'
     # ./app/models/trade/annual_report_upload_observer.rb:4:in `after_create'
     # ./spec/controllers/trade/annual_report_uploads_controller_spec.rb:30:in `block (3 levels) in <top (required)>'

  35) Trade::AnnualReportUploadsController GET show should return success
     Failure/Error: create(
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function resolve_taxa_in_sandbox(unknown, unknown) does not exist
       LINE 1: SELECT * FROM resolve_taxa_in_sandbox('trade_sandbox_25', NU...
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM resolve_taxa_in_sandbox('trade_sandbox_25', NULL)
     # ./app/models/trade/sandbox_template.rb:85:in `sanitize'
     # ./app/models/trade/sandbox.rb:14:in `copy'
     # ./app/models/trade/annual_report_upload.rb:36:in `copy_to_sandbox'
     # ./app/models/trade/annual_report_upload_observer.rb:4:in `after_create'
     # ./spec/controllers/trade/annual_report_uploads_controller_spec.rb:19:in `block (2 levels) in <top (required)>'
     # ./spec/controllers/trade/annual_report_uploads_controller_spec.rb:47:in `block (3 levels) in <top (required)>'

  36) Trade::AnnualReportUploadsController POST create should return success in jQuery File Upload way
     Failure/Error: xhr :post, :create,
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function resolve_taxa_in_sandbox(unknown, unknown) does not exist
       LINE 1: SELECT * FROM resolve_taxa_in_sandbox('trade_sandbox_26', NU...
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM resolve_taxa_in_sandbox('trade_sandbox_26', NULL)
     # ./app/models/trade/sandbox_template.rb:85:in `sanitize'
     # ./app/models/trade/sandbox.rb:14:in `copy'
     # ./app/models/trade/annual_report_upload.rb:36:in `copy_to_sandbox'
     # ./app/models/trade/annual_report_upload_observer.rb:4:in `after_create'
     # ./app/controllers/trade/annual_report_uploads_controller.rb:26:in `create'
     # ./spec/controllers/trade/annual_report_uploads_controller_spec.rb:54:in `block (3 levels) in <top (required)>'

  37) Trade::SandboxShipmentsController PUT update should return success when taxon_name not set
     Failure/Error: aru.save(:validate => false)
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function resolve_taxa_in_sandbox(unknown, unknown) does not exist
       LINE 1: SELECT * FROM resolve_taxa_in_sandbox('trade_sandbox_27', NU...
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM resolve_taxa_in_sandbox('trade_sandbox_27', NULL)
     # ./app/models/trade/sandbox_template.rb:85:in `sanitize'
     # ./app/models/trade/sandbox.rb:14:in `copy'
     # ./app/models/trade/annual_report_upload.rb:36:in `copy_to_sandbox'
     # ./app/models/trade/annual_report_upload_observer.rb:4:in `after_create'
     # ./spec/controllers/trade/sandbox_shipments_controller_spec.rb:8:in `block (2 levels) in <top (required)>'
     # ./spec/controllers/trade/sandbox_shipments_controller_spec.rb:12:in `block (2 levels) in <top (required)>'
     # ./spec/controllers/trade/sandbox_shipments_controller_spec.rb:22:in `block (2 levels) in <top (required)>'

  38) Trade::SandboxShipmentsController PUT update should return success when taxon_name does not exist
     Failure/Error: aru.save(:validate => false)
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function resolve_taxa_in_sandbox(unknown, unknown) does not exist
       LINE 1: SELECT * FROM resolve_taxa_in_sandbox('trade_sandbox_28', NU...
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM resolve_taxa_in_sandbox('trade_sandbox_28', NULL)
     # ./app/models/trade/sandbox_template.rb:85:in `sanitize'
     # ./app/models/trade/sandbox.rb:14:in `copy'
     # ./app/models/trade/annual_report_upload.rb:36:in `copy_to_sandbox'
     # ./app/models/trade/annual_report_upload_observer.rb:4:in `after_create'
     # ./spec/controllers/trade/sandbox_shipments_controller_spec.rb:8:in `block (2 levels) in <top (required)>'
     # ./spec/controllers/trade/sandbox_shipments_controller_spec.rb:12:in `block (2 levels) in <top (required)>'
     # ./spec/controllers/trade/sandbox_shipments_controller_spec.rb:22:in `block (2 levels) in <top (required)>'

  39) Trade::SandboxShipmentsController DELETE destroy should return success
     Failure/Error: aru.save(:validate => false)
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function resolve_taxa_in_sandbox(unknown, unknown) does not exist
       LINE 1: SELECT * FROM resolve_taxa_in_sandbox('trade_sandbox_29', NU...
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM resolve_taxa_in_sandbox('trade_sandbox_29', NULL)
     # ./app/models/trade/sandbox_template.rb:85:in `sanitize'
     # ./app/models/trade/sandbox.rb:14:in `copy'
     # ./app/models/trade/annual_report_upload.rb:36:in `copy_to_sandbox'
     # ./app/models/trade/annual_report_upload_observer.rb:4:in `after_create'
     # ./spec/controllers/trade/sandbox_shipments_controller_spec.rb:8:in `block (2 levels) in <top (required)>'
     # ./spec/controllers/trade/sandbox_shipments_controller_spec.rb:12:in `block (2 levels) in <top (required)>'
     # ./spec/controllers/trade/sandbox_shipments_controller_spec.rb:22:in `block (2 levels) in <top (required)>'

  40) Trade::SandboxShipmentsController POST update_batch should return success
     Failure/Error: aru.save(:validate => false)
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function resolve_taxa_in_sandbox(unknown, unknown) does not exist
       LINE 1: SELECT * FROM resolve_taxa_in_sandbox('trade_sandbox_30', NU...
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM resolve_taxa_in_sandbox('trade_sandbox_30', NULL)
     # ./app/models/trade/sandbox_template.rb:85:in `sanitize'
     # ./app/models/trade/sandbox.rb:14:in `copy'
     # ./app/models/trade/annual_report_upload.rb:36:in `copy_to_sandbox'
     # ./app/models/trade/annual_report_upload_observer.rb:4:in `after_create'
     # ./spec/controllers/trade/sandbox_shipments_controller_spec.rb:8:in `block (2 levels) in <top (required)>'
     # ./spec/controllers/trade/sandbox_shipments_controller_spec.rb:12:in `block (2 levels) in <top (required)>'
     # ./spec/controllers/trade/sandbox_shipments_controller_spec.rb:22:in `block (2 levels) in <top (required)>'

  41) Trade::SandboxShipmentsController POST destroy_batch should return success
     Failure/Error: aru.save(:validate => false)
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function resolve_taxa_in_sandbox(unknown, unknown) does not exist
       LINE 1: SELECT * FROM resolve_taxa_in_sandbox('trade_sandbox_31', NU...
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM resolve_taxa_in_sandbox('trade_sandbox_31', NULL)
     # ./app/models/trade/sandbox_template.rb:85:in `sanitize'
     # ./app/models/trade/sandbox.rb:14:in `copy'
     # ./app/models/trade/annual_report_upload.rb:36:in `copy_to_sandbox'
     # ./app/models/trade/annual_report_upload_observer.rb:4:in `after_create'
     # ./spec/controllers/trade/sandbox_shipments_controller_spec.rb:8:in `block (2 levels) in <top (required)>'
     # ./spec/controllers/trade/sandbox_shipments_controller_spec.rb:12:in `block (2 levels) in <top (required)>'
     # ./spec/controllers/trade/sandbox_shipments_controller_spec.rb:22:in `block (2 levels) in <top (required)>'

  42) Trade::ShipmentsController GET index should return all shipments
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/trade/shipments_controller_spec.rb:9:in `block (3 levels) in <top (required)>'

  43) Trade::ShipmentsController GET index should return genus & species shipments when searching by genus
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/trade/shipments_controller_spec.rb:9:in `block (3 levels) in <top (required)>'

  44) Trade::ShipmentsController GET index should return 1 shipment when searching for reporter_type I
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/trade/shipments_controller_spec.rb:9:in `block (3 levels) in <top (required)>'

  45) Trade::ShipmentsController PUT update should auto resolve accepted taxon when blank
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/trade/shipments_controller_spec.rb:27:in `block (3 levels) in <top (required)>'

  46) Trade::ShipmentsController PUT update should not auto resolve accepted taxon when given
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/trade/shipments_controller_spec.rb:27:in `block (3 levels) in <top (required)>'

  47) Trade::ShipmentsController PUT update should delete orphaned permits
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/trade/shipments_controller_spec.rb:27:in `block (3 levels) in <top (required)>'

  48) Trade::ShipmentsController POST update_batch should change reporter type from I to E
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/trade/shipments_controller_spec.rb:53:in `block (3 levels) in <top (required)>'

  49) Trade::ShipmentsController POST update_batch should change reporter type from E to I
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/trade/shipments_controller_spec.rb:53:in `block (3 levels) in <top (required)>'

  50) Trade::ShipmentsController POST update_batch should update year
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/trade/shipments_controller_spec.rb:53:in `block (3 levels) in <top (required)>'

  51) Trade::ShipmentsController POST update_batch should auto resolve accepted taxon when blank
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/trade/shipments_controller_spec.rb:53:in `block (3 levels) in <top (required)>'

  52) Trade::ShipmentsController POST update_batch should not auto resolve accepted taxon when given
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/trade/shipments_controller_spec.rb:53:in `block (3 levels) in <top (required)>'

  53) Trade::ShipmentsController POST update_batch should set permit number to blank and delete orphaned permits
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/trade/shipments_controller_spec.rb:53:in `block (3 levels) in <top (required)>'

  54) Trade::ShipmentsController POST destroy_batch should delete 1 shipment
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/trade/shipments_controller_spec.rb:160:in `block (3 levels) in <top (required)>'

  55) Trade::ShipmentsController POST destroy_batch should delete 5 shipment
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/trade/shipments_controller_spec.rb:160:in `block (3 levels) in <top (required)>'

  56) Trade::ShipmentsController POST destroy_batch should delete 2 shipments
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/trade/shipments_controller_spec.rb:160:in `block (3 levels) in <top (required)>'

  57) Trade::ShipmentsController POST destroy_batch should delete 1 shipments
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/trade/shipments_controller_spec.rb:160:in `block (3 levels) in <top (required)>'

  58) Trade::ShipmentsController POST destroy_batch should delete all shipments
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/trade/shipments_controller_spec.rb:160:in `block (3 levels) in <top (required)>'

  59) Trade::ShipmentsController POST destroy_batch shouldn't delete any shipments
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/trade/shipments_controller_spec.rb:160:in `block (3 levels) in <top (required)>'

  60) Trade::ShipmentsController POST destroy_batch should delete 1 shipment
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/trade/shipments_controller_spec.rb:160:in `block (3 levels) in <top (required)>'

  61) Trade::ShipmentsController POST destroy_batch should delete 3 shipment
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/trade/shipments_controller_spec.rb:160:in `block (3 levels) in <top (required)>'

  62) Trade::ShipmentsController POST destroy_batch should delete 0 shipments
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/trade/shipments_controller_spec.rb:160:in `block (3 levels) in <top (required)>'

  63) Trade::ShipmentsController POST destroy_batch should delete 4 shipments
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/trade/shipments_controller_spec.rb:160:in `block (3 levels) in <top (required)>'

  64) Trade::ShipmentsController POST destroy_batch should delete orphaned permits
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/trade/shipments_controller_spec.rb:160:in `block (3 levels) in <top (required)>'

  65) Trade::ShipmentsController DELETE destroy should delete 1 shipment
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/trade/shipments_controller_spec.rb:240:in `block (3 levels) in <top (required)>'

  66) Trade::ShipmentsController DELETE destroy should delete orphaned permits
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/controllers/trade/shipments_controller_spec.rb:240:in `block (3 levels) in <top (required)>'

  67) Trade::ValidationErrorsController PUT update should update is_ignored
     Failure/Error: aru.save(:validate => false)
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function resolve_taxa_in_sandbox(unknown, unknown) does not exist
       LINE 1: SELECT * FROM resolve_taxa_in_sandbox('trade_sandbox_32', NU...
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM resolve_taxa_in_sandbox('trade_sandbox_32', NULL)
     # ./app/models/trade/sandbox_template.rb:85:in `sanitize'
     # ./app/models/trade/sandbox.rb:14:in `copy'
     # ./app/models/trade/annual_report_upload.rb:36:in `copy_to_sandbox'
     # ./app/models/trade/annual_report_upload_observer.rb:4:in `after_create'
     # ./spec/controllers/trade/validation_errors_controller_spec.rb:8:in `block (2 levels) in <top (required)>'
     # ./spec/controllers/trade/validation_errors_controller_spec.rb:12:in `block (2 levels) in <top (required)>'
     # ./spec/controllers/trade/validation_errors_controller_spec.rb:15:in `block (2 levels) in <top (required)>'

  68) Trade::ValidationErrorsController GET show should return success
     Failure/Error: aru.save(:validate => false)
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function resolve_taxa_in_sandbox(unknown, unknown) does not exist
       LINE 1: SELECT * FROM resolve_taxa_in_sandbox('trade_sandbox_33', NU...
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM resolve_taxa_in_sandbox('trade_sandbox_33', NULL)
     # ./app/models/trade/sandbox_template.rb:85:in `sanitize'
     # ./app/models/trade/sandbox.rb:14:in `copy'
     # ./app/models/trade/annual_report_upload.rb:36:in `copy_to_sandbox'
     # ./app/models/trade/annual_report_upload_observer.rb:4:in `after_create'
     # ./spec/controllers/trade/validation_errors_controller_spec.rb:8:in `block (2 levels) in <top (required)>'
     # ./spec/controllers/trade/validation_errors_controller_spec.rb:12:in `block (2 levels) in <top (required)>'
     # ./spec/controllers/trade/validation_errors_controller_spec.rb:15:in `block (2 levels) in <top (required)>'

  69) ApiRequest recent_requests
     Failure/Error: ApiRequest.recent_requests
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function count(integer, timestamp without time zone) does not exist
       LINE 1: SELECT COUNT(response_status, created_at) AS count_response_...
                      ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT COUNT(response_status, created_at) AS count_response_status_created_at, response_status AS response_status, (DATE_TRUNC('day', (created_at::timestamptz - INTERVAL '0 hour') AT TIME ZONE 'Etc/UTC') + INTERVAL '0 hour') AT TIME ZONE 'Etc/UTC' AS day FROM "api_requests"  WHERE (created_at > '2023-07-04 16:44:03.572201') AND (created_at IS NOT NULL) GROUP BY "api_requests"."response_status", (DATE_TRUNC('day', (created_at::timestamptz - INTERVAL '0 hour') AT TIME ZONE 'Etc/UTC') + INTERVAL '0 hour') AT TIME ZONE 'Etc/UTC'  ORDER BY "api_requests"."response_status" ASC
     # ./app/models/api_request.rb:50:in `recent_requests'
     # ./spec/models/api_request_spec.rb:61:in `block (3 levels) in <top (required)>'
     # ./spec/models/api_request_spec.rb:64:in `block (3 levels) in <top (required)>'

  70) Checklist ann_symbol for species Caiman latirostris
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/panax_ginseng.rb:88:in `block (2 levels) in <top (required)>'

  71) Checklist ann_symbol for species Panax ginseng
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/panax_ginseng.rb:88:in `block (2 levels) in <top (required)>'

  72) Checklist search by cites populations when America
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pecari_tajacu.rb:109:in `block (2 levels) in <top (required)>'

  73) Checklist search by cites populations when Mexico
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pecari_tajacu.rb:109:in `block (2 levels) in <top (required)>'

  74) Checklist search by cites populations when Canada
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pecari_tajacu.rb:109:in `block (2 levels) in <top (required)>'

  75) Checklist search by cites populations when Argentina
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pecari_tajacu.rb:109:in `block (2 levels) in <top (required)>'

  76) Checklist search by cites populations when South America
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pecari_tajacu.rb:109:in `block (2 levels) in <top (required)>'

  77) Checklist search by cites populations when North America
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pecari_tajacu.rb:109:in `block (2 levels) in <top (required)>'

  78) Checklist search by cites populations when North America and Argentina
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pecari_tajacu.rb:109:in `block (2 levels) in <top (required)>'

  79) Checklist search by cites populations when Nepal
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  80) Checklist search by cites populations when Poland
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  81) Checklist search by cites appendices when App I
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  82) Checklist search by cites appendices when App II
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  83) Checklist search by cites appendices when App III
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  84) Checklist search by cites populations and appendices when Nepal when App I
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  85) Checklist search by cites populations and appendices when Nepal when App II
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  86) Checklist search by cites populations and appendices when Poland when App I
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  87) Checklist search by cites populations and appendices when Poland when App II
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  88) Checklist search by cites populations and appendices when Poland or Nepal when App I
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  89) Checklist search by cites populations and appendices when Poland or Nepal when App II
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  90) Checklist search by cites populations and appendices when App I or II when Poland
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  91) Checklist search by cites populations and appendices when App I or II when Nepal
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  92) Checklist when filtering by appendix I should return Cacatua goffiniana
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  93) Checklist when filtering by appendix I should not return Agapornis roseicollis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  94) Checklist when common names displayed should return all English names for Arctocephalus australis: 'South American Fur Seal, Southern Fur Seal'
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/arctocephalus.rb:114:in `block (2 levels) in <top (required)>'

  95) Checklist when common names displayed should return all Spanish names for Arctocephalus australis: 'Lobo fino sudamericano, Oso marino austral'
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/arctocephalus.rb:114:in `block (2 levels) in <top (required)>'

  96) Checklist when common names displayed should return all French names for Arctocephalus australis: 'Otarie à fourrure australe'
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/arctocephalus.rb:114:in `block (2 levels) in <top (required)>'

  97) Checklist when common names displayed should return all English names for Arctocephalus spp.: 'Fur seals, Southern fur seals'
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/arctocephalus.rb:114:in `block (2 levels) in <top (required)>'

  98) Checklist when common names displayed should return all Spanish names for Arctocephalus spp.: 'Osos marinos'
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/arctocephalus.rb:114:in `block (2 levels) in <top (required)>'

  99) Checklist when common names displayed should return all French names for Arctocephalus spp.: 'Arctocéphales du sud, Otaries à fourrure, Otaries à fourrure du sud'
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/arctocephalus.rb:114:in `block (2 levels) in <top (required)>'

  100) Checklist when common names displayed should include a species without any common names defined
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/arctocephalus.rb:114:in `block (2 levels) in <top (required)>'

  101) Checklist::HigherTaxaInjector run when same phylum when two species from different classes
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/higher_taxa_injector_spec.rb:96:in `block (2 levels) in <top (required)>'

  102) Checklist::HigherTaxaInjector run when same phylum when two species from different classes and expand_headers set
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/higher_taxa_injector_spec.rb:96:in `block (2 levels) in <top (required)>'

  103) Checklist::HigherTaxaInjector run when same order when two species from different families
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/higher_taxa_injector_spec.rb:96:in `block (2 levels) in <top (required)>'

  104) Checklist::HigherTaxaInjector run when same order when two species from different families and skip family set
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/higher_taxa_injector_spec.rb:96:in `block (2 levels) in <top (required)>'

  105) Checklist::HigherTaxaInjector higher_taxa_headers when same genus when one species
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/higher_taxa_injector_spec.rb:96:in `block (2 levels) in <top (required)>'

  106) Checklist::HigherTaxaInjector higher_taxa_headers when same genus when one species and skip family set
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/higher_taxa_injector_spec.rb:96:in `block (2 levels) in <top (required)>'

  107) Checklist::HigherTaxaInjector higher_taxa_headers when same genus when one species and expand headers set
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/higher_taxa_injector_spec.rb:96:in `block (2 levels) in <top (required)>'

  108) Checklist::HigherTaxaInjector higher_taxa_headers when same genus when two species
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/higher_taxa_injector_spec.rb:96:in `block (2 levels) in <top (required)>'

  109) Checklist::HigherTaxaInjector higher_taxa_headers when same genus when species and subspecies
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/higher_taxa_injector_spec.rb:96:in `block (2 levels) in <top (required)>'

  110) Checklist::HigherTaxaInjector higher_taxa_headers when same family when two species from different genera
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/higher_taxa_injector_spec.rb:96:in `block (2 levels) in <top (required)>'

  111) Checklist::HigherTaxaInjector higher_taxa_headers when same order when two species from different families
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/higher_taxa_injector_spec.rb:96:in `block (2 levels) in <top (required)>'

  112) Checklist::HigherTaxaInjector higher_taxa_headers when same order when two species from different families and expand headers set
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/higher_taxa_injector_spec.rb:96:in `block (2 levels) in <top (required)>'

  113) Checklist::HigherTaxaInjector higher_taxa_headers when same order when genus and different family
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/higher_taxa_injector_spec.rb:96:in `block (2 levels) in <top (required)>'

  114) Checklist::HigherTaxaInjector higher_taxa_headers when same order when family and genus in different family
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/higher_taxa_injector_spec.rb:96:in `block (2 levels) in <top (required)>'

  115) Checklist::HigherTaxaInjector higher_taxa_headers when same class when order and genus from different order
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/higher_taxa_injector_spec.rb:96:in `block (2 levels) in <top (required)>'

  116) Checklist::HigherTaxaInjector higher_taxa_headers when same class when order and genus from different order and expand headers set
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/higher_taxa_injector_spec.rb:96:in `block (2 levels) in <top (required)>'

  117) Checklist when taxonomic order Plantae should include Agave (Agavaceae) before Panax (Araliaceae)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/tapiridae.rb:47:in `block (2 levels) in <top (required)>'

  118) Checklist when taxonomic order Animalia should include birds after last mammal
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/tapiridae.rb:47:in `block (2 levels) in <top (required)>'

  119) Checklist when taxonomic order Animalia should include Falconiformes (Aves) before Psittaciformes (Aves)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/tapiridae.rb:47:in `block (2 levels) in <top (required)>'

  120) Checklist when taxonomic order Animalia should include Cathartidae within Falconiformes
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/tapiridae.rb:47:in `block (2 levels) in <top (required)>'

  121) Checklist when taxonomic order Animalia should include Cathartidae (Falconiformes) before Falconidae (Falconiformes)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/tapiridae.rb:47:in `block (2 levels) in <top (required)>'

  122) Checklist when taxonomic order Animalia should include Cathartidae (Falconiformes) before Cacatuidae (Psittaciformes)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/tapiridae.rb:47:in `block (2 levels) in <top (required)>'

  123) Checklist when taxonomic order Animalia should include Hirudo medicinalis at the very end (after all Chordata)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/tapiridae.rb:47:in `block (2 levels) in <top (required)>'

  124) Checklist when alphabetical order should include Falconiformes (Aves) before Psittaciformes (Aves)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/tapiridae.rb:47:in `block (2 levels) in <top (required)>'

  125) Checklist when alphabetical order should include Cathartidae before Falconiformes
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/tapiridae.rb:47:in `block (2 levels) in <top (required)>'

  126) Checklist when alphabetical order should include Cathartidae (Falconiformes) before Falconidae (Falconiformes)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/tapiridae.rb:47:in `block (2 levels) in <top (required)>'

  127) Checklist when alphabetical order should include Cathartidae (Falconiformes) after Cacatuidae (Psittaciformes)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/tapiridae.rb:47:in `block (2 levels) in <top (required)>'

  128) Checklist::Pdf::HistoryAnnotationsKey hash_annotations_key
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/pdf/history_annotations_key_spec.rb:56:in `block (3 levels) in <top (required)>'

  129) Checklist::Pdf::History higher_taxon_name when family
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/pdf/history_spec.rb:11:in `block (2 levels) in <top (required)>'
     # ./spec/models/checklist/pdf/history_spec.rb:24:in `block (4 levels) in <top (required)>'
     # ./spec/models/checklist/pdf/history_spec.rb:28:in `block (4 levels) in <top (required)>'

  130) Checklist::Pdf::History listed_taxon_name when family
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/pdf/history_spec.rb:11:in `block (2 levels) in <top (required)>'
     # ./spec/models/checklist/pdf/history_spec.rb:46:in `block (4 levels) in <top (required)>'
     # ./spec/models/checklist/pdf/history_spec.rb:49:in `block (4 levels) in <top (required)>'

  131) Checklist::Pdf::History listed_taxon_name when genus
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/pdf/history_spec.rb:11:in `block (2 levels) in <top (required)>'
     # ./spec/models/checklist/pdf/history_spec.rb:16:in `block (2 levels) in <top (required)>'
     # ./spec/models/checklist/pdf/history_spec.rb:61:in `block (4 levels) in <top (required)>'
     # ./spec/models/checklist/pdf/history_spec.rb:64:in `block (4 levels) in <top (required)>'

  132) Checklist::Pdf::History annotation_for_language annotation with footnote
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/pdf/history_spec.rb:11:in `block (2 levels) in <top (required)>'
     # ./spec/models/checklist/pdf/history_spec.rb:16:in `block (2 levels) in <top (required)>'
     # ./spec/models/checklist/pdf/history_spec.rb:87:in `block (4 levels) in <top (required)>'
     # ./spec/models/checklist/pdf/history_spec.rb:90:in `block (4 levels) in <top (required)>'
     # ./spec/models/checklist/pdf/history_spec.rb:100:in `block (4 levels) in <top (required)>'

  133) Checklist::Pdf::IndexAnnotationsKey hash_annotations_key
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/pdf/index_annotations_key_spec.rb:43:in `block (3 levels) in <top (required)>'

  134) Checklist::Pdf::IndexAnnotationsKey non_hash_annotations_key
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/pdf/index_annotations_key_spec.rb:99:in `block (3 levels) in <top (required)>'

  135) Checklist::Pdf::IndexFetcher with common names
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/pdf/index_fetcher_spec.rb:34:in `block (2 levels) in <top (required)>'

  136) Checklist::Pdf::IndexFetcher with synonyms and authors
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/pdf/index_fetcher_spec.rb:34:in `block (2 levels) in <top (required)>'

  137) Checklist when filtering by name by scientific name
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/arctocephalus.rb:114:in `block (2 levels) in <top (required)>'

  138) Checklist when filtering by name by common name
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/arctocephalus.rb:114:in `block (2 levels) in <top (required)>'

  139) Checklist when synonyms displayed should return Alligator cynocephalus as synonym for Caiman latirostris
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/caiman_latirostris.rb:155:in `block (2 levels) in <top (required)>'

  140) Species::TaxonConceptPrefixMatcher results when query in capital letters
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  141) Species::TaxonConceptPrefixMatcher results when match on accepted name
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  142) Species::TaxonConceptPrefixMatcher results when match on synonym
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  143) Species::TaxonConceptPrefixMatcher results when match on common name
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  144) Checklist::Timeline when deleted
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timeline_spec.rb:17:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:20:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:21:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:23:in `block (3 levels) in <top (required)>'

  145) Checklist::Timeline when deleted
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timeline_spec.rb:17:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:20:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:21:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:24:in `block (3 levels) in <top (required)>'

  146) Checklist::Timeline when deleted
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timeline_spec.rb:17:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:20:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:21:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:25:in `block (3 levels) in <top (required)>'

  147) Checklist::Timeline when deleted from III multiple times
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timeline_spec.rb:77:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:80:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:81:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:83:in `block (3 levels) in <top (required)>'

  148) Checklist::Timeline when deleted from III multiple times
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timeline_spec.rb:77:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:80:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:81:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:84:in `block (3 levels) in <top (required)>'

  149) Checklist::Timeline when deleted from III multiple times
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timeline_spec.rb:77:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:80:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:81:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:85:in `block (3 levels) in <top (required)>'

  150) Checklist::Timeline when deleted and then readded
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timeline_spec.rb:106:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:109:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:110:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:112:in `block (3 levels) in <top (required)>'

  151) Checklist::Timeline when deleted and then readded
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timeline_spec.rb:106:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:109:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:110:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:113:in `block (3 levels) in <top (required)>'

  152) Checklist::Timeline when deleted and then readded
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timeline_spec.rb:106:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:109:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:110:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:114:in `block (3 levels) in <top (required)>'

  153) Checklist::Timeline when reservation withdrawn
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timeline_spec.rb:148:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:151:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:152:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:154:in `block (3 levels) in <top (required)>'

  154) Checklist::Timeline when reservation withdrawn
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timeline_spec.rb:148:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:151:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:152:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:155:in `block (3 levels) in <top (required)>'

  155) Checklist::Timeline when reservation withdrawn
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timeline_spec.rb:148:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:151:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:152:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:156:in `block (3 levels) in <top (required)>'

  156) Checklist::Timeline when reservation withdrawn and then readded
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timeline_spec.rb:196:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:199:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:200:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:202:in `block (3 levels) in <top (required)>'

  157) Checklist::Timeline when reservation withdrawn and then readded
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timeline_spec.rb:196:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:199:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:200:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:203:in `block (3 levels) in <top (required)>'

  158) Checklist::Timeline when reservation withdrawn and then readded
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timeline_spec.rb:196:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:199:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:200:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:204:in `block (3 levels) in <top (required)>'

  159) Checklist::Timeline when reservation withdrawn and then readded
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timeline_spec.rb:196:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:199:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:200:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:205:in `block (3 levels) in <top (required)>'

  160) Checklist::Timeline when added multiple times
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timeline_spec.rb:221:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:224:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:225:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:228:in `block (3 levels) in <top (required)>'

  161) Checklist::Timeline when added multiple times
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timeline_spec.rb:221:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:224:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:225:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:231:in `block (3 levels) in <top (required)>'

  162) Checklist::Timeline when added multiple times
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timeline_spec.rb:221:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:224:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:225:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:232:in `block (3 levels) in <top (required)>'

  163) Checklist::Timeline when automatic deletion from ancestor listing
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timeline_spec.rb:250:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:253:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:254:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:257:in `block (3 levels) in <top (required)>'

  164) Checklist::Timeline when automatic deletion from ancestor listing
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timeline_spec.rb:250:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:253:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:254:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:260:in `block (3 levels) in <top (required)>'

  165) Checklist::Timeline when automatic deletion from ancestor listing
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timeline_spec.rb:250:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:253:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:254:in `block (3 levels) in <top (required)>'
     # ./spec/models/checklist/timeline_spec.rb:261:in `block (3 levels) in <top (required)>'

  166) Checklist::TimelinesForTaxonConcept timelines when Appendix I
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:21:in `block (4 levels) in <top (required)>'
     # ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:24:in `block (4 levels) in <top (required)>'
     # ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:25:in `block (4 levels) in <top (required)>'

  167) Checklist::TimelinesForTaxonConcept timelines when Appendix I
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:21:in `block (4 levels) in <top (required)>'
     # ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:24:in `block (4 levels) in <top (required)>'
     # ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:26:in `block (4 levels) in <top (required)>'

  168) Checklist::TimelinesForTaxonConcept timelines when Appendix III
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:42:in `block (4 levels) in <top (required)>'
     # ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:45:in `block (4 levels) in <top (required)>'
     # ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:46:in `block (4 levels) in <top (required)>'

  169) Checklist::TimelinesForTaxonConcept timelines when Appendix III
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:42:in `block (4 levels) in <top (required)>'
     # ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:45:in `block (4 levels) in <top (required)>'
     # ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:47:in `block (4 levels) in <top (required)>'

  170) Checklist::TimelinesForTaxonConcept timelines when Appendix III reservation
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:63:in `block (4 levels) in <top (required)>'
     # ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:66:in `block (4 levels) in <top (required)>'
     # ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:67:in `block (4 levels) in <top (required)>'

  171) Checklist::TimelinesForTaxonConcept timelines when Appendix III reservation
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:63:in `block (4 levels) in <top (required)>'
     # ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:66:in `block (4 levels) in <top (required)>'
     # ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:68:in `block (4 levels) in <top (required)>'

  172) Checklist::TimelinesForTaxonConcept timelines when Appendix III reservation
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:63:in `block (4 levels) in <top (required)>'
     # ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:66:in `block (4 levels) in <top (required)>'
     # ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:69:in `block (4 levels) in <top (required)>'

  173) Checklist::TimelinesForTaxonConcept timeline_years when in 1990
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:77:in `block (4 levels) in <top (required)>'
     # ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:80:in `block (4 levels) in <top (required)>'
     # ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:81:in `block (4 levels) in <top (required)>'

  174) Checklist::TimelinesForTaxonConcept timeline_years when in 1990
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:77:in `block (4 levels) in <top (required)>'
     # ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:80:in `block (4 levels) in <top (required)>'
     # ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:82:in `block (4 levels) in <top (required)>'

  175) Checklist::TimelinesForTaxonConcept timeline_years when in 1990
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:77:in `block (4 levels) in <top (required)>'
     # ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:80:in `block (4 levels) in <top (required)>'
     # ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:83:in `block (4 levels) in <top (required)>'

  176) CitesSuspensionNotification destroy when dependent objects attached when confirmation notification, make sure it gets destroyed
     Failure/Error: create(
     ActiveRecord::StatementInvalid:
       PG::NotNullViolation: ERROR:  null value in column "cites_suspension_id" violates not-null constraint
       DETAIL:  Failing row contains (2, null, 1739, 2024-01-04 16:44:41.516933, 2024-01-04 16:44:41.516933).
       : INSERT INTO "cites_suspension_confirmations" ("cites_suspension_notification_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"
     # ./spec/models/cites_suspension_notification_spec.rb:78:in `block (5 levels) in <top (required)>'

  177) DashboardStats#species has one results for argentina
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/caiman_latirostris.rb:155:in `block (2 levels) in <top (required)>'

  178) DashboardStats#species has no results for ghana
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/caiman_latirostris.rb:155:in `block (2 levels) in <top (required)>'

  179) DashboardStats#trade when no time range specified argentina should have 40 exported animals and no imports
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/dashboard_stats_trade_spec.rb:7:in `block (3 levels) in <top (required)>'

  180) DashboardStats#trade when time range specified argentina should have no exports in 2012-2012
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/dashboard_stats_trade_spec.rb:7:in `block (3 levels) in <top (required)>'

  181) EuDecision create downloads cache should be populated
     Failure/Error: Species::EuDecisionsExport.new(set: 'current', decision_types: {}).export
     Errno::ENOENT:
       No such file or directory @ rb_file_s_ctime - public/downloads/eu_decisions/e05a5d836ef2cebd490f1835302bc80c28434a26en.csv
     # ./app/models/species/csv_copy_export.rb:22:in `ctime'
     # ./app/models/species/csv_copy_export.rb:22:in `export'
     # ./spec/models/eu_decision_spec.rb:65:in `block (4 levels) in <top (required)>'

  182) NomenclatureChange::ReassignmentCopyProcessor run when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 26385 AND "listing_changes"."species_listing_id" = 2847 AND "listing_changes"."change_type_id" = 4481 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2500 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:57:in `copied_object_before_save'
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  183) NomenclatureChange::ReassignmentCopyProcessor run when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 26395 AND "listing_changes"."species_listing_id" = 2850 AND "listing_changes"."change_type_id" = 4486 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2502 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:57:in `copied_object_before_save'
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  184) NomenclatureChange::ReassignmentCopyProcessor run when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 26405 AND "listing_changes"."species_listing_id" = 2853 AND "listing_changes"."change_type_id" = 4491 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2504 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:57:in `copied_object_before_save'
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  185) NomenclatureChange::ReassignmentCopyProcessor run when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 26415 AND "listing_changes"."species_listing_id" = 2856 AND "listing_changes"."change_type_id" = 4496 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2506 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:57:in `copied_object_before_save'
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  186) NomenclatureChange::ReassignmentCopyProcessor run when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 26425 AND "listing_changes"."species_listing_id" = 2859 AND "listing_changes"."change_type_id" = 4501 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2508 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:57:in `copied_object_before_save'
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  187) NomenclatureChange::ReassignmentCopyProcessor run when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 26435 AND "listing_changes"."species_listing_id" = 2862 AND "listing_changes"."change_type_id" = 4506 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2510 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:57:in `copied_object_before_save'
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  188) NomenclatureChange::ReassignmentCopyProcessor run when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 26445 AND "listing_changes"."species_listing_id" = 2865 AND "listing_changes"."change_type_id" = 4511 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2512 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:57:in `copied_object_before_save'
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  189) NomenclatureChange::ReassignmentCopyProcessor run when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 26455 AND "listing_changes"."species_listing_id" = 2868 AND "listing_changes"."change_type_id" = 4516 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2514 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:57:in `copied_object_before_save'
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  190) NomenclatureChange::ReassignmentCopyProcessor run when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 26465 AND "listing_changes"."species_listing_id" = 2871 AND "listing_changes"."change_type_id" = 4521 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2516 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:57:in `copied_object_before_save'
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  191) NomenclatureChange::ReassignmentCopyProcessor run when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 26475 AND "listing_changes"."species_listing_id" = 2874 AND "listing_changes"."change_type_id" = 4526 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2518 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:57:in `copied_object_before_save'
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  192) NomenclatureChange::ReassignmentCopyProcessor run when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 26485 AND "listing_changes"."species_listing_id" = 2877 AND "listing_changes"."change_type_id" = 4531 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2520 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:57:in `copied_object_before_save'
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  193) NomenclatureChange::ReassignmentCopyProcessor run when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 26495 AND "listing_changes"."species_listing_id" = 2880 AND "listing_changes"."change_type_id" = 4536 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2522 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:57:in `copied_object_before_save'
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  194) NomenclatureChange::ReassignmentCopyProcessor run when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 26505 AND "listing_changes"."species_listing_id" = 2883 AND "listing_changes"."change_type_id" = 4541 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2524 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:57:in `copied_object_before_save'
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  195) NomenclatureChange::ReassignmentCopyProcessor run when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 26515 AND "listing_changes"."species_listing_id" = 2886 AND "listing_changes"."change_type_id" = 4546 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2526 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:57:in `copied_object_before_save'
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  196) NomenclatureChange::ReassignmentCopyProcessor run when legislation
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 26525 AND "listing_changes"."species_listing_id" = 2889 AND "listing_changes"."change_type_id" = 4551 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2528 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:57:in `copied_object_before_save'
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  197) NomenclatureChange::ReassignmentCopyProcessor run when legislation
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 26535 AND "listing_changes"."species_listing_id" = 2892 AND "listing_changes"."change_type_id" = 4556 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2530 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:57:in `copied_object_before_save'
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  198) NomenclatureChange::ReassignmentCopyProcessor run when legislation
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 26545 AND "listing_changes"."species_listing_id" = 2895 AND "listing_changes"."change_type_id" = 4561 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2532 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:57:in `copied_object_before_save'
     # ./app/models/nomenclature_change/reassignment_copy_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  199) NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 26897 AND "listing_changes"."species_listing_id" = 2898 AND "listing_changes"."change_type_id" = 4566 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2573 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  200) NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 26915 AND "listing_changes"."species_listing_id" = 2901 AND "listing_changes"."change_type_id" = 4571 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2575 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  201) NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 26933 AND "listing_changes"."species_listing_id" = 2904 AND "listing_changes"."change_type_id" = 4576 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2577 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  202) NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 26951 AND "listing_changes"."species_listing_id" = 2907 AND "listing_changes"."change_type_id" = 4581 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2579 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  203) NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 26969 AND "listing_changes"."species_listing_id" = 2910 AND "listing_changes"."change_type_id" = 4586 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2581 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  204) NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 26987 AND "listing_changes"."species_listing_id" = 2913 AND "listing_changes"."change_type_id" = 4591 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2583 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  205) NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 27005 AND "listing_changes"."species_listing_id" = 2916 AND "listing_changes"."change_type_id" = 4596 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2585 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  206) NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 27023 AND "listing_changes"."species_listing_id" = 2919 AND "listing_changes"."change_type_id" = 4601 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2587 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  207) NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 27041 AND "listing_changes"."species_listing_id" = 2922 AND "listing_changes"."change_type_id" = 4606 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2589 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  208) NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 27059 AND "listing_changes"."species_listing_id" = 2925 AND "listing_changes"."change_type_id" = 4611 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2591 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  209) NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 27077 AND "listing_changes"."species_listing_id" = 2928 AND "listing_changes"."change_type_id" = 4616 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2593 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  210) NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 27095 AND "listing_changes"."species_listing_id" = 2931 AND "listing_changes"."change_type_id" = 4621 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2595 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  211) NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 27113 AND "listing_changes"."species_listing_id" = 2934 AND "listing_changes"."change_type_id" = 4626 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2597 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  212) NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 27131 AND "listing_changes"."species_listing_id" = 2937 AND "listing_changes"."change_type_id" = 4631 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2599 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  213) NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 27149 AND "listing_changes"."species_listing_id" = 2940 AND "listing_changes"."change_type_id" = 4636 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2601 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  214) NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 27167 AND "listing_changes"."species_listing_id" = 2943 AND "listing_changes"."change_type_id" = 4641 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2603 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  215) NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 27185 AND "listing_changes"."species_listing_id" = 2946 AND "listing_changes"."change_type_id" = 4646 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2605 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `each'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:99:in `block (2 levels) in <top (required)>'

  216) NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 27502 AND "listing_changes"."species_listing_id" = 2949 AND "listing_changes"."change_type_id" = 4651 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2628 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:68:in `block (2 levels) in <top (required)>'

  217) NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 27521 AND "listing_changes"."species_listing_id" = 2952 AND "listing_changes"."change_type_id" = 4656 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2630 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:68:in `block (2 levels) in <top (required)>'

  218) NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 27540 AND "listing_changes"."species_listing_id" = 2955 AND "listing_changes"."change_type_id" = 4661 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2632 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:68:in `block (2 levels) in <top (required)>'

  219) NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 27559 AND "listing_changes"."species_listing_id" = 2958 AND "listing_changes"."change_type_id" = 4666 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2634 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:68:in `block (2 levels) in <top (required)>'

  220) NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 27578 AND "listing_changes"."species_listing_id" = 2961 AND "listing_changes"."change_type_id" = 4671 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2636 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:68:in `block (2 levels) in <top (required)>'

  221) NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 27597 AND "listing_changes"."species_listing_id" = 2964 AND "listing_changes"."change_type_id" = 4676 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2638 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:68:in `block (2 levels) in <top (required)>'

  222) NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 27616 AND "listing_changes"."species_listing_id" = 2967 AND "listing_changes"."change_type_id" = 4681 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2640 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:68:in `block (2 levels) in <top (required)>'

  223) NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 27635 AND "listing_changes"."species_listing_id" = 2970 AND "listing_changes"."change_type_id" = 4686 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2642 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:68:in `block (2 levels) in <top (required)>'

  224) NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 27654 AND "listing_changes"."species_listing_id" = 2973 AND "listing_changes"."change_type_id" = 4691 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2644 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:68:in `block (2 levels) in <top (required)>'

  225) NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 27673 AND "listing_changes"."species_listing_id" = 2976 AND "listing_changes"."change_type_id" = 4696 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2646 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:68:in `block (2 levels) in <top (required)>'

  226) NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 27692 AND "listing_changes"."species_listing_id" = 2979 AND "listing_changes"."change_type_id" = 4701 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2648 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:68:in `block (2 levels) in <top (required)>'

  227) NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 27711 AND "listing_changes"."species_listing_id" = 2982 AND "listing_changes"."change_type_id" = 4706 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2650 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:68:in `block (2 levels) in <top (required)>'

  228) NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 27730 AND "listing_changes"."species_listing_id" = 2985 AND "listing_changes"."change_type_id" = 4711 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2652 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:68:in `block (2 levels) in <top (required)>'

  229) NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 27749 AND "listing_changes"."species_listing_id" = 2988 AND "listing_changes"."change_type_id" = 4716 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2654 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:68:in `block (2 levels) in <top (required)>'

  230) NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 27768 AND "listing_changes"."species_listing_id" = 2991 AND "listing_changes"."change_type_id" = 4721 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2656 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:68:in `block (2 levels) in <top (required)>'

  231) NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
     Failure/Error: processor.run
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "listing_distributions"
       LINE 1: ..."listing_changes"."internal_notes") IS NULL) AND ("listing_d...
                                                                    ^
       : SELECT  "listing_changes".* FROM "listing_changes"  WHERE ("listing_changes"."taxon_concept_id" = 27787 AND "listing_changes"."species_listing_id" = 2994 AND "listing_changes"."change_type_id" = 4726 AND "listing_changes"."hash_annotation_id" IS NULL AND "listing_changes"."effective_at" = '2013-01-01 00:00:00.000000' AND "listing_changes"."is_current" = 'f' AND "listing_changes"."parent_id" IS NULL AND "listing_changes"."inclusion_taxon_concept_id" IS NULL AND "listing_changes"."event_id" IS NULL AND "listing_changes"."explicit_change" = 't' AND SQUISH_NULL("listing_changes"."nomenclature_note_en") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_es") IS NULL AND SQUISH_NULL("listing_changes"."nomenclature_note_fr") IS NULL AND SQUISH_NULL("listing_changes"."internal_notes") IS NULL) AND ("listing_distributions"."geo_entity_id" = 2658 AND "listing_distributions"."is_party" = 't') AND (SQUISH_NULL("annotations"."symbol") = '#4' AND SQUISH_NULL("annotations"."parent_symbol") = 'CoP15' AND "annotations"."display_in_index" = 'f' AND "annotations"."display_in_footnote" = 'f' AND SQUISH_NULL("annotations"."short_note_en") = 'I''m a short note' AND SQUISH_NULL("annotations"."full_note_en") = 'I''m a long note' AND SQUISH_NULL("annotations"."short_note_fr") IS NULL AND SQUISH_NULL("annotations"."full_note_fr") IS NULL AND SQUISH_NULL("annotations"."short_note_es") IS NULL AND SQUISH_NULL("annotations"."full_note_es") IS NULL AND "annotations"."event_id" IS NULL)  ORDER BY "listing_changes"."id" ASC LIMIT 1
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:42:in `transferred_object_before_save'
     # ./app/models/nomenclature_change/reassignment_transfer_processor.rb:5:in `process_reassignment'
     # ./app/models/nomenclature_change/reassignment_processor.rb:41:in `block in process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:40:in `process_reassignment_of_anonymous_reassignable'
     # ./app/models/nomenclature_change/reassignment_processor.rb:27:in `block in process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:24:in `process_reassignments'
     # ./app/models/nomenclature_change/reassignment_processor.rb:9:in `run'
     # ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:68:in `block (2 levels) in <top (required)>'

  232) Species::CommonNamesExport export when results when file not cached
     Failure/Error: subject.export
     Errno::ENOENT:
       No such file or directory @ rb_file_s_ctime - spec/public/downloads/common_names/97d170e1550eee4afc0af065b78cda302a97674cen.csv
     # ./app/models/species/csv_copy_export.rb:22:in `ctime'
     # ./app/models/species/csv_copy_export.rb:22:in `export'
     # ./spec/models/species/common_names_export_spec.rb:33:in `block (5 levels) in <top (required)>'

  233) Species::TaxonConceptPrefixMatcher results when searching for hybrid when trade visibility
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  234) Species::TaxonConceptPrefixMatcher results when searching for hybrid when trade internal visibility
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  235) Species::TaxonConceptPrefixMatcher results when searching for hybrid when speciesplus visibility
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  236) Species::Search results when searching by scientific name when subspecies never listed
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  237) Species::Search results when searching by scientific name when subspecies never listed
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  238) Species::ListingsExport path
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  239) Species::ListingsExport export when no results
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  240) Species::ListingsExport export when results when file not cached
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  241) Species::ListingsExport export when results when file cached
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  242) Species::ListingsExport query when CITES when Appendix I
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  243) Species::ListingsExport query when CITES when Appendix I when Poland
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  244) Species::ListingsExport query when CITES when Appendix I when Nepal
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  245) Species::ListingsExport query when CITES when higher taxon ids
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  246) Species::ListingsExport query when CITES when implicitly listed subspecies present
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  247) Species::ListingsExport query when EU when Annex A
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  248) Species::ListingsExport query when EU when Annex A when Spain
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  249) Species::ListingsExport query when EU when Annex A when Nepal
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  250) Species::ListingsExport query when EU when higher taxon ids
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  251) Species::OrphanedTaxonConceptsExport export when results when file not cached
     Failure/Error: subject.export
     Errno::ENOENT:
       No such file or directory @ rb_file_s_ctime - spec/public/downloads/orphaned_taxon_concepts/97d170e1550eee4afc0af065b78cda302a97674cen.csv
     # ./app/models/species/csv_copy_export.rb:22:in `ctime'
     # ./app/models/species/csv_copy_export.rb:22:in `export'
     # ./spec/models/species/orphaned_taxon_concepts_export_spec.rb:34:in `block (5 levels) in <top (required)>'

  252) Species::Search results when searching by scientific name when regular query
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  253) Species::Search results when searching by scientific name when malicious query
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  254) Species::Search results when searching by scientific name when leading whitespace
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  255) Species::Search results when searching by scientific name when trailing whitespace
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  256) Species::SpeciesReferenceOutputExport export when results when file not cached
     Failure/Error: subject.export
     Errno::ENOENT:
       No such file or directory @ rb_file_s_ctime - spec/public/downloads/species_reference_output/97d170e1550eee4afc0af065b78cda302a97674cen.csv
     # ./app/models/species/csv_copy_export.rb:22:in `ctime'
     # ./app/models/species/csv_copy_export.rb:22:in `export'
     # ./spec/models/species/species_reference_output_spec.rb:33:in `block (5 levels) in <top (required)>'

  257) Species::StandardReferenceOutputExport export when results when file not cached
     Failure/Error: subject.export
     Errno::ENOENT:
       No such file or directory @ rb_file_s_ctime - spec/public/downloads/standard_reference_output/97d170e1550eee4afc0af065b78cda302a97674cen.csv
     # ./app/models/species/csv_copy_export.rb:22:in `ctime'
     # ./app/models/species/csv_copy_export.rb:22:in `export'
     # ./spec/models/species/standard_reference_output_spec.rb:33:in `block (5 levels) in <top (required)>'

  258) Species::SynonymsAndTradeNamesExport export when results when file not cached
     Failure/Error: subject.export
     Errno::ENOENT:
       No such file or directory @ rb_file_s_ctime - spec/public/downloads/synonyms_and_trade_names/97d170e1550eee4afc0af065b78cda302a97674cen.csv
     # ./app/models/species/csv_copy_export.rb:22:in `ctime'
     # ./app/models/species/csv_copy_export.rb:22:in `export'
     # ./spec/models/species/synonyms_and_trade_names_export_spec.rb:39:in `block (5 levels) in <top (required)>'

  259) Species::TaxonConceptPrefixMatcher results when searching by common name when searching by hyphenated common name
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  260) Species::TaxonConceptPrefixMatcher results when searching by common name when searching by hyphenated common name without hyphens
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  261) Species::TaxonConceptPrefixMatcher results when searching by common name when searching by part of hyphenated common name
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  262) Species::TaxonConceptPrefixMatcher results when searching by scientific name when regular query
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  263) Species::TaxonConceptPrefixMatcher results when searching by scientific name when malicious query
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  264) Species::TaxonConceptPrefixMatcher results when searching by scientific name when leading whitespace
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  265) Species::TaxonConceptPrefixMatcher results when searching by scientific name when trailing whitespace
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  266) Species::TaxonConceptPrefixMatcher results when searching by scientific name when implicitly listed subspecies
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  267) Species::TaxonConceptPrefixMatcher results when searching by scientific name when explicitly listed subspecies
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  268) Species::TaxonConceptPrefixMatcher results when searching by scientific name when implicitly listed higher taxon (without an explicitly listed ancestor)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  269) Species::TaxonConceptPrefixMatcher results when searching by scientific name when explicitly listed higher taxon
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  270) Species::TaxonConceptPrefixMatcher results when searching by scientific name when explicitly listed higher taxon but ranks expected FAMILY
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  271) Species::TaxonConceptPrefixMatcher results when searching by scientific name when explicitly listed higher taxon but ranks expected SPECIES
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  272) Species::TaxonConceptPrefixMatcher results when searching by scientific name when searching for name that matches Species and Subspecies but  ranks expected SUBSPECIES
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  273) Species::TaxonConceptsNamesExport export when results when file not cached
     Failure/Error: subject.export
     Errno::ENOENT:
       No such file or directory @ rb_file_s_ctime - spec/public/downloads/taxon_concepts_names/97d170e1550eee4afc0af065b78cda302a97674cen.csv
     # ./app/models/species/csv_copy_export.rb:22:in `ctime'
     # ./app/models/species/csv_copy_export.rb:22:in `export'
     # ./spec/models/species/taxon_concepts_export_spec.rb:33:in `block (5 levels) in <top (required)>'

  274) Species::TaxonConceptPrefixMatcher results when searching for status N species when trade visibility
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/species/trade_name_prefix_matcher_spec.rb:24:in `block (2 levels) in <top (required)>'

  275) Species::TaxonConceptPrefixMatcher results when searching for status N species when trade internal visibility
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/species/trade_name_prefix_matcher_spec.rb:24:in `block (2 levels) in <top (required)>'

  276) Species::TaxonConceptPrefixMatcher results when searching for status N species when speciesplus visibility
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/species/trade_name_prefix_matcher_spec.rb:24:in `block (2 levels) in <top (required)>'

  277) Species::TaxonConceptPrefixMatcher results when searching for trade name when trade visibility
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/species/trade_name_prefix_matcher_spec.rb:24:in `block (2 levels) in <top (required)>'

  278) Species::TaxonConceptPrefixMatcher results when searching for trade name when trade visibility
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/species/trade_name_prefix_matcher_spec.rb:24:in `block (2 levels) in <top (required)>'

  279) Species::TaxonConceptPrefixMatcher results when searching for trade name when trade internal visibility
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/species/trade_name_prefix_matcher_spec.rb:24:in `block (2 levels) in <top (required)>'

  280) Species::TaxonConceptPrefixMatcher results when searching for trade name when trade internal visibility
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/species/trade_name_prefix_matcher_spec.rb:24:in `block (2 levels) in <top (required)>'

  281) Species::TaxonConceptPrefixMatcher results when searching for trade name when speciesplus visibility
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/species/trade_name_prefix_matcher_spec.rb:24:in `block (2 levels) in <top (required)>'

  282) Species::TaxonConceptPrefixMatcher results when searching for trade name when speciesplus visibility
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/species/trade_name_prefix_matcher_spec.rb:24:in `block (2 levels) in <top (required)>'

  283) Species::Search results when searching by scientific name when subspecies previously listed
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  284) TaxonConcept Agalychnis REFERENCES cites_accepted for class Amphibia
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/agalychnis.rb:54:in `block (2 levels) in <top (required)>'

  285) TaxonConcept Agalychnis REFERENCES cites_accepted for family Hylidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/agalychnis.rb:54:in `block (2 levels) in <top (required)>'

  286) TaxonConcept Agalychnis REFERENCES cites_accepted for genus Agalychnis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/agalychnis.rb:54:in `block (2 levels) in <top (required)>'

  287) TaxonConcept Agalychnis REFERENCES standard_taxon_concept_references for class Amphibia
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/agalychnis.rb:54:in `block (2 levels) in <top (required)>'

  288) TaxonConcept Agalychnis REFERENCES standard_taxon_concept_references for family Hylidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/agalychnis.rb:54:in `block (2 levels) in <top (required)>'

  289) TaxonConcept Agalychnis REFERENCES standard_taxon_concept_references for genus Agalychnis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/agalychnis.rb:54:in `block (2 levels) in <top (required)>'

  290) TaxonConcept Agalychnis LISTING cites_listing for genus Agalychnis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/agalychnis.rb:54:in `block (2 levels) in <top (required)>'

  291) TaxonConcept Agalychnis LISTING eu_listing for genus Agalychnis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/agalychnis.rb:54:in `block (2 levels) in <top (required)>'

  292) TaxonConcept Agalychnis LISTING cites_listed for family Hylidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/agalychnis.rb:54:in `block (2 levels) in <top (required)>'

  293) TaxonConcept Agalychnis LISTING cites_listed for genus Agalychnis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/agalychnis.rb:54:in `block (2 levels) in <top (required)>'

  294) TaxonConcept Agalychnis LISTING eu_listed for family Hylidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/agalychnis.rb:54:in `block (2 levels) in <top (required)>'

  295) TaxonConcept Agalychnis LISTING eu_listed for genus Agalychnis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/agalychnis.rb:54:in `block (2 levels) in <top (required)>'

  296) TaxonConcept Agave LISTING cites_listing for species Agave parviflora
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/agave.rb:75:in `block (2 levels) in <top (required)>'

  297) TaxonConcept Agave LISTING cites_listing for species Agave arizonica
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/agave.rb:75:in `block (2 levels) in <top (required)>'

  298) TaxonConcept Agave LISTING cites_listed for species Agave parviflora
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/agave.rb:75:in `block (2 levels) in <top (required)>'

  299) TaxonConcept Agave LISTING cites_listed for species Agave arizonica
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/agave.rb:75:in `block (2 levels) in <top (required)>'

  300) TaxonConcept Agave LISTING cites_show for species Agave parviflora
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/agave.rb:75:in `block (2 levels) in <top (required)>'

  301) TaxonConcept Agave LISTING cites_show for species Agave arizonica
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/agave.rb:75:in `block (2 levels) in <top (required)>'

  302) TaxonConcept Agave LISTING eu_listing for species Agave parviflora
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/agave.rb:75:in `block (2 levels) in <top (required)>'

  303) TaxonConcept Agave LISTING eu_listing for species Agave arizonica
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/agave.rb:75:in `block (2 levels) in <top (required)>'

  304) TaxonConcept Agave LISTING eu_listed for species Agave parviflora
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/agave.rb:75:in `block (2 levels) in <top (required)>'

  305) TaxonConcept Agave LISTING eu_listed for species Agave arizonica
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/agave.rb:75:in `block (2 levels) in <top (required)>'

  306) TaxonConcept Agave LISTING eu_show for species Agave parviflora
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/agave.rb:75:in `block (2 levels) in <top (required)>'

  307) TaxonConcept Agave LISTING eu_show for species Agave arizonica
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/agave.rb:75:in `block (2 levels) in <top (required)>'

  308) TaxonConcept Ailuropoda LISTING cites_listing for species Ailuropoda melanoleuca
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/ailuropoda.rb:44:in `block (2 levels) in <top (required)>'

  309) TaxonConcept Ailuropoda LISTING cites_listing for genus level Ailuropoda
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/ailuropoda.rb:44:in `block (2 levels) in <top (required)>'

  310) TaxonConcept Ailuropoda LISTING eu_listing for species Ailuropoda melanoleuca
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/ailuropoda.rb:44:in `block (2 levels) in <top (required)>'

  311) TaxonConcept Ailuropoda LISTING eu_listing for genus level Ailuropoda
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/ailuropoda.rb:44:in `block (2 levels) in <top (required)>'

  312) TaxonConcept Ailuropoda LISTING cites_listed for genus Ailuropoda
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/ailuropoda.rb:44:in `block (2 levels) in <top (required)>'

  313) TaxonConcept Ailuropoda LISTING cites_listed for species Ailuropoda melanoleuca
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/ailuropoda.rb:44:in `block (2 levels) in <top (required)>'

  314) TaxonConcept Ailuropoda LISTING eu_listed for genus Ailuropoda
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/ailuropoda.rb:44:in `block (2 levels) in <top (required)>'

  315) TaxonConcept Ailuropoda LISTING eu_listed for species Ailuropoda melanoleuca
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/ailuropoda.rb:44:in `block (2 levels) in <top (required)>'

  316) TaxonConcept Arctocephalus LISTING cites_listing should be II at species level Arctocephalus australis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/arctocephalus.rb:114:in `block (2 levels) in <top (required)>'

  317) TaxonConcept Arctocephalus LISTING cites_listing should be I at species level Arctocephalus townsendi
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/arctocephalus.rb:114:in `block (2 levels) in <top (required)>'

  318) TaxonConcept Arctocephalus LISTING cites_listing should be I/II at genus level Arctocephalus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/arctocephalus.rb:114:in `block (2 levels) in <top (required)>'

  319) TaxonConcept Arctocephalus LISTING cites_listed should be true for genus Arctocephalus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/arctocephalus.rb:114:in `block (2 levels) in <top (required)>'

  320) TaxonConcept Arctocephalus LISTING cites_listed should be true for species Arctocephalus townsendi
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/arctocephalus.rb:114:in `block (2 levels) in <top (required)>'

  321) TaxonConcept Arctocephalus LISTING cites_listed should be false for species Arctocephalus australis (inclusion in higher taxa listing)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/arctocephalus.rb:114:in `block (2 levels) in <top (required)>'

  322) TaxonConcept Arctocephalus LISTING eu_listed should be true for genus Arctocephalus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/arctocephalus.rb:114:in `block (2 levels) in <top (required)>'

  323) TaxonConcept Arctocephalus LISTING eu_listed should be true for species Arctocephalus townsendi
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/arctocephalus.rb:114:in `block (2 levels) in <top (required)>'

  324) TaxonConcept Arctocephalus LISTING eu_listed should be false for species Arctocephalus australis (inclusion in higher taxa listing)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/arctocephalus.rb:114:in `block (2 levels) in <top (required)>'

  325) TaxonConcept Boa constrictor TAXONOMY full_name for subspecies Boa constrictor occidentalis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  326) TaxonConcept Boa constrictor TAXONOMY full_name for species Boa constrictor
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  327) TaxonConcept Boa constrictor TAXONOMY full_name for genus Boa
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  328) TaxonConcept Boa constrictor TAXONOMY ancestors family
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  329) TaxonConcept Boa constrictor TAXONOMY ancestors order
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  330) TaxonConcept Boa constrictor TAXONOMY ancestors class
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  331) TaxonConcept Boa constrictor LISTING cites_listing for subspecies Boa constrictor occidentalis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  332) TaxonConcept Boa constrictor LISTING cites_listing for subspecies Boa constrictor constrictor
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  333) TaxonConcept Boa constrictor LISTING cites_listing for species Boa constrictor
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  334) TaxonConcept Boa constrictor LISTING eu_listing for subspecies Boa constrictor occidentalis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  335) TaxonConcept Boa constrictor LISTING eu_listing for subspecies Boa constrictor constrictor
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  336) TaxonConcept Boa constrictor LISTING eu_listing for species Boa constrictor
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  337) TaxonConcept Boa constrictor LISTING cites_listed for family Boidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  338) TaxonConcept Boa constrictor LISTING cites_listed for genus Boa
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  339) TaxonConcept Boa constrictor LISTING cites_listed for species Boa constrictor (inclusion in higher taxa listing)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  340) TaxonConcept Boa constrictor LISTING cites_listed for subspecies Boa constrictor occidentalis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  341) TaxonConcept Boa constrictor LISTING cites_listed for subspecies Boa constrictor constrictor
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  342) TaxonConcept Boa constrictor LISTING cites_show for family Boidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  343) TaxonConcept Boa constrictor LISTING cites_show for genus Boa
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  344) TaxonConcept Boa constrictor LISTING cites_show for species Boa constrictor (inclusion in higher taxa listing)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  345) TaxonConcept Boa constrictor LISTING cites_show for subspecies Boa constrictor occidentalis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  346) TaxonConcept Boa constrictor LISTING cites_show for subspecies Boa constrictor constrictor
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  347) TaxonConcept Boa constrictor LISTING cites_listed_descendants for family Boidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  348) TaxonConcept Boa constrictor LISTING cites_listed_descendants for genus Boa
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  349) TaxonConcept Boa constrictor LISTING cites_listed_descendants for species Boa constrictor (inclusion in higher taxa listing)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  350) TaxonConcept Boa constrictor LISTING cites_listed_descendants for subspecies Boa constrictor occidentalis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  351) TaxonConcept Boa constrictor LISTING eu_listed for family Boidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  352) TaxonConcept Boa constrictor LISTING eu_listed for genus Boa
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  353) TaxonConcept Boa constrictor LISTING eu_listed for species Boa constrictor (inclusion in higher taxa listing)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  354) TaxonConcept Boa constrictor LISTING eu_listed for subspecies Boa constrictor occidentalis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  355) TaxonConcept Boa constrictor LISTING show_in_species_plus_ac for family Boidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  356) TaxonConcept Boa constrictor LISTING show_in_species_plus_ac for genus Boa
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  357) TaxonConcept Boa constrictor LISTING show_in_species_plus_ac for species Boa constrictor (inclusion in higher taxa listing)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  358) TaxonConcept Boa constrictor LISTING show_in_species_plus_ac for subspecies Boa constrictor occidentalis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  359) TaxonConcept Boa constrictor LISTING show_in_species_plus_ac for subspecies Boa constrictor constrictor
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  360) TaxonConcept Boa constrictor LISTING show_in_checklist_ac for family Boidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  361) TaxonConcept Boa constrictor LISTING show_in_checklist_ac for genus Boa
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  362) TaxonConcept Boa constrictor LISTING show_in_checklist_ac for species Boa constrictor (inclusion in higher taxa listing)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  363) TaxonConcept Boa constrictor LISTING show_in_checklist_ac for subspecies Boa constrictor occidentalis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  364) TaxonConcept Boa constrictor LISTING show_in_checklist_ac for subspecies Boa constrictor constrictor
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/boa_constrictor.rb:85:in `block (2 levels) in <top (required)>'

  365) TaxonConcept Caiman latirostris TAXONOMY full_name for species synonym Alligator cynocephalus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/caiman_latirostris.rb:155:in `block (2 levels) in <top (required)>'

  366) TaxonConcept Caiman latirostris TAXONOMY rank_name for species synonym Alligator cynocephalus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/caiman_latirostris.rb:155:in `block (2 levels) in <top (required)>'

  367) TaxonConcept Caiman latirostris REFERENCES cites_accepted for species Caiman latirostris
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/caiman_latirostris.rb:155:in `block (2 levels) in <top (required)>'

  368) TaxonConcept Caiman latirostris REFERENCES cites_accepted for synonym species Alligator cynocephalus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/caiman_latirostris.rb:155:in `block (2 levels) in <top (required)>'

  369) TaxonConcept Caiman latirostris REFERENCES standard_taxon_concept_references for species Caiman latirostris
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/caiman_latirostris.rb:155:in `block (2 levels) in <top (required)>'

  370) TaxonConcept Caiman latirostris LISTING cites_listing for species Caiman latirostris
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/caiman_latirostris.rb:155:in `block (2 levels) in <top (required)>'

  371) TaxonConcept Caiman latirostris LISTING eu_listing for species Caiman latirostris
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/caiman_latirostris.rb:155:in `block (2 levels) in <top (required)>'

  372) TaxonConcept Caiman latirostris LISTING cites_listed for order Crocodylia
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/caiman_latirostris.rb:155:in `block (2 levels) in <top (required)>'

  373) TaxonConcept Caiman latirostris LISTING cites_listed for family Alligatoridae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/caiman_latirostris.rb:155:in `block (2 levels) in <top (required)>'

  374) TaxonConcept Caiman latirostris LISTING cites_listed for genus Caiman
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/caiman_latirostris.rb:155:in `block (2 levels) in <top (required)>'

  375) TaxonConcept Caiman latirostris LISTING cites_listed for species Caiman latoristris
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/caiman_latirostris.rb:155:in `block (2 levels) in <top (required)>'

  376) TaxonConcept Caiman latirostris LISTING eu_listed for order Crocodylia
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/caiman_latirostris.rb:155:in `block (2 levels) in <top (required)>'

  377) TaxonConcept Caiman latirostris LISTING eu_listed for family Alligatoridae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/caiman_latirostris.rb:155:in `block (2 levels) in <top (required)>'

  378) TaxonConcept Caiman latirostris LISTING eu_listed for genus Caiman
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/caiman_latirostris.rb:155:in `block (2 levels) in <top (required)>'

  379) TaxonConcept Caiman latirostris LISTING eu_listed for species Caiman latoristris
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/caiman_latirostris.rb:155:in `block (2 levels) in <top (required)>'

  380) TaxonConcept Caiman latirostris LISTING cites_show for order Crocodylia
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/caiman_latirostris.rb:155:in `block (2 levels) in <top (required)>'

  381) TaxonConcept Caiman latirostris LISTING cites_show for family Alligatoridae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/caiman_latirostris.rb:155:in `block (2 levels) in <top (required)>'

  382) TaxonConcept Caiman latirostris LISTING cites_show for genus Caiman
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/caiman_latirostris.rb:155:in `block (2 levels) in <top (required)>'

  383) TaxonConcept Caiman latirostris LISTING cites_show for species Caiman latoristris
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/caiman_latirostris.rb:155:in `block (2 levels) in <top (required)>'

  384) TaxonConcept Caiman latirostris LISTING cites_show for synonym species Alligator cynocephalus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/caiman_latirostris.rb:155:in `block (2 levels) in <top (required)>'

  385) TaxonConcept Caiman latirostris LISTING ann_symbol for species Caiman latirostris
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/caiman_latirostris.rb:155:in `block (2 levels) in <top (required)>'

  386) TaxonConcept Caiman latirostris LISTING hash_ann_symbol for species Caiman latirostris
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/caiman_latirostris.rb:155:in `block (2 levels) in <top (required)>'

  387) TaxonConcept Canis lupus LISTING cites_listing for species Canis lupus (population split listing)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  388) TaxonConcept Canis lupus LISTING eu_listing for species Canis lupus (population split listing)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  389) TaxonConcept Canis lupus LISTING cites_listed for species Canis lupus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  390) TaxonConcept Canis lupus LISTING cites_listed for subspecies Canis lupus crassodon
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  391) TaxonConcept Canis lupus LISTING eu_listed for species Canis lupus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  392) TaxonConcept Canis lupus LISTING show_in_species_plus_ac for species Canis lupus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  393) TaxonConcept Canis lupus LISTING show_in_species_plus_ac for subspecies Canis lupus crassodon
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  394) TaxonConcept Canis lupus LISTING show_in_checklist_ac for species Canis lupus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  395) TaxonConcept Canis lupus LISTING show_in_checklist_ac for subspecies Canis lupus crassodon
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  396) TaxonConcept Canis lupus LISTING show_in_species_plus for species Canis lupus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  397) TaxonConcept Canis lupus LISTING show_in_species_plus for subspecies Canis lupus crassodon
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/canis_lupus.rb:130:in `block (2 levels) in <top (required)>'

  398) TaxonConcept Caretta caretta CMS LISTING cms_listing for family Cheloniidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:47:in `rebuild_cms_taxonomy_and_listings'
     # ./spec/shared/caretta_caretta_cms.rb:33:in `block (2 levels) in <top (required)>'

  399) TaxonConcept Caretta caretta CMS LISTING cms_listing for species Caretta caretta
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:47:in `rebuild_cms_taxonomy_and_listings'
     # ./spec/shared/caretta_caretta_cms.rb:33:in `block (2 levels) in <top (required)>'

  400) TaxonConcept Caretta caretta CMS LISTING cms_listed for family Cheloniidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:47:in `rebuild_cms_taxonomy_and_listings'
     # ./spec/shared/caretta_caretta_cms.rb:33:in `block (2 levels) in <top (required)>'

  401) TaxonConcept Caretta caretta CMS LISTING cms_listed for species Caretta caretta
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:47:in `rebuild_cms_taxonomy_and_listings'
     # ./spec/shared/caretta_caretta_cms.rb:33:in `block (2 levels) in <top (required)>'

  402) TaxonConcept Caretta caretta CMS CASCADING LISTING current_cms_additions for family Cheloniidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:47:in `rebuild_cms_taxonomy_and_listings'
     # ./spec/shared/caretta_caretta_cms.rb:33:in `block (2 levels) in <top (required)>'

  403) TaxonConcept Caretta caretta CMS CASCADING LISTING current_cms_additions for species Caretta caretta
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:47:in `rebuild_cms_taxonomy_and_listings'
     # ./spec/shared/caretta_caretta_cms.rb:33:in `block (2 levels) in <top (required)>'

  404) TaxonConcept Cedrela montana LISTING cites_listing for species Cedrela montana
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cedrela_montana.rb:27:in `block (2 levels) in <top (required)>'

  405) TaxonConcept Cedrela montana LISTING cites_listed for species Cedrela montana
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cedrela_montana.rb:27:in `block (2 levels) in <top (required)>'

  406) TaxonConcept Cedrela montana LISTING cites_show for species Cedrela montana
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cedrela_montana.rb:27:in `block (2 levels) in <top (required)>'

  407) TaxonConcept Cedrela montana LISTING eu_listing for species Cedrela montana
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cedrela_montana.rb:27:in `block (2 levels) in <top (required)>'

  408) TaxonConcept Cedrela montana LISTING eu_listed for species Cedrela montana
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cedrela_montana.rb:27:in `block (2 levels) in <top (required)>'

  409) TaxonConcept Cedrela montana LISTING eu_show for species Cedrela montana
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cedrela_montana.rb:27:in `block (2 levels) in <top (required)>'

  410) TaxonConcept Cervus elphus CMS LISTING cms_listing for species Cervus elaphus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:47:in `rebuild_cms_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus_cms.rb:55:in `block (2 levels) in <top (required)>'

  411) TaxonConcept Cervus elphus CMS LISTING cms_listing for subspecies Cervus elaphus bactrianus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:47:in `rebuild_cms_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus_cms.rb:55:in `block (2 levels) in <top (required)>'

  412) TaxonConcept Cervus elphus CMS LISTING cms_listing for subspecies Cervus elaphus barbarus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:47:in `rebuild_cms_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus_cms.rb:55:in `block (2 levels) in <top (required)>'

  413) TaxonConcept Cervus elphus CMS LISTING show_in_species_plus_ac for subspecies Cervus elaphus bactrianus (instrument)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:47:in `rebuild_cms_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus_cms.rb:55:in `block (2 levels) in <top (required)>'

  414) TaxonConcept Cervus elphus CMS LISTING show_in_species_plus_ac for subspecies Cervus elaphus barbarus (listing)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:47:in `rebuild_cms_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus_cms.rb:55:in `block (2 levels) in <top (required)>'

  415) TaxonConcept Cervus elphus CMS LISTING show_in_species_plus for subspecies Cervus elaphus bactrianus (instrument)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:47:in `rebuild_cms_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus_cms.rb:55:in `block (2 levels) in <top (required)>'

  416) TaxonConcept Cervus elphus CMS LISTING show_in_species_plus for subspecies Cervus elaphus barbarus (listing)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:47:in `rebuild_cms_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus_cms.rb:55:in `block (2 levels) in <top (required)>'

  417) TaxonConcept Cervus elaphus TAXONOMY full_name for subspecies Cervus elaphus bactrianus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus.rb:72:in `block (2 levels) in <top (required)>'

  418) TaxonConcept Cervus elaphus TAXONOMY full_name for species Cervus elaphus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus.rb:72:in `block (2 levels) in <top (required)>'

  419) TaxonConcept Cervus elaphus TAXONOMY full_name for genus Cervus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus.rb:72:in `block (2 levels) in <top (required)>'

  420) TaxonConcept Cervus elaphus LISTING cites_listing for species Cervus elaphus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus.rb:72:in `block (2 levels) in <top (required)>'

  421) TaxonConcept Cervus elaphus LISTING cites_listing for subspecies Cervus elaphus bactrianus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus.rb:72:in `block (2 levels) in <top (required)>'

  422) TaxonConcept Cervus elaphus LISTING cites_listing for subspecies Cervus elaphus barbarus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus.rb:72:in `block (2 levels) in <top (required)>'

  423) TaxonConcept Cervus elaphus LISTING cites_listing for subspecies Cervus elaphus hanglu
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus.rb:72:in `block (2 levels) in <top (required)>'

  424) TaxonConcept Cervus elaphus LISTING cites_listing for subspecies Cervus elaphus canadensis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus.rb:72:in `block (2 levels) in <top (required)>'

  425) TaxonConcept Cervus elaphus LISTING eu_listing for species Cervus elaphus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus.rb:72:in `block (2 levels) in <top (required)>'

  426) TaxonConcept Cervus elaphus LISTING eu_listing for subspecies Cervus elaphus bactrianus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus.rb:72:in `block (2 levels) in <top (required)>'

  427) TaxonConcept Cervus elaphus LISTING eu_listing for subspecies Cervus elaphus barbarus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus.rb:72:in `block (2 levels) in <top (required)>'

  428) TaxonConcept Cervus elaphus LISTING eu_listing for subspecies Cervus elaphus hanglu
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus.rb:72:in `block (2 levels) in <top (required)>'

  429) TaxonConcept Cervus elaphus LISTING eu_listing for subspecies Cervus elaphus canadensis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus.rb:72:in `block (2 levels) in <top (required)>'

  430) TaxonConcept Cervus elaphus LISTING cites_listed for order Artiodactyla
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus.rb:72:in `block (2 levels) in <top (required)>'

  431) TaxonConcept Cervus elaphus LISTING cites_listed for family Cervidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus.rb:72:in `block (2 levels) in <top (required)>'

  432) TaxonConcept Cervus elaphus LISTING cites_listed for genus Cervus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus.rb:72:in `block (2 levels) in <top (required)>'

  433) TaxonConcept Cervus elaphus LISTING cites_listed for species Cervus elaphus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus.rb:72:in `block (2 levels) in <top (required)>'

  434) TaxonConcept Cervus elaphus LISTING cites_listed for subspecies Cervus elaphus bactrianus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus.rb:72:in `block (2 levels) in <top (required)>'

  435) TaxonConcept Cervus elaphus LISTING cites_listed for subspecies Cervus elaphus barbarus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus.rb:72:in `block (2 levels) in <top (required)>'

  436) TaxonConcept Cervus elaphus LISTING cites_listed for subspecies Cervus elaphus hanglu
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus.rb:72:in `block (2 levels) in <top (required)>'

  437) TaxonConcept Cervus elaphus LISTING cites_listed for subspecies Cervus elaphus canadensis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus.rb:72:in `block (2 levels) in <top (required)>'

  438) TaxonConcept Cervus elaphus LISTING eu_listed for order Artiodactyla
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus.rb:72:in `block (2 levels) in <top (required)>'

  439) TaxonConcept Cervus elaphus LISTING eu_listed for family Cervidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus.rb:72:in `block (2 levels) in <top (required)>'

  440) TaxonConcept Cervus elaphus LISTING eu_listed for genus Cervus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus.rb:72:in `block (2 levels) in <top (required)>'

  441) TaxonConcept Cervus elaphus LISTING eu_listed for species Cervus elaphus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus.rb:72:in `block (2 levels) in <top (required)>'

  442) TaxonConcept Cervus elaphus LISTING eu_listed for subspecies Cervus elaphus bactrianus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus.rb:72:in `block (2 levels) in <top (required)>'

  443) TaxonConcept Cervus elaphus LISTING eu_listed for subspecies Cervus elaphus barbarus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus.rb:72:in `block (2 levels) in <top (required)>'

  444) TaxonConcept Cervus elaphus LISTING eu_listed for subspecies Cervus elaphus hanglu
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus.rb:72:in `block (2 levels) in <top (required)>'

  445) TaxonConcept Cervus elaphus LISTING eu_listed for subspecies Cervus elaphus canadensis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus.rb:72:in `block (2 levels) in <top (required)>'

  446) TaxonConcept Cervus elaphus LISTING cites_show for subspecies Cervus elaphus hanglu
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus.rb:72:in `block (2 levels) in <top (required)>'

  447) TaxonConcept Cervus elaphus LISTING cites_show for subspecies Cervus elaphus canadensis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cervus_elaphus.rb:72:in `block (2 levels) in <top (required)>'

  448) TaxonConcept Colophon LISTING cites_listing for genus Colophon
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/colophon.rb:54:in `block (2 levels) in <top (required)>'

  449) TaxonConcept Colophon LISTING cites_listing for species Colophon barnardi
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/colophon.rb:54:in `block (2 levels) in <top (required)>'

  450) TaxonConcept Colophon LISTING eu_listing for genus Colophon
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/colophon.rb:54:in `block (2 levels) in <top (required)>'

  451) TaxonConcept Colophon LISTING eu_listing for species Colophon barnardi
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/colophon.rb:54:in `block (2 levels) in <top (required)>'

  452) TaxonConcept Colophon LISTING cites_listed for genus Colophon
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/colophon.rb:54:in `block (2 levels) in <top (required)>'

  453) TaxonConcept Colophon LISTING cites_listed for species Colophon barnardi
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/colophon.rb:54:in `block (2 levels) in <top (required)>'

  454) TaxonConcept Colophon LISTING eu_listed for genus Colophon
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/colophon.rb:54:in `block (2 levels) in <top (required)>'

  455) TaxonConcept Colophon LISTING eu_listed for species Colophon barnardi
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/colophon.rb:54:in `block (2 levels) in <top (required)>'

  456) TaxonConcept Colophon LISTING cites_show for order Coleoptera
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/colophon.rb:54:in `block (2 levels) in <top (required)>'

  457) TaxonConcept Colophon LISTING cites_show for family Lucanidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/colophon.rb:54:in `block (2 levels) in <top (required)>'

  458) TaxonConcept Colophon LISTING current_party_ids for genus Colophon
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/colophon.rb:54:in `block (2 levels) in <top (required)>'

  459) TaxonConcept Colophon LISTING current_party_ids for species Colophon barnardi
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/colophon.rb:54:in `block (2 levels) in <top (required)>'

  460) TaxonConcept Dalbergia LISTING cites_listing for species Dalbergia abbreviata
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/dalbergia.rb:75:in `block (2 levels) in <top (required)>'

  461) TaxonConcept Dalbergia LISTING cites_listing for species Dalbergia abrahamii
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/dalbergia.rb:75:in `block (2 levels) in <top (required)>'

  462) TaxonConcept Dalbergia LISTING cites_listed for species Dalbergia abbreviata
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/dalbergia.rb:75:in `block (2 levels) in <top (required)>'

  463) TaxonConcept Dalbergia LISTING cites_listed for species Dalbergia abrahamii
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/dalbergia.rb:75:in `block (2 levels) in <top (required)>'

  464) TaxonConcept Dalbergia LISTING cites_show for species Dalbergia abbreviata
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/dalbergia.rb:75:in `block (2 levels) in <top (required)>'

  465) TaxonConcept Dalbergia LISTING cites_show for species Dalbergia abrahamii
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/dalbergia.rb:75:in `block (2 levels) in <top (required)>'

  466) TaxonConcept Diospyros LISTING cites_listing for species Diospyros aculeata
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/diospyros.rb:127:in `block (2 levels) in <top (required)>'

  467) TaxonConcept Diospyros LISTING cites_listing for species Diospyros acuta
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/diospyros.rb:127:in `block (2 levels) in <top (required)>'

  468) TaxonConcept Diospyros LISTING cites_listed for species Diospyros aculeata
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/diospyros.rb:127:in `block (2 levels) in <top (required)>'

  469) TaxonConcept Diospyros LISTING cites_listed for species Diospyros acuta
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/diospyros.rb:127:in `block (2 levels) in <top (required)>'

  470) TaxonConcept Diospyros LISTING cites_show for species Diospyros aculeata
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/diospyros.rb:127:in `block (2 levels) in <top (required)>'

  471) TaxonConcept Diospyros LISTING cites_show for species Diospyros acuta
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/diospyros.rb:127:in `block (2 levels) in <top (required)>'

  472) TaxonConcept Diospyros LISTING eu_listing for species Diospyros aculeata
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/diospyros.rb:127:in `block (2 levels) in <top (required)>'

  473) TaxonConcept Diospyros LISTING eu_listing for species Diospyros acuta
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/diospyros.rb:127:in `block (2 levels) in <top (required)>'

  474) TaxonConcept Diospyros LISTING eu_listed for species Diospyros aculeata
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/diospyros.rb:127:in `block (2 levels) in <top (required)>'

  475) TaxonConcept Diospyros LISTING eu_listed for species Diospyros acuta
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/diospyros.rb:127:in `block (2 levels) in <top (required)>'

  476) TaxonConcept Diospyros LISTING eu_show for species Diospyros aculeata
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/diospyros.rb:127:in `block (2 levels) in <top (required)>'

  477) TaxonConcept Diospyros LISTING eu_show for species Diospyros acuta
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/diospyros.rb:127:in `block (2 levels) in <top (required)>'

  478) TaxonConcept Falconiformes TAXONOMY rank_name for Falco hybrid
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  479) TaxonConcept Falconiformes LISTING cites_listing for order Falconiformes
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  480) TaxonConcept Falconiformes LISTING cites_listing for species Falco araea
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  481) TaxonConcept Falconiformes LISTING cites_listing for species Falco alopex (H)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  482) TaxonConcept Falconiformes LISTING cites_listing for species Gymnogyps californianus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  483) TaxonConcept Falconiformes LISTING cites_listing for species Sarcoramphus papa
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  484) TaxonConcept Falconiformes LISTING cites_listing for species Vultur atratus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  485) TaxonConcept Falconiformes LISTING eu_listing for order Falconiformes
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  486) TaxonConcept Falconiformes LISTING eu_listing for species Falco araea
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  487) TaxonConcept Falconiformes LISTING eu_listing for species Falco alopex (H)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  488) TaxonConcept Falconiformes LISTING eu_listing for species Gymnogyps californianus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  489) TaxonConcept Falconiformes LISTING eu_listing for species Sarcoramphus papa
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  490) TaxonConcept Falconiformes LISTING eu_listing for species Vultur atratus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  491) TaxonConcept Falconiformes LISTING cites_status for genus Vultur
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  492) TaxonConcept Falconiformes LISTING cites_status for species Vultur atratus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  493) TaxonConcept Falconiformes LISTING cites_listed for order Falconiformes
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  494) TaxonConcept Falconiformes LISTING cites_listed for family Falconidae (inclusion in higher taxa listing)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  495) TaxonConcept Falconiformes LISTING cites_listed for genus Falco
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  496) TaxonConcept Falconiformes LISTING cites_listed for species Falco araea
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  497) TaxonConcept Falconiformes LISTING cites_listed for species Falco alopex
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  498) TaxonConcept Falconiformes LISTING cites_listed for species Vultur atratus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  499) TaxonConcept Falconiformes LISTING cites_listed for subspecies Falco peregrinus peregrinus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  500) TaxonConcept Falconiformes LISTING eu_listed for order Falconiformes
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  501) TaxonConcept Falconiformes LISTING eu_listed for family Falconidae (inclusion in higher taxa listing)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  502) TaxonConcept Falconiformes LISTING eu_listed for genus Falco
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  503) TaxonConcept Falconiformes LISTING eu_listed for species Falco araea
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  504) TaxonConcept Falconiformes LISTING eu_listed for species Falco alopex
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  505) TaxonConcept Falconiformes LISTING eu_listed for species Vultur atratus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  506) TaxonConcept Falconiformes LISTING eu_listed for subspecies Falco peregrinus peregrinus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  507) TaxonConcept Falconiformes LISTING cites_show for order Falconiformes
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  508) TaxonConcept Falconiformes LISTING cites_show for family Falconidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  509) TaxonConcept Falconiformes LISTING cites_show for Falco hybrid
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  510) TaxonConcept Falconiformes LISTING show_in_checklist_ac for subspecies Falco peregrinus peregrinus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  511) TaxonConcept Falconiformes LISTING show_in_species_plus_ac for subspecies Falco peregrinus peregrinus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/falconiformes.rb:160:in `block (2 levels) in <top (required)>'

  512) TaxonConcept Loxodonta africana CMS TAXONOMY full_name for species Loxodonta africana
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:47:in `rebuild_cms_taxonomy_and_listings'
     # ./spec/shared/loxodonta_africana_cms.rb:27:in `block (2 levels) in <top (required)>'

  513) TaxonConcept Loxodonta africana CMS TAXONOMY full_name for genus Loxodonta
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:47:in `rebuild_cms_taxonomy_and_listings'
     # ./spec/shared/loxodonta_africana_cms.rb:27:in `block (2 levels) in <top (required)>'

  514) TaxonConcept Loxodonta africana CMS TAXONOMY rank for species Loxodonta africana
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:47:in `rebuild_cms_taxonomy_and_listings'
     # ./spec/shared/loxodonta_africana_cms.rb:27:in `block (2 levels) in <top (required)>'

  515) TaxonConcept Loxodonta africana CMS TAXONOMY ancestors family
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:47:in `rebuild_cms_taxonomy_and_listings'
     # ./spec/shared/loxodonta_africana_cms.rb:27:in `block (2 levels) in <top (required)>'

  516) TaxonConcept Loxodonta africana CMS TAXONOMY ancestors order
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:47:in `rebuild_cms_taxonomy_and_listings'
     # ./spec/shared/loxodonta_africana_cms.rb:27:in `block (2 levels) in <top (required)>'

  517) TaxonConcept Loxodonta africana CMS TAXONOMY ancestors class
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:47:in `rebuild_cms_taxonomy_and_listings'
     # ./spec/shared/loxodonta_africana_cms.rb:27:in `block (2 levels) in <top (required)>'

  518) TaxonConcept Loxodonta africana CMS LISTING cms_listing for species Loxodonta africana
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:47:in `rebuild_cms_taxonomy_and_listings'
     # ./spec/shared/loxodonta_africana_cms.rb:27:in `block (2 levels) in <top (required)>'

  519) TaxonConcept Loxodonta africana CMS LISTING cms_listed for species Loxodonta africana
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:47:in `rebuild_cms_taxonomy_and_listings'
     # ./spec/shared/loxodonta_africana_cms.rb:27:in `block (2 levels) in <top (required)>'

  520) TaxonConcept Loxodonta africana TAXONOMY full_name for species Loxodonta africana
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/loxodonta_africana.rb:95:in `block (2 levels) in <top (required)>'

  521) TaxonConcept Loxodonta africana TAXONOMY full_name for genus Loxodonta
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/loxodonta_africana.rb:95:in `block (2 levels) in <top (required)>'

  522) TaxonConcept Loxodonta africana TAXONOMY rank for species Loxodonta africana
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/loxodonta_africana.rb:95:in `block (2 levels) in <top (required)>'

  523) TaxonConcept Loxodonta africana TAXONOMY ancestors family
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/loxodonta_africana.rb:95:in `block (2 levels) in <top (required)>'

  524) TaxonConcept Loxodonta africana TAXONOMY ancestors order
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/loxodonta_africana.rb:95:in `block (2 levels) in <top (required)>'

  525) TaxonConcept Loxodonta africana TAXONOMY ancestors class
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/loxodonta_africana.rb:95:in `block (2 levels) in <top (required)>'

  526) TaxonConcept Loxodonta africana LISTING cites_listing for species Loxodonta africana (population split listing)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/loxodonta_africana.rb:95:in `block (2 levels) in <top (required)>'

  527) TaxonConcept Loxodonta africana LISTING eu_listing for species Loxodonta africana (population split listing)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/loxodonta_africana.rb:95:in `block (2 levels) in <top (required)>'

  528) TaxonConcept Loxodonta africana LISTING cites_listed for species Loxodonta africana
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/loxodonta_africana.rb:95:in `block (2 levels) in <top (required)>'

  529) TaxonConcept Loxodonta africana LISTING cites_listed for family Elephantidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/loxodonta_africana.rb:95:in `block (2 levels) in <top (required)>'

  530) TaxonConcept Loxodonta africana LISTING eu_listed for species Loxodonta africana
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/loxodonta_africana.rb:95:in `block (2 levels) in <top (required)>'

  531) TaxonConcept Loxodonta africana LISTING eu_listed for family Elephantidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/loxodonta_africana.rb:95:in `block (2 levels) in <top (required)>'

  532) TaxonConcept Mellivora capensis LISTING cites_listing for species Mellivora capensis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/mellivora_capensis.rb:120:in `block (2 levels) in <top (required)>'

  533) TaxonConcept Mellivora capensis LISTING eu_listing for species Mellivora capensis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/mellivora_capensis.rb:120:in `block (2 levels) in <top (required)>'

  534) TaxonConcept Mellivora capensis LISTING cites_listed for family Mustelinae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/mellivora_capensis.rb:120:in `block (2 levels) in <top (required)>'

  535) TaxonConcept Mellivora capensis LISTING cites_listed for genus Mellivora
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/mellivora_capensis.rb:120:in `block (2 levels) in <top (required)>'

  536) TaxonConcept Mellivora capensis LISTING cites_listed for species Mellivora capensis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/mellivora_capensis.rb:120:in `block (2 levels) in <top (required)>'

  537) TaxonConcept Mellivora capensis LISTING eu_listed for family Mustelinae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/mellivora_capensis.rb:120:in `block (2 levels) in <top (required)>'

  538) TaxonConcept Mellivora capensis LISTING eu_listed for genus Mellivora
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/mellivora_capensis.rb:120:in `block (2 levels) in <top (required)>'

  539) TaxonConcept Mellivora capensis LISTING eu_listed for species Mellivora capensis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/mellivora_capensis.rb:120:in `block (2 levels) in <top (required)>'

  540) TaxonConcept Mellivora capensis LISTING current_party_ids for species Mellivora capensis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/mellivora_capensis.rb:120:in `block (2 levels) in <top (required)>'

  541) TaxonConcept Moschus LISTING cites_listing for genus Moschus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/moschus.rb:146:in `block (2 levels) in <top (required)>'

  542) TaxonConcept Moschus LISTING cites_listing for species Moschus leucogaster
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/moschus.rb:146:in `block (2 levels) in <top (required)>'

  543) TaxonConcept Moschus LISTING cites_listing for species Moschus moschiferus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/moschus.rb:146:in `block (2 levels) in <top (required)>'

  544) TaxonConcept Moschus LISTING cites_listing for subspecies Moschus moschiferus moschiferus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/moschus.rb:146:in `block (2 levels) in <top (required)>'

  545) TaxonConcept Moschus LISTING cites_listed for genus Moschus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/moschus.rb:146:in `block (2 levels) in <top (required)>'

  546) TaxonConcept Moschus LISTING cites_listed for species Moschus leucogaster
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/moschus.rb:146:in `block (2 levels) in <top (required)>'

  547) TaxonConcept Moschus LISTING cites_listed for species Moschus moschiferus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/moschus.rb:146:in `block (2 levels) in <top (required)>'

  548) TaxonConcept Moschus LISTING cites_listed for subspecies Moschus moschiferus moschiferus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/moschus.rb:146:in `block (2 levels) in <top (required)>'

  549) TaxonConcept Moschus CASCADING LISTING current_cites_additions for species Moschus leucogaster
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/moschus.rb:146:in `block (2 levels) in <top (required)>'

  550) TaxonConcept Moschus CASCADING LISTING current_cites_additions for species Moschus moschiferus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/moschus.rb:146:in `block (2 levels) in <top (required)>'

  551) TaxonConcept Moschus CASCADING LISTING current_cites_additions for subspecies Moschus moschiferus moschiferus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/moschus.rb:146:in `block (2 levels) in <top (required)>'

  552) TaxonConcept Natator depressus LISTING cites_listing for family Cheloniidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/natator_depressus.rb:52:in `block (2 levels) in <top (required)>'

  553) TaxonConcept Natator depressus LISTING cites_listing for species Natator depressus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/natator_depressus.rb:52:in `block (2 levels) in <top (required)>'

  554) TaxonConcept Notomys aquilo LISTING cites_listing for genus Notomys
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/notomys_aquilo.rb:37:in `block (2 levels) in <top (required)>'

  555) TaxonConcept Notomys aquilo LISTING cites_listing for species Notomys aquilo
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/notomys_aquilo.rb:37:in `block (2 levels) in <top (required)>'

  556) TaxonConcept Notomys aquilo LISTING cites_show for genus Notomys
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/notomys_aquilo.rb:37:in `block (2 levels) in <top (required)>'

  557) TaxonConcept Notomys aquilo LISTING cites_show for species Notomys aquilo
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/notomys_aquilo.rb:37:in `block (2 levels) in <top (required)>'

  558) TaxonConcept Panax ginseng LISTING cites_listed for species Panax ginseng
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/panax_ginseng.rb:88:in `block (2 levels) in <top (required)>'

  559) TaxonConcept Panax ginseng LISTING cites_listed for genus Panax
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/panax_ginseng.rb:88:in `block (2 levels) in <top (required)>'

  560) TaxonConcept Panax ginseng LISTING eu_listed for species Panax ginseng
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/panax_ginseng.rb:88:in `block (2 levels) in <top (required)>'

  561) TaxonConcept Panax ginseng LISTING eu_listed for genus Panax
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/panax_ginseng.rb:88:in `block (2 levels) in <top (required)>'

  562) TaxonConcept Panax ginseng LISTING cites_listing for species Panax ginseng
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/panax_ginseng.rb:88:in `block (2 levels) in <top (required)>'

  563) TaxonConcept Panax ginseng LISTING eu_listing for species Panax ginseng
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/panax_ginseng.rb:88:in `block (2 levels) in <top (required)>'

  564) TaxonConcept Panax ginseng LISTING ann_symbol for species Panax ginseng
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/panax_ginseng.rb:88:in `block (2 levels) in <top (required)>'

  565) TaxonConcept Panax ginseng LISTING hash_ann_symbol for species Panax ginseng
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/panax_ginseng.rb:88:in `block (2 levels) in <top (required)>'

  566) TaxonConcept Pereskia LISTING cites_listing for genus Pereskia (not listed, shown)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pereskia.rb:58:in `block (2 levels) in <top (required)>'

  567) TaxonConcept Pereskia LISTING cites_listing for genus Ariocarpus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pereskia.rb:58:in `block (2 levels) in <top (required)>'

  568) TaxonConcept Pereskia LISTING cites_listing for family Cactaceae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pereskia.rb:58:in `block (2 levels) in <top (required)>'

  569) TaxonConcept Pereskia LISTING eu_listing for genus Pereskia (not listed, shown)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pereskia.rb:58:in `block (2 levels) in <top (required)>'

  570) TaxonConcept Pereskia LISTING eu_listing for genus Ariocarpus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pereskia.rb:58:in `block (2 levels) in <top (required)>'

  571) TaxonConcept Pereskia LISTING eu_listing for family Cactaceae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pereskia.rb:58:in `block (2 levels) in <top (required)>'

  572) TaxonConcept Pereskia LISTING cites_listed for family Cactaceae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pereskia.rb:58:in `block (2 levels) in <top (required)>'

  573) TaxonConcept Pereskia LISTING cites_listed for genus Pereskia
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pereskia.rb:58:in `block (2 levels) in <top (required)>'

  574) TaxonConcept Pereskia LISTING eu_listed for family Cactaceae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pereskia.rb:58:in `block (2 levels) in <top (required)>'

  575) TaxonConcept Pereskia LISTING eu_listed for genus Pereskia
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pereskia.rb:58:in `block (2 levels) in <top (required)>'

  576) TaxonConcept Pereskia LISTING cites_status for genus Pereskia
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pereskia.rb:58:in `block (2 levels) in <top (required)>'

  577) TaxonConcept Pereskia LISTING cites_show for genus Pereskia
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pereskia.rb:58:in `block (2 levels) in <top (required)>'

  578) TaxonConcept Platysternon megacephalum LISTING cites_listing for family Platysternidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/platysternon_megacephalum.rb:54:in `block (2 levels) in <top (required)>'

  579) TaxonConcept Platysternon megacephalum LISTING cites_listing for species Platysternon megacephalum
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/platysternon_megacephalum.rb:54:in `block (2 levels) in <top (required)>'

  580) TaxonConcept Platysternon megacephalum LISTING cites_listed for species Platysternon megacephalum
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/platysternon_megacephalum.rb:54:in `block (2 levels) in <top (required)>'

  581) TaxonConcept Platysternon megacephalum LISTING cites_show for species Platysternon megacephalum
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/platysternon_megacephalum.rb:54:in `block (2 levels) in <top (required)>'

  582) TaxonConcept Platysternon megacephalum LISTING eu_listing for family Platysternidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/platysternon_megacephalum.rb:54:in `block (2 levels) in <top (required)>'

  583) TaxonConcept Platysternon megacephalum LISTING eu_listing for species Platysternon megacephalum
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/platysternon_megacephalum.rb:54:in `block (2 levels) in <top (required)>'

  584) TaxonConcept Platysternon megacephalum LISTING eu_listed for species Platysternon megacephalum
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/platysternon_megacephalum.rb:54:in `block (2 levels) in <top (required)>'

  585) TaxonConcept Platysternon megacephalum LISTING eu_show for species Platysternon megacephalum
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/platysternon_megacephalum.rb:54:in `block (2 levels) in <top (required)>'

  586) TaxonConcept Pristis microdon LISTING cites_listing for family Pristidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pristis_microdon.rb:62:in `block (2 levels) in <top (required)>'

  587) TaxonConcept Pristis microdon LISTING cites_listing for species Pristis microdon
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pristis_microdon.rb:62:in `block (2 levels) in <top (required)>'

  588) TaxonConcept Pristis microdon LISTING cites_listed for species Pristis microdon
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pristis_microdon.rb:62:in `block (2 levels) in <top (required)>'

  589) TaxonConcept Pristis microdon LISTING cites_show for species Pristis microdon
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pristis_microdon.rb:62:in `block (2 levels) in <top (required)>'

  590) TaxonConcept Pristis microdon LISTING eu_listing for family Pristidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pristis_microdon.rb:62:in `block (2 levels) in <top (required)>'

  591) TaxonConcept Pristis microdon LISTING eu_listing for species Pristis microdon
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pristis_microdon.rb:62:in `block (2 levels) in <top (required)>'

  592) TaxonConcept Pristis microdon LISTING eu_listed for species Pristis microdon
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pristis_microdon.rb:62:in `block (2 levels) in <top (required)>'

  593) TaxonConcept Pristis microdon LISTING eu_show for species Pristis microdon
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pristis_microdon.rb:62:in `block (2 levels) in <top (required)>'

  594) TaxonConcept Pseudomys fieldi LISTING cites_listing for subspecies Pseudomys fieldi preaconis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pseudomys_fieldi.rb:53:in `block (2 levels) in <top (required)>'

  595) TaxonConcept Pseudomys fieldi LISTING cites_listing for species Pseudomys fieldi
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pseudomys_fieldi.rb:53:in `block (2 levels) in <top (required)>'

  596) TaxonConcept Pseudomys fieldi LISTING eu_listing for subspecies Pseudomys fieldi preaconis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pseudomys_fieldi.rb:53:in `block (2 levels) in <top (required)>'

  597) TaxonConcept Pseudomys fieldi LISTING eu_listing for species Pseudomys fieldi
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pseudomys_fieldi.rb:53:in `block (2 levels) in <top (required)>'

  598) TaxonConcept Pseudomys fieldi LISTING cites_show for subspecies Pseudomys fieldi preaconis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pseudomys_fieldi.rb:53:in `block (2 levels) in <top (required)>'

  599) TaxonConcept Pseudomys fieldi LISTING cites_show for species Pseudomys fieldi
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pseudomys_fieldi.rb:53:in `block (2 levels) in <top (required)>'

  600) TaxonConcept Psittaciformes LISTING cites_listing for order Psittaciformes
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  601) TaxonConcept Psittaciformes LISTING cites_listing for species Cacatua goffiniana
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  602) TaxonConcept Psittaciformes LISTING cites_listing for species Cacatua ducorpsi (H)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  603) TaxonConcept Psittaciformes LISTING cites_listing for species Probosciger aterrimus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  604) TaxonConcept Psittaciformes LISTING cites_listing for species Amazona aestiva
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  605) TaxonConcept Psittaciformes LISTING cites_listing for species Agapornis roseicollis (DEL II, not listed, not shown)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  606) TaxonConcept Psittaciformes LISTING cites_listing for species Psittacula krameri (DEL III, not listed, not shown)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  607) TaxonConcept Psittaciformes LISTING cites_listing for subspecies Amazona festiva festiva
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  608) TaxonConcept Psittaciformes LISTING eu_listing for order Psittaciformes
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  609) TaxonConcept Psittaciformes LISTING eu_listing for species Cacatua goffiniana
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  610) TaxonConcept Psittaciformes LISTING eu_listing for species Cacatua ducorpsi (H)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  611) TaxonConcept Psittaciformes LISTING eu_listing for species Probosciger aterrimus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  612) TaxonConcept Psittaciformes LISTING eu_listing for species Amazona aestiva
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  613) TaxonConcept Psittaciformes LISTING eu_listing for species Agapornis roseicollis (DEL II, not listed, not shown)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  614) TaxonConcept Psittaciformes LISTING eu_listing for species Psittacula krameri (DEL III, not listed, not shown)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  615) TaxonConcept Psittaciformes LISTING eu_listing for subspecies Amazona festiva festiva
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  616) TaxonConcept Psittaciformes LISTING cites_listed for order Psittaciformes
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  617) TaxonConcept Psittaciformes LISTING cites_listed for family Cacatuidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  618) TaxonConcept Psittaciformes LISTING cites_listed for genus Cacatua
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  619) TaxonConcept Psittaciformes LISTING cites_listed for species Cacatua goffiniana
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  620) TaxonConcept Psittaciformes LISTING cites_listed for species Cacatua ducorpsi
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  621) TaxonConcept Psittaciformes LISTING cites_listed for subspecies Amazona festiva festiva
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  622) TaxonConcept Psittaciformes LISTING eu_listed for order Psittaciformes
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  623) TaxonConcept Psittaciformes LISTING eu_listed for family Cacatuidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  624) TaxonConcept Psittaciformes LISTING eu_listed for genus Cacatua
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  625) TaxonConcept Psittaciformes LISTING eu_listed for species Cacatua goffiniana
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  626) TaxonConcept Psittaciformes LISTING eu_listed for species Cacatua ducorpsi
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  627) TaxonConcept Psittaciformes LISTING eu_listed for subspecies Amazona festiva festiva
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  628) TaxonConcept Psittaciformes LISTING cites_show for species Agapornis roseicollis (DEL II)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  629) TaxonConcept Psittaciformes LISTING cites_show for species Amazona aestiva
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  630) TaxonConcept Psittaciformes LISTING cites_show for species Psittacula krameri (DEL III)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  631) TaxonConcept Psittaciformes LISTING cites_status for species Agapornis roseicollis (DEL II)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  632) TaxonConcept Psittaciformes LISTING cites_status for species Psittacula krameri (DEL III)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  633) TaxonConcept Psittaciformes LISTING show_in_checklist_ac for subspecies Amazona festiva festiva
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  634) TaxonConcept Psittaciformes LISTING show_in_species_plus_ac for subspecies Amazona festiva festiva
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  635) TaxonConcept Psittaciformes LISTING show_in_species_plus for subspecies Amazona festiva festiva
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/psittaciformes.rb:254:in `block (2 levels) in <top (required)>'

  636) TaxonConcept create when has accepted parent overnight calculations
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/taxon_concept/synonyms_spec.rb:90:in `block (5 levels) in <top (required)>'

  637) TaxonConcept Tapiridae TAXONOMY full_name for family Tapiridae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/tapiridae.rb:47:in `block (2 levels) in <top (required)>'

  638) TaxonConcept Tapiridae TAXONOMY rank for family Tapiridae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/tapiridae.rb:47:in `block (2 levels) in <top (required)>'

  639) TaxonConcept Tapiridae TAXONOMY ancestors order
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/tapiridae.rb:47:in `block (2 levels) in <top (required)>'

  640) TaxonConcept Tapiridae TAXONOMY ancestors class
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/tapiridae.rb:47:in `block (2 levels) in <top (required)>'

  641) TaxonConcept Tapiridae LISTING cites_listing for family Tapiridae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/tapiridae.rb:47:in `block (2 levels) in <top (required)>'

  642) TaxonConcept Tapiridae LISTING cites_listing for species Tapirus terrestris
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/tapiridae.rb:47:in `block (2 levels) in <top (required)>'

  643) TaxonConcept Tapiridae LISTING eu_listing for family Tapiridae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/tapiridae.rb:47:in `block (2 levels) in <top (required)>'

  644) TaxonConcept Tapiridae LISTING eu_listing for species Tapirus terrestris
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/tapiridae.rb:47:in `block (2 levels) in <top (required)>'

  645) TaxonConcept Tapiridae LISTING cites_listed for family Tapiridae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/tapiridae.rb:47:in `block (2 levels) in <top (required)>'

  646) TaxonConcept Tapiridae LISTING cites_listed for genus Tapirus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/tapiridae.rb:47:in `block (2 levels) in <top (required)>'

  647) TaxonConcept Tapiridae LISTING cites_listed for species Tapirus terrestris
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/tapiridae.rb:47:in `block (2 levels) in <top (required)>'

  648) TaxonConcept Tapiridae LISTING eu_listed for family Tapiridae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/tapiridae.rb:47:in `block (2 levels) in <top (required)>'

  649) TaxonConcept Tapiridae LISTING eu_listed for genus Tapirus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/tapiridae.rb:47:in `block (2 levels) in <top (required)>'

  650) TaxonConcept Tapiridae LISTING eu_listed for species Tapirus terrestris
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/tapiridae.rb:47:in `block (2 levels) in <top (required)>'

  651) TaxonConcept create when has accepted parent overnight calculations
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/taxon_concept/trade_names_spec.rb:90:in `block (5 levels) in <top (required)>'

  652) TaxonConcept Uroplatus REFERENCES cites_accepted for genus Uroplatus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/uroplatus.rb:54:in `block (2 levels) in <top (required)>'

  653) TaxonConcept Uroplatus REFERENCES cites_accepted for species Uroplatus alluaudi
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/uroplatus.rb:54:in `block (2 levels) in <top (required)>'

  654) TaxonConcept Uroplatus REFERENCES cites_accepted for species Uroplatus giganteus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/uroplatus.rb:54:in `block (2 levels) in <top (required)>'

  655) TaxonConcept Uroplatus REFERENCES standard_taxon_concept_references for family Gekkonidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/uroplatus.rb:54:in `block (2 levels) in <top (required)>'

  656) TaxonConcept Uroplatus REFERENCES standard_taxon_concept_references for genus Uroplatus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/uroplatus.rb:54:in `block (2 levels) in <top (required)>'

  657) TaxonConcept Uroplatus REFERENCES standard_taxon_concept_references for species Uroplatus alluaudi
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/uroplatus.rb:54:in `block (2 levels) in <top (required)>'

  658) TaxonConcept Uroplatus REFERENCES standard_taxon_concept_references for species Uroplatus giganteus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/uroplatus.rb:54:in `block (2 levels) in <top (required)>'

  659) TaxonConcept Uroplatus LISTING cites_listing for genus Uroplatus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/uroplatus.rb:54:in `block (2 levels) in <top (required)>'

  660) TaxonConcept Uroplatus LISTING cites_listing for species Uroplatus giganteus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/uroplatus.rb:54:in `block (2 levels) in <top (required)>'

  661) TaxonConcept Uroplatus LISTING eu_listing for genus Uroplatus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/uroplatus.rb:54:in `block (2 levels) in <top (required)>'

  662) TaxonConcept Uroplatus LISTING eu_listing for species Uroplatus giganteus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/uroplatus.rb:54:in `block (2 levels) in <top (required)>'

  663) TaxonConcept Uroplatus LISTING cites_listed for family Gekkonidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/uroplatus.rb:54:in `block (2 levels) in <top (required)>'

  664) TaxonConcept Uroplatus LISTING cites_listed for genus Uroplatus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/uroplatus.rb:54:in `block (2 levels) in <top (required)>'

  665) TaxonConcept Uroplatus LISTING cites_listed for species Uroplatus giganteus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/uroplatus.rb:54:in `block (2 levels) in <top (required)>'

  666) TaxonConcept Uroplatus LISTING eu_listed for family Gekkonidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/uroplatus.rb:54:in `block (2 levels) in <top (required)>'

  667) TaxonConcept Uroplatus LISTING eu_listed for genus Uroplatus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/uroplatus.rb:54:in `block (2 levels) in <top (required)>'

  668) TaxonConcept Uroplatus LISTING eu_listed for species Uroplatus giganteus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/uroplatus.rb:54:in `block (2 levels) in <top (required)>'

  669) TaxonConcept Varanidae REFERENCES cites_accepted for species Varanus bengalensis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/varanidae.rb:80:in `block (2 levels) in <top (required)>'

  670) TaxonConcept Varanidae REFERENCES standard_taxon_concept_references for order Sauria
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/varanidae.rb:80:in `block (2 levels) in <top (required)>'

  671) TaxonConcept Varanidae REFERENCES standard_taxon_concept_references for family Varanidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/varanidae.rb:80:in `block (2 levels) in <top (required)>'

  672) TaxonConcept Varanidae REFERENCES standard_taxon_concept_references for species Varanus bengalensis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/varanidae.rb:80:in `block (2 levels) in <top (required)>'

  673) TaxonConcept Varanidae REFERENCES standard_taxon_concept_references for species Varanus bushi
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/varanidae.rb:80:in `block (2 levels) in <top (required)>'

  674) TaxonConcept Varanidae REFERENCES standard_taxon_concept_references for species Varanus bushi
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/varanidae.rb:80:in `block (2 levels) in <top (required)>'

  675) TaxonConcept Varanidae LISTING cites_listing for genus Varanus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/varanidae.rb:80:in `block (2 levels) in <top (required)>'

  676) TaxonConcept Varanidae LISTING cites_listing for species Varanus bengalensis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/varanidae.rb:80:in `block (2 levels) in <top (required)>'

  677) TaxonConcept Varanidae LISTING eu_listing for genus Varanus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/varanidae.rb:80:in `block (2 levels) in <top (required)>'

  678) TaxonConcept Varanidae LISTING eu_listing for species Varanus bengalensis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/varanidae.rb:80:in `block (2 levels) in <top (required)>'

  679) TaxonConcept Varanidae LISTING cites_listed for family Varanidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/varanidae.rb:80:in `block (2 levels) in <top (required)>'

  680) TaxonConcept Varanidae LISTING cites_listed for genus Varanus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/varanidae.rb:80:in `block (2 levels) in <top (required)>'

  681) TaxonConcept Varanidae LISTING cites_listed for species Varanus bengalensis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/varanidae.rb:80:in `block (2 levels) in <top (required)>'

  682) TaxonConcept Varanidae LISTING eu_listed for family Varanidae
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/varanidae.rb:80:in `block (2 levels) in <top (required)>'

  683) TaxonConcept Varanidae LISTING eu_listed for genus Varanus
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/varanidae.rb:80:in `block (2 levels) in <top (required)>'

  684) TaxonConcept Varanidae LISTING eu_listed for species Varanus bengalensis
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/varanidae.rb:80:in `block (2 levels) in <top (required)>'

  685) Trade::AnnualReportUpload valid? when uploaded file as exporter with exporter column headers
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  686) Trade::AnnualReportUpload valid? when uploaded file as importer with exporter column headers
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  687) Trade::AnnualReportUpload valid? when uploaded file as importer with importer column headers
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  688) Trade::AnnualReportUpload valid? when uploaded file as exporter with importer column headers
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  689) Trade::AnnualReportUpload validation_errors
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  690) Trade::AnnualReportUpload create when blank lines in import file
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  691) Trade::AnnualReportUpload destroy
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  692) Trade::DistinctValuesValidationRule validation_errors_for_aru exporter should not equal importer (E)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  693) Trade::DistinctValuesValidationRule validation_errors_for_aru exporter should not equal importer (I)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  694) Trade::DistinctValuesValidationRule validation_errors_for_aru exporter should not equal country of origin
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  695) Trade::Filter results when searching by taxon concepts ids in the public interface at GENUS rank
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/trade/filter_spec.rb:7:in `block (4 levels) in <top (required)>'

  696) Trade::Filter results when searching by taxon concepts ids in the public interface at GENUS rank
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/trade/filter_spec.rb:7:in `block (4 levels) in <top (required)>'

  697) Trade::Filter results when searching by taxon concepts ids in the public interface at GENUS rank
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/trade/filter_spec.rb:7:in `block (4 levels) in <top (required)>'

  698) Trade::Filter results when searching by taxon concepts ids in the public interface at FAMILY rank
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/trade/filter_spec.rb:7:in `block (4 levels) in <top (required)>'

  699) Trade::Filter results when searching by taxon concepts ids in the admin interface at GENUS rank
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/trade/filter_spec.rb:7:in `block (4 levels) in <top (required)>'

  700) Trade::Filter results when searching by taxon concepts ids in the admin interface at GENUS rank
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/trade/filter_spec.rb:7:in `block (4 levels) in <top (required)>'

  701) Trade::Filter results when searching by taxon concepts ids in the admin interface at GENUS rank
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/trade/filter_spec.rb:7:in `block (4 levels) in <top (required)>'

  702) Trade::Filter results when searching by taxon concepts ids in the admin interface at FAMILY rank
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/trade/filter_spec.rb:7:in `block (4 levels) in <top (required)>'

  703) Trade::Filter results when searching by taxon concepts ids in the admin interface at FAMILY rank
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/trade/filter_spec.rb:7:in `block (4 levels) in <top (required)>'

  704) Trade::Filter results when searching by taxon concepts ids in the admin interface at FAMILY rank
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/trade/filter_spec.rb:7:in `block (4 levels) in <top (required)>'

  705) Trade::Filter results when searching by taxon concepts ids in the admin interface at mixed ranks
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/trade/filter_spec.rb:7:in `block (4 levels) in <top (required)>'

  706) Trade::Filter results when searching by taxon concepts ids in the admin interface at mixed ranks
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/trade/filter_spec.rb:7:in `block (4 levels) in <top (required)>'

  707) Trade::Filter results when searching by taxon concepts ids in the admin interface at mixed ranks
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/trade/filter_spec.rb:7:in `block (4 levels) in <top (required)>'

  708) Trade::Filter results when searching by taxon concepts ids when status N shipments present
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/trade/filter_spec.rb:7:in `block (4 levels) in <top (required)>'

  709) Trade::Filter results when searching by taxon concepts ids when subspecies shipments present
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/trade/filter_spec.rb:7:in `block (4 levels) in <top (required)>'

  710) Trade::Filter results when searching by taxon concepts ids when synonym subspecies shipments present when searching by taxonomic parent
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/trade/filter_spec.rb:7:in `block (4 levels) in <top (required)>'

  711) Trade::Filter results when searching by taxon concepts ids when synonym subspecies shipments present when searching by accepted name
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/trade/filter_spec.rb:7:in `block (4 levels) in <top (required)>'

  712) Trade::Filter results when searching by reported taxon concepts ids when trade names shipments present
     Failure/Error: before(:each) { Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/trade/filter_spec.rb:108:in `block (4 levels) in <top (required)>'

  713) Trade::InclusionValidationRule matching_records_for_aru_and_error
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  714) Trade::InclusionValidationRule refresh_errors_if_needed when no updates
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  715) Trade::InclusionValidationRule refresh_errors_if_needed when updates and error fixed for all records error record is destroyed
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  716) Trade::InclusionValidationRule refresh_errors_if_needed when updates and error fixed for some records error record is updated to reflect new error_count
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  717) Trade::InclusionValidationRule validation_errors_for_aru species name may have extra whitespace between name segments
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  718) Trade::InclusionValidationRule validation_errors_for_aru trading partner should be a valid iso code
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  719) Trade::InclusionValidationRule validation_errors_for_aru term can only be paired with unit as defined by term_trade_codes_pairs table when invalid combination
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  720) Trade::InclusionValidationRule validation_errors_for_aru term can only be paired with unit as defined by term_trade_codes_pairs table when required unit blank
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  721) Trade::InclusionValidationRule validation_errors_for_aru term can only be paired with purpose as defined by term_trade_codes_pairs table
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  722) Trade::InclusionValidationRule validation_errors_for_aru taxon_concept_id can only be paired with term as defined by trade_taxon_concept_term_pairs table when accepted name
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  723) Trade::InclusionValidationRule validation_errors_for_aru taxon_concept_id can only be paired with term as defined by trade_taxon_concept_term_pairs table when hybrid
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  724) Trade::InclusionValidationRule validation_errors_for_aru when W source and country of origin blank and exporter doesn't match distribution (E)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  725) Trade::InclusionValidationRule validation_errors_for_aru when W source and country of origin blank and exporter doesn't match distribution (I)
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  726) Trade::InclusionValidationRule validation_errors_for_aru when W source and country XX
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  727) Trade::InclusionValidationRule validation_errors_for_aru when W source and country doesn't match distribution of higher taxa
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  728) Trade::InclusionValidationRule validation_errors_for_aru when invalid scope specified
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  729) Trade::SandboxFilter results
     Failure/Error: aru.save(:validate => false)
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function resolve_taxa_in_sandbox(unknown, unknown) does not exist
       LINE 1: SELECT * FROM resolve_taxa_in_sandbox('trade_sandbox_34', NU...
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM resolve_taxa_in_sandbox('trade_sandbox_34', NULL)
     # ./app/models/trade/sandbox_template.rb:85:in `sanitize'
     # ./app/models/trade/sandbox.rb:14:in `copy'
     # ./app/models/trade/annual_report_upload.rb:36:in `copy_to_sandbox'
     # ./app/models/trade/annual_report_upload_observer.rb:4:in `after_create'
     # ./spec/models/trade/sandbox_filter_spec.rb:5:in `block (2 levels) in <top (required)>'
     # ./spec/models/trade/sandbox_filter_spec.rb:9:in `block (2 levels) in <top (required)>'
     # ./spec/models/trade/sandbox_filter_spec.rb:23:in `block (2 levels) in <top (required)>'

  730) Trade::SandboxFilter results
     Failure/Error: aru.save(:validate => false)
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function resolve_taxa_in_sandbox(unknown, unknown) does not exist
       LINE 1: SELECT * FROM resolve_taxa_in_sandbox('trade_sandbox_35', NU...
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM resolve_taxa_in_sandbox('trade_sandbox_35', NULL)
     # ./app/models/trade/sandbox_template.rb:85:in `sanitize'
     # ./app/models/trade/sandbox.rb:14:in `copy'
     # ./app/models/trade/annual_report_upload.rb:36:in `copy_to_sandbox'
     # ./app/models/trade/annual_report_upload_observer.rb:4:in `after_create'
     # ./spec/models/trade/sandbox_filter_spec.rb:5:in `block (2 levels) in <top (required)>'
     # ./spec/models/trade/sandbox_filter_spec.rb:9:in `block (2 levels) in <top (required)>'
     # ./spec/models/trade/sandbox_filter_spec.rb:23:in `block (2 levels) in <top (required)>'

  731) Trade::Sandbox destroy
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  732) Trade::SandboxTemplate update
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  733) Trade::SandboxTemplate update_batch
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  734) Trade::InclusionValidationRule validation_errors when W source and country of origin matches distribution
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/pecari_tajacu.rb:109:in `block (2 levels) in <top (required)>'

  735) Trade::InclusionValidationRule validation_errors when W source and country of origin blank
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::RecordInvalid:
       Validation failed: Name has already been taken
     # ./spec/support/sapi_helpers.rb:4:in `cites_eu'
     # ./spec/support/sapi_helpers.rb:303:in `block (3 levels) in <top (required)>'
     # ./spec/support/sapi_helpers.rb:243:in `cites_eu_animalia'
     # ./spec/support/sapi_helpers.rb:253:in `cites_eu_chordata'
     # ./spec/support/sapi_helpers.rb:159:in `cites_eu_mammalia'
     # ./spec/shared/pecari_tajacu.rb:51:in `block (2 levels) in <top (required)>'

  736) Trade::Shipment secondary validations when species name + appendix + year invalid
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/trade/shipment_spec.rb:113:in `block (4 levels) in <top (required)>'

  737) Trade::Shipment secondary validations when species name + appendix + year invalid
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/trade/shipment_spec.rb:113:in `block (4 levels) in <top (required)>'

  738) Trade::Shipment secondary validations when species name + appendix + year valid
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/trade/shipment_spec.rb:113:in `block (4 levels) in <top (required)>'

  739) Trade::Shipment secondary validations when species name + appendix N + year valid
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/trade/shipment_spec.rb:153:in `block (4 levels) in <top (required)>'

  740) Trade::Shipment secondary validations when species name + appendix N + year not CITES listed and not EU listed
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/trade/shipment_spec.rb:174:in `block (4 levels) in <top (required)>'

  741) Trade::Shipment secondary validations when species name + source code invalid
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/trade/shipment_spec.rb:434:in `block (4 levels) in <top (required)>'

  742) Trade::Shipment secondary validations when species name + source code valid
     Failure/Error: Sapi::StoredProcedures.rebuild_cites_taxonomy_and_listings
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/models/trade/shipment_spec.rb:434:in `block (4 levels) in <top (required)>'

  743) Trade::ShipmentsComptabExport total_cnt when internal
     Failure/Error: specify { subject.total_cnt.should == 4 }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function full_name_with_spp(character varying, character varying, character varying) does not exist
       LINE 5:       full_name_with_spp(ranks.name, taxon_concept_full_name...
                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT year AS "Year", appendix AS "App.", taxon AS "Taxon", taxon_concept_id AS "Taxon ID", class_name AS "Class", order_name AS "Order", family_name AS "Family", genus_name AS "Genus", importer AS "Importer", exporter AS "Exporter", country_of_origin AS "Origin", importer_quantity AS "Importer reported quantity", exporter_quantity AS "Exporter reported quantity", term_name_en AS "Term", unit_name_en AS "Unit", purpose AS "Purpose", source AS "Source" FROM (SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             taxon_concept_class_name AS class_name,
             taxon_concept_order_name AS order_name,
             taxon_concept_family_name AS family_name,
             taxon_concept_genus_name AS genus_name,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             country_of_origin_id,
             countries_of_origin.iso_code2 AS country_of_origin,
             TRIM_DECIMAL_ZERO(
               SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END)
             ) AS importer_quantity,
             TRIM_DECIMAL_ZERO(
               SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
             ) AS exporter_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr,
             purpose_id,
             purposes.code AS purpose,
             source_id,
             sources.code AS source
           FROM (SELECT "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024)) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_family_name,
             taxon_concept_id,
             taxon_concept_name_status,
             taxon_concept_full_name,
             class_name,
             order_name,
             family_name,
             genus_name,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             country_of_origin_id,
             countries_of_origin.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr,
             purpose_id,
             purposes.code,
             source_id,
             sources.code
           ORDER BY
             year ASC,
             appendix,
             taxon_concept_family_name,
             taxon_concept_full_name,
             importers.iso_code2,
             exporters.iso_code2,
             countries_of_origin.iso_code2,
             terms.code,
             units.code,
             purposes.code,
             sources.code) subquery
     # ./app/models/trade/shipments_comptab_export.rb:5:in `total_cnt'
     # ./spec/models/trade/shipments_comptab_export_spec.rb:12:in `block (4 levels) in <top (required)>'

  744) Trade::ShipmentsComptabExport total_cnt when public
     Failure/Error: specify { subject.total_cnt.should == 4 }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function full_name_with_spp(character varying, character varying, character varying) does not exist
       LINE 5:       full_name_with_spp(ranks.name, taxon_concept_full_name...
                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT year AS "Year", appendix AS "App.", taxon AS "Taxon", class_name AS "Class", order_name AS "Order", family_name AS "Family", genus_name AS "Genus", importer AS "Importer", exporter AS "Exporter", country_of_origin AS "Origin", importer_quantity AS "Importer reported quantity", exporter_quantity AS "Exporter reported quantity", term_name_en AS "Term", unit_name_en AS "Unit", purpose AS "Purpose", source AS "Source" FROM (SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             taxon_concept_class_name AS class_name,
             taxon_concept_order_name AS order_name,
             taxon_concept_family_name AS family_name,
             taxon_concept_genus_name AS genus_name,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             country_of_origin_id,
             countries_of_origin.iso_code2 AS country_of_origin,
             TRIM_DECIMAL_ZERO(
               SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END)
             ) AS importer_quantity,
             TRIM_DECIMAL_ZERO(
               SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
             ) AS exporter_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr,
             purpose_id,
             purposes.code AS purpose,
             source_id,
             sources.code AS source
           FROM (SELECT "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024)) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_family_name,
             taxon_concept_id,
             taxon_concept_name_status,
             taxon_concept_full_name,
             class_name,
             order_name,
             family_name,
             genus_name,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             country_of_origin_id,
             countries_of_origin.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr,
             purpose_id,
             purposes.code,
             source_id,
             sources.code
           ORDER BY
             year ASC,
             appendix,
             taxon_concept_family_name,
             taxon_concept_full_name,
             importers.iso_code2,
             exporters.iso_code2,
             countries_of_origin.iso_code2,
             terms.code,
             units.code,
             purposes.code,
             sources.code) subquery
     # ./app/models/trade/shipments_comptab_export.rb:5:in `total_cnt'
     # ./spec/models/trade/shipments_comptab_export_spec.rb:16:in `block (4 levels) in <top (required)>'

  745) Trade::ShipmentsComptabExport query when internal
     Failure/Error: specify { subject.query.ntuples.should == 4 }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function full_name_with_spp(character varying, character varying, character varying) does not exist
       LINE 5:       full_name_with_spp(ranks.name, taxon_concept_full_name...
                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT year AS "Year", appendix AS "App.", taxon AS "Taxon", taxon_concept_id AS "Taxon ID", class_name AS "Class", order_name AS "Order", family_name AS "Family", genus_name AS "Genus", importer AS "Importer", exporter AS "Exporter", country_of_origin AS "Origin", importer_quantity AS "Importer reported quantity", exporter_quantity AS "Exporter reported quantity", term_name_en AS "Term", unit_name_en AS "Unit", purpose AS "Purpose", source AS "Source" FROM (SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             taxon_concept_class_name AS class_name,
             taxon_concept_order_name AS order_name,
             taxon_concept_family_name AS family_name,
             taxon_concept_genus_name AS genus_name,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             country_of_origin_id,
             countries_of_origin.iso_code2 AS country_of_origin,
             TRIM_DECIMAL_ZERO(
               SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END)
             ) AS importer_quantity,
             TRIM_DECIMAL_ZERO(
               SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
             ) AS exporter_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr,
             purpose_id,
             purposes.code AS purpose,
             source_id,
             sources.code AS source
           FROM (SELECT  "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024) LIMIT 4 OFFSET 0) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_family_name,
             taxon_concept_id,
             taxon_concept_name_status,
             taxon_concept_full_name,
             class_name,
             order_name,
             family_name,
             genus_name,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             country_of_origin_id,
             countries_of_origin.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr,
             purpose_id,
             purposes.code,
             source_id,
             sources.code
           ORDER BY
             year ASC,
             appendix,
             taxon_concept_family_name,
             taxon_concept_full_name,
             importers.iso_code2,
             exporters.iso_code2,
             countries_of_origin.iso_code2,
             terms.code,
             units.code,
             purposes.code,
             sources.code) subquery
     # ./app/models/trade/shipments_comptab_export.rb:9:in `query'
     # ./spec/models/trade/shipments_comptab_export_spec.rb:23:in `block (4 levels) in <top (required)>'

  746) Trade::ShipmentsComptabExport query when public
     Failure/Error: specify { subject.query.ntuples.should == 3 }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function full_name_with_spp(character varying, character varying, character varying) does not exist
       LINE 5:       full_name_with_spp(ranks.name, taxon_concept_full_name...
                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT year AS "Year", appendix AS "App.", taxon AS "Taxon", class_name AS "Class", order_name AS "Order", family_name AS "Family", genus_name AS "Genus", importer AS "Importer", exporter AS "Exporter", country_of_origin AS "Origin", importer_quantity AS "Importer reported quantity", exporter_quantity AS "Exporter reported quantity", term_name_en AS "Term", unit_name_en AS "Unit", purpose AS "Purpose", source AS "Source" FROM (SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             taxon_concept_class_name AS class_name,
             taxon_concept_order_name AS order_name,
             taxon_concept_family_name AS family_name,
             taxon_concept_genus_name AS genus_name,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             country_of_origin_id,
             countries_of_origin.iso_code2 AS country_of_origin,
             TRIM_DECIMAL_ZERO(
               SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END)
             ) AS importer_quantity,
             TRIM_DECIMAL_ZERO(
               SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
             ) AS exporter_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr,
             purpose_id,
             purposes.code AS purpose,
             source_id,
             sources.code AS source
           FROM (SELECT  "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024) LIMIT 3 OFFSET 0) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_family_name,
             taxon_concept_id,
             taxon_concept_name_status,
             taxon_concept_full_name,
             class_name,
             order_name,
             family_name,
             genus_name,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             country_of_origin_id,
             countries_of_origin.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr,
             purpose_id,
             purposes.code,
             source_id,
             sources.code
           ORDER BY
             year ASC,
             appendix,
             taxon_concept_family_name,
             taxon_concept_full_name,
             importers.iso_code2,
             exporters.iso_code2,
             countries_of_origin.iso_code2,
             terms.code,
             units.code,
             purposes.code,
             sources.code) subquery
     # ./app/models/trade/shipments_comptab_export.rb:9:in `query'
     # ./spec/models/trade/shipments_comptab_export_spec.rb:27:in `block (4 levels) in <top (required)>'

  747) Trade::ShipmentsExport query when internal
     Failure/Error: specify { subject.query.ntuples.should == 4 }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function full_name_with_spp(character varying, character varying, character varying) does not exist
       LINE 6:       full_name_with_spp(ranks.name, taxon_concept_full_name...
                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT id AS "ID", year AS "Year", appendix AS "App.", taxon AS "Taxon", taxon_concept_id AS "Taxon ID", class_name AS "Class", order_name AS "Order", family_name AS "Family", genus_name AS "Genus", reported_taxon AS "Reported Taxon", reported_taxon_concept_id AS "Reported Taxon ID", term_name_en AS "Term", quantity AS "Quantity", unit_name_en AS "Unit", importer AS "Importer", exporter AS "Exporter", country_of_origin AS "Origin", purpose AS "Purpose", source AS "Source", reporter_type AS "Reporter Type", import_permit_number AS "Import Permit", export_permit_number AS "Export Permit", origin_permit_number AS "Origin Permit", legacy_shipment_number AS "Legacy Shipment No", created_by AS "Created by", updated_by AS "Updated by" FROM (SELECT
             shipments.id,
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             reported_taxon_concept_id,
             full_name_with_spp(reported_taxon_ranks.name, reported_taxon_concept_full_name, reported_taxon_concept_name_status) AS reported_taxon,
             taxon_concept_class_name AS class_name,
             taxon_concept_order_name AS order_name,
             taxon_concept_family_name AS family_name,
             taxon_concept_genus_name AS genus_name,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             reported_by_exporter,
             CASE
               WHEN reported_by_exporter THEN 'E'
               ELSE 'I'
             END AS reporter_type,
             country_of_origin_id,
             countries_of_origin.iso_code2 AS country_of_origin,
             CASE WHEN quantity = 0 THEN NULL ELSE quantity END,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             purpose_id,
             purposes.code AS purpose,
             source_id,
             sources.code AS source,
             import_permit_number,
             export_permit_number,
             origin_permit_number,
             import_permits_ids,
             export_permits_ids,
             origin_permits_ids,
             legacy_shipment_number,
             uc.name AS created_by,
             uu.name AS updated_by
           FROM (SELECT  "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024) LIMIT 4 OFFSET 0) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           LEFT JOIN ranks AS reported_taxon_ranks
             ON reported_taxon_ranks.id = reported_taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           LEFT JOIN users as uc
             ON shipments.created_by_id = uc.id
           LEFT JOIN users as uu
             ON shipments.updated_by_id = uu.id) subquery
     # ./app/models/trade/shipments_export.rb:40:in `query'
     # ./spec/models/trade/shipments_export_spec.rb:23:in `block (4 levels) in <top (required)>'

  748) Trade::ShipmentsExport query when public
     Failure/Error: specify { subject.query.ntuples.should == 3 }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function full_name_with_spp(character varying, character varying, character varying) does not exist
       LINE 6:       full_name_with_spp(ranks.name, taxon_concept_full_name...
                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT year AS "Year", appendix AS "App.", taxon AS "Taxon", term_name_en AS "Term", quantity AS "Quantity", unit_name_en AS "Unit", importer AS "Importer", exporter AS "Exporter", country_of_origin AS "Origin", purpose AS "Purpose", source AS "Source" FROM (SELECT
             shipments.id,
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             reported_taxon_concept_id,
             full_name_with_spp(reported_taxon_ranks.name, reported_taxon_concept_full_name, reported_taxon_concept_name_status) AS reported_taxon,
             taxon_concept_class_name AS class_name,
             taxon_concept_order_name AS order_name,
             taxon_concept_family_name AS family_name,
             taxon_concept_genus_name AS genus_name,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             reported_by_exporter,
             CASE
               WHEN reported_by_exporter THEN 'E'
               ELSE 'I'
             END AS reporter_type,
             country_of_origin_id,
             countries_of_origin.iso_code2 AS country_of_origin,
             CASE WHEN quantity = 0 THEN NULL ELSE quantity END,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             purpose_id,
             purposes.code AS purpose,
             source_id,
             sources.code AS source,
             import_permit_number,
             export_permit_number,
             origin_permit_number,
             import_permits_ids,
             export_permits_ids,
             origin_permits_ids,
             legacy_shipment_number,
             uc.name AS created_by,
             uu.name AS updated_by
           FROM (SELECT  "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024) LIMIT 3 OFFSET 0) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           LEFT JOIN ranks AS reported_taxon_ranks
             ON reported_taxon_ranks.id = reported_taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           LEFT JOIN users as uc
             ON shipments.created_by_id = uc.id
           LEFT JOIN users as uu
             ON shipments.updated_by_id = uu.id) subquery
     # ./app/models/trade/shipments_export.rb:40:in `query'
     # ./spec/models/trade/shipments_export_spec.rb:27:in `block (4 levels) in <top (required)>'

  749) Trade::ShipmentsGrossExportsExport total_cnt when internal
     Failure/Error: specify { subject.total_cnt.should == 4 }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function full_name_with_spp(character varying, character varying, character varying) does not exist
       LINE 8:       full_name_with_spp(ranks.name, taxon_concept_full_name...
                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       QUERY:  SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon_concept_id, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024)) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id AS country_id,
             exporter AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id,
             exporter
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 8
       : SELECT appendix AS "App.", taxon AS "Taxon", taxon_concept_id AS "Taxon ID", term_name_en AS "Term", unit_name_en AS "Unit", country AS "Country", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024" FROM (      SELECT * FROM CROSSTAB('SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon_concept_id, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024)) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id AS country_id,
             exporter AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id,
             exporter
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 8', 'SELECT * FROM UNNEST(ARRAY[1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024])')
             AS ct(row_name TEXT[], appendix TEXT, taxon_concept_id INT, taxon TEXT, term_name_en TEXT, unit_name_en TEXT, country TEXT, "1975" numeric, "1976" numeric, "1977" numeric, "1978" numeric, "1979" numeric, "1980" numeric, "1981" numeric, "1982" numeric, "1983" numeric, "1984" numeric, "1985" numeric, "1986" numeric, "1987" numeric, "1988" numeric, "1989" numeric, "1990" numeric, "1991" numeric, "1992" numeric, "1993" numeric, "1994" numeric, "1995" numeric, "1996" numeric, "1997" numeric, "1998" numeric, "1999" numeric, "2000" numeric, "2001" numeric, "2002" numeric, "2003" numeric, "2004" numeric, "2005" numeric, "2006" numeric, "2007" numeric, "2008" numeric, "2009" numeric, "2010" numeric, "2011" numeric, "2012" numeric, "2013" numeric, "2014" numeric, "2015" numeric, "2016" numeric, "2017" numeric, "2018" numeric, "2019" numeric, "2020" numeric, "2021" numeric, "2022" numeric, "2023" numeric, "2024" numeric)
       ) ct_subquery
     # ./app/models/trade/shipments_comptab_export.rb:5:in `total_cnt'
     # ./spec/models/trade/shipments_gross_exports_export_spec.rb:12:in `block (4 levels) in <top (required)>'

  750) Trade::ShipmentsGrossExportsExport total_cnt when public
     Failure/Error: specify { subject.total_cnt.should == 4 }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function full_name_with_spp(character varying, character varying, character varying) does not exist
       LINE 8:       full_name_with_spp(ranks.name, taxon_concept_full_name...
                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       QUERY:  SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024)) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id AS country_id,
             exporter AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id,
             exporter
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 7
       : SELECT appendix AS "App.", taxon AS "Taxon", term_name_en AS "Term", unit_name_en AS "Unit", country AS "Country", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024" FROM (      SELECT * FROM CROSSTAB('SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024)) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id AS country_id,
             exporter AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id,
             exporter
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 7', 'SELECT * FROM UNNEST(ARRAY[1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024])')
             AS ct(row_name TEXT[], appendix TEXT, taxon TEXT, term_name_en TEXT, unit_name_en TEXT, country TEXT, "1975" numeric, "1976" numeric, "1977" numeric, "1978" numeric, "1979" numeric, "1980" numeric, "1981" numeric, "1982" numeric, "1983" numeric, "1984" numeric, "1985" numeric, "1986" numeric, "1987" numeric, "1988" numeric, "1989" numeric, "1990" numeric, "1991" numeric, "1992" numeric, "1993" numeric, "1994" numeric, "1995" numeric, "1996" numeric, "1997" numeric, "1998" numeric, "1999" numeric, "2000" numeric, "2001" numeric, "2002" numeric, "2003" numeric, "2004" numeric, "2005" numeric, "2006" numeric, "2007" numeric, "2008" numeric, "2009" numeric, "2010" numeric, "2011" numeric, "2012" numeric, "2013" numeric, "2014" numeric, "2015" numeric, "2016" numeric, "2017" numeric, "2018" numeric, "2019" numeric, "2020" numeric, "2021" numeric, "2022" numeric, "2023" numeric, "2024" numeric)
       ) ct_subquery
     # ./app/models/trade/shipments_comptab_export.rb:5:in `total_cnt'
     # ./spec/models/trade/shipments_gross_exports_export_spec.rb:16:in `block (4 levels) in <top (required)>'

  751) Trade::ShipmentsGrossExportsExport query when internal
     Failure/Error: specify { subject.query.ntuples.should == 4 }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function full_name_with_spp(character varying, character varying, character varying) does not exist
       LINE 8:       full_name_with_spp(ranks.name, taxon_concept_full_name...
                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       QUERY:  SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon_concept_id, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT  "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024) LIMIT 4 OFFSET 0) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id AS country_id,
             exporter AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id,
             exporter
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 8
       : SELECT appendix AS "App.", taxon AS "Taxon", taxon_concept_id AS "Taxon ID", term_name_en AS "Term", unit_name_en AS "Unit", country AS "Country", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024" FROM (      SELECT * FROM CROSSTAB('SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon_concept_id, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT  "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024) LIMIT 4 OFFSET 0) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id AS country_id,
             exporter AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id,
             exporter
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 8', 'SELECT * FROM UNNEST(ARRAY[1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024])')
             AS ct(row_name TEXT[], appendix TEXT, taxon_concept_id INT, taxon TEXT, term_name_en TEXT, unit_name_en TEXT, country TEXT, "1975" numeric, "1976" numeric, "1977" numeric, "1978" numeric, "1979" numeric, "1980" numeric, "1981" numeric, "1982" numeric, "1983" numeric, "1984" numeric, "1985" numeric, "1986" numeric, "1987" numeric, "1988" numeric, "1989" numeric, "1990" numeric, "1991" numeric, "1992" numeric, "1993" numeric, "1994" numeric, "1995" numeric, "1996" numeric, "1997" numeric, "1998" numeric, "1999" numeric, "2000" numeric, "2001" numeric, "2002" numeric, "2003" numeric, "2004" numeric, "2005" numeric, "2006" numeric, "2007" numeric, "2008" numeric, "2009" numeric, "2010" numeric, "2011" numeric, "2012" numeric, "2013" numeric, "2014" numeric, "2015" numeric, "2016" numeric, "2017" numeric, "2018" numeric, "2019" numeric, "2020" numeric, "2021" numeric, "2022" numeric, "2023" numeric, "2024" numeric)
       ) ct_subquery
     # ./app/models/trade/shipments_comptab_export.rb:9:in `query'
     # ./spec/models/trade/shipments_gross_exports_export_spec.rb:23:in `block (4 levels) in <top (required)>'

  752) Trade::ShipmentsGrossExportsExport query when public
     Failure/Error: specify { subject.query.ntuples.should == 3 }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function full_name_with_spp(character varying, character varying, character varying) does not exist
       LINE 8:       full_name_with_spp(ranks.name, taxon_concept_full_name...
                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       QUERY:  SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT  "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024) LIMIT 3 OFFSET 0) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id AS country_id,
             exporter AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id,
             exporter
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 7
       : SELECT appendix AS "App.", taxon AS "Taxon", term_name_en AS "Term", unit_name_en AS "Unit", country AS "Country", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024" FROM (      SELECT * FROM CROSSTAB('SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT  "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024) LIMIT 3 OFFSET 0) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id AS country_id,
             exporter AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id,
             exporter
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 7', 'SELECT * FROM UNNEST(ARRAY[1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024])')
             AS ct(row_name TEXT[], appendix TEXT, taxon TEXT, term_name_en TEXT, unit_name_en TEXT, country TEXT, "1975" numeric, "1976" numeric, "1977" numeric, "1978" numeric, "1979" numeric, "1980" numeric, "1981" numeric, "1982" numeric, "1983" numeric, "1984" numeric, "1985" numeric, "1986" numeric, "1987" numeric, "1988" numeric, "1989" numeric, "1990" numeric, "1991" numeric, "1992" numeric, "1993" numeric, "1994" numeric, "1995" numeric, "1996" numeric, "1997" numeric, "1998" numeric, "1999" numeric, "2000" numeric, "2001" numeric, "2002" numeric, "2003" numeric, "2004" numeric, "2005" numeric, "2006" numeric, "2007" numeric, "2008" numeric, "2009" numeric, "2010" numeric, "2011" numeric, "2012" numeric, "2013" numeric, "2014" numeric, "2015" numeric, "2016" numeric, "2017" numeric, "2018" numeric, "2019" numeric, "2020" numeric, "2021" numeric, "2022" numeric, "2023" numeric, "2024" numeric)
       ) ct_subquery
     # ./app/models/trade/shipments_comptab_export.rb:9:in `query'
     # ./spec/models/trade/shipments_gross_exports_export_spec.rb:27:in `block (4 levels) in <top (required)>'

  753) Trade::ShipmentsGrossImportsExport total_cnt when internal
     Failure/Error: specify { subject.total_cnt.should == 4 }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function full_name_with_spp(character varying, character varying, character varying) does not exist
       LINE 8:       full_name_with_spp(ranks.name, taxon_concept_full_name...
                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       QUERY:  SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon_concept_id, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024)) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id AS country_id,
             importer AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id,
             importer
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 8
       : SELECT appendix AS "App.", taxon AS "Taxon", taxon_concept_id AS "Taxon ID", term_name_en AS "Term", unit_name_en AS "Unit", country AS "Country", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024" FROM (      SELECT * FROM CROSSTAB('SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon_concept_id, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024)) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id AS country_id,
             importer AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id,
             importer
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 8', 'SELECT * FROM UNNEST(ARRAY[1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024])')
             AS ct(row_name TEXT[], appendix TEXT, taxon_concept_id INT, taxon TEXT, term_name_en TEXT, unit_name_en TEXT, country TEXT, "1975" numeric, "1976" numeric, "1977" numeric, "1978" numeric, "1979" numeric, "1980" numeric, "1981" numeric, "1982" numeric, "1983" numeric, "1984" numeric, "1985" numeric, "1986" numeric, "1987" numeric, "1988" numeric, "1989" numeric, "1990" numeric, "1991" numeric, "1992" numeric, "1993" numeric, "1994" numeric, "1995" numeric, "1996" numeric, "1997" numeric, "1998" numeric, "1999" numeric, "2000" numeric, "2001" numeric, "2002" numeric, "2003" numeric, "2004" numeric, "2005" numeric, "2006" numeric, "2007" numeric, "2008" numeric, "2009" numeric, "2010" numeric, "2011" numeric, "2012" numeric, "2013" numeric, "2014" numeric, "2015" numeric, "2016" numeric, "2017" numeric, "2018" numeric, "2019" numeric, "2020" numeric, "2021" numeric, "2022" numeric, "2023" numeric, "2024" numeric)
       ) ct_subquery
     # ./app/models/trade/shipments_comptab_export.rb:5:in `total_cnt'
     # ./spec/models/trade/shipments_gross_imports_export_spec.rb:12:in `block (4 levels) in <top (required)>'

  754) Trade::ShipmentsGrossImportsExport total_cnt when public
     Failure/Error: specify { subject.total_cnt.should == 4 }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function full_name_with_spp(character varying, character varying, character varying) does not exist
       LINE 8:       full_name_with_spp(ranks.name, taxon_concept_full_name...
                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       QUERY:  SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024)) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id AS country_id,
             importer AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id,
             importer
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 7
       : SELECT appendix AS "App.", taxon AS "Taxon", term_name_en AS "Term", unit_name_en AS "Unit", country AS "Country", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024" FROM (      SELECT * FROM CROSSTAB('SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024)) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id AS country_id,
             importer AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id,
             importer
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 7', 'SELECT * FROM UNNEST(ARRAY[1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024])')
             AS ct(row_name TEXT[], appendix TEXT, taxon TEXT, term_name_en TEXT, unit_name_en TEXT, country TEXT, "1975" numeric, "1976" numeric, "1977" numeric, "1978" numeric, "1979" numeric, "1980" numeric, "1981" numeric, "1982" numeric, "1983" numeric, "1984" numeric, "1985" numeric, "1986" numeric, "1987" numeric, "1988" numeric, "1989" numeric, "1990" numeric, "1991" numeric, "1992" numeric, "1993" numeric, "1994" numeric, "1995" numeric, "1996" numeric, "1997" numeric, "1998" numeric, "1999" numeric, "2000" numeric, "2001" numeric, "2002" numeric, "2003" numeric, "2004" numeric, "2005" numeric, "2006" numeric, "2007" numeric, "2008" numeric, "2009" numeric, "2010" numeric, "2011" numeric, "2012" numeric, "2013" numeric, "2014" numeric, "2015" numeric, "2016" numeric, "2017" numeric, "2018" numeric, "2019" numeric, "2020" numeric, "2021" numeric, "2022" numeric, "2023" numeric, "2024" numeric)
       ) ct_subquery
     # ./app/models/trade/shipments_comptab_export.rb:5:in `total_cnt'
     # ./spec/models/trade/shipments_gross_imports_export_spec.rb:16:in `block (4 levels) in <top (required)>'

  755) Trade::ShipmentsGrossImportsExport query when internal
     Failure/Error: specify { subject.query.ntuples.should == 4 }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function full_name_with_spp(character varying, character varying, character varying) does not exist
       LINE 8:       full_name_with_spp(ranks.name, taxon_concept_full_name...
                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       QUERY:  SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon_concept_id, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT  "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024) LIMIT 4 OFFSET 0) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id AS country_id,
             importer AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id,
             importer
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 8
       : SELECT appendix AS "App.", taxon AS "Taxon", taxon_concept_id AS "Taxon ID", term_name_en AS "Term", unit_name_en AS "Unit", country AS "Country", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024" FROM (      SELECT * FROM CROSSTAB('SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon_concept_id, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT  "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024) LIMIT 4 OFFSET 0) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id AS country_id,
             importer AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id,
             importer
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 8', 'SELECT * FROM UNNEST(ARRAY[1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024])')
             AS ct(row_name TEXT[], appendix TEXT, taxon_concept_id INT, taxon TEXT, term_name_en TEXT, unit_name_en TEXT, country TEXT, "1975" numeric, "1976" numeric, "1977" numeric, "1978" numeric, "1979" numeric, "1980" numeric, "1981" numeric, "1982" numeric, "1983" numeric, "1984" numeric, "1985" numeric, "1986" numeric, "1987" numeric, "1988" numeric, "1989" numeric, "1990" numeric, "1991" numeric, "1992" numeric, "1993" numeric, "1994" numeric, "1995" numeric, "1996" numeric, "1997" numeric, "1998" numeric, "1999" numeric, "2000" numeric, "2001" numeric, "2002" numeric, "2003" numeric, "2004" numeric, "2005" numeric, "2006" numeric, "2007" numeric, "2008" numeric, "2009" numeric, "2010" numeric, "2011" numeric, "2012" numeric, "2013" numeric, "2014" numeric, "2015" numeric, "2016" numeric, "2017" numeric, "2018" numeric, "2019" numeric, "2020" numeric, "2021" numeric, "2022" numeric, "2023" numeric, "2024" numeric)
       ) ct_subquery
     # ./app/models/trade/shipments_comptab_export.rb:9:in `query'
     # ./spec/models/trade/shipments_gross_imports_export_spec.rb:23:in `block (4 levels) in <top (required)>'

  756) Trade::ShipmentsGrossImportsExport query when public
     Failure/Error: specify { subject.query.ntuples.should == 3 }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function full_name_with_spp(character varying, character varying, character varying) does not exist
       LINE 8:       full_name_with_spp(ranks.name, taxon_concept_full_name...
                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       QUERY:  SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT  "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024) LIMIT 3 OFFSET 0) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id AS country_id,
             importer AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id,
             importer
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 7
       : SELECT appendix AS "App.", taxon AS "Taxon", term_name_en AS "Term", unit_name_en AS "Unit", country AS "Country", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024" FROM (      SELECT * FROM CROSSTAB('SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT  "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024) LIMIT 3 OFFSET 0) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id AS country_id,
             importer AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id,
             importer
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 7', 'SELECT * FROM UNNEST(ARRAY[1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024])')
             AS ct(row_name TEXT[], appendix TEXT, taxon TEXT, term_name_en TEXT, unit_name_en TEXT, country TEXT, "1975" numeric, "1976" numeric, "1977" numeric, "1978" numeric, "1979" numeric, "1980" numeric, "1981" numeric, "1982" numeric, "1983" numeric, "1984" numeric, "1985" numeric, "1986" numeric, "1987" numeric, "1988" numeric, "1989" numeric, "1990" numeric, "1991" numeric, "1992" numeric, "1993" numeric, "1994" numeric, "1995" numeric, "1996" numeric, "1997" numeric, "1998" numeric, "1999" numeric, "2000" numeric, "2001" numeric, "2002" numeric, "2003" numeric, "2004" numeric, "2005" numeric, "2006" numeric, "2007" numeric, "2008" numeric, "2009" numeric, "2010" numeric, "2011" numeric, "2012" numeric, "2013" numeric, "2014" numeric, "2015" numeric, "2016" numeric, "2017" numeric, "2018" numeric, "2019" numeric, "2020" numeric, "2021" numeric, "2022" numeric, "2023" numeric, "2024" numeric)
       ) ct_subquery
     # ./app/models/trade/shipments_comptab_export.rb:9:in `query'
     # ./spec/models/trade/shipments_gross_imports_export_spec.rb:27:in `block (4 levels) in <top (required)>'

  757) Trade::ShipmentsNetExportsExport total_cnt when internal
     Failure/Error: specify { subject.total_cnt.should == 4 }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function full_name_with_spp(character varying, character varying, character varying) does not exist
       LINE 9:       full_name_with_spp(ranks.name, taxon_concept_full_name...
                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       QUERY:  SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon_concept_id, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH exports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024)) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id AS country_id,
             exporter AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id,
             exporter
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           ), imports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024)) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id AS country_id,
             importer AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id,
             importer
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           )
           SELECT
             exports.year,
             exports.appendix,
             exports.taxon_concept_id,
             exports.taxon,
             exports.term_id,
             exports.term,
             exports.term_name_en,
             exports.term_name_es,
             exports.term_name_fr,
             exports.unit_id,
             exports.unit,
             exports.unit_name_en,
             exports.unit_name_es,
             exports.unit_name_fr,
             exports.country_id,
             exports.country,
             TRIM_DECIMAL_ZERO(
               CASE
                 WHEN (exports.gross_quantity - COALESCE(imports.gross_quantity, 0)) > 0
                 THEN exports.gross_quantity - COALESCE(imports.gross_quantity, 0)
                 ELSE NULL
               END
             ) AS gross_quantity
           FROM exports
           LEFT JOIN imports
           ON exports.taxon_concept_id = imports.taxon_concept_id
           AND exports.appendix = imports.appendix
           AND exports.year = imports.year
           AND exports.term_id = imports.term_id
           AND (exports.unit_id = imports.unit_id OR exports.unit_id IS NULL AND imports.unit_id IS NULL)
           AND exports.year = imports.year
           AND exports.country_id = imports.country_id
           WHERE (exports.gross_quantity - COALESCE(imports.gross_quantity, 0)) > 0
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 8
       : SELECT appendix AS "App.", taxon AS "Taxon", taxon_concept_id AS "Taxon ID", term_name_en AS "Term", unit_name_en AS "Unit", country AS "Country", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024" FROM (      SELECT * FROM CROSSTAB('SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon_concept_id, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH exports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024)) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id AS country_id,
             exporter AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id,
             exporter
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           ), imports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024)) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id AS country_id,
             importer AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id,
             importer
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           )
           SELECT
             exports.year,
             exports.appendix,
             exports.taxon_concept_id,
             exports.taxon,
             exports.term_id,
             exports.term,
             exports.term_name_en,
             exports.term_name_es,
             exports.term_name_fr,
             exports.unit_id,
             exports.unit,
             exports.unit_name_en,
             exports.unit_name_es,
             exports.unit_name_fr,
             exports.country_id,
             exports.country,
             TRIM_DECIMAL_ZERO(
               CASE
                 WHEN (exports.gross_quantity - COALESCE(imports.gross_quantity, 0)) > 0
                 THEN exports.gross_quantity - COALESCE(imports.gross_quantity, 0)
                 ELSE NULL
               END
             ) AS gross_quantity
           FROM exports
           LEFT JOIN imports
           ON exports.taxon_concept_id = imports.taxon_concept_id
           AND exports.appendix = imports.appendix
           AND exports.year = imports.year
           AND exports.term_id = imports.term_id
           AND (exports.unit_id = imports.unit_id OR exports.unit_id IS NULL AND imports.unit_id IS NULL)
           AND exports.year = imports.year
           AND exports.country_id = imports.country_id
           WHERE (exports.gross_quantity - COALESCE(imports.gross_quantity, 0)) > 0
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 8', 'SELECT * FROM UNNEST(ARRAY[1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024])')
             AS ct(row_name TEXT[], appendix TEXT, taxon_concept_id INT, taxon TEXT, term_name_en TEXT, unit_name_en TEXT, country TEXT, "1975" numeric, "1976" numeric, "1977" numeric, "1978" numeric, "1979" numeric, "1980" numeric, "1981" numeric, "1982" numeric, "1983" numeric, "1984" numeric, "1985" numeric, "1986" numeric, "1987" numeric, "1988" numeric, "1989" numeric, "1990" numeric, "1991" numeric, "1992" numeric, "1993" numeric, "1994" numeric, "1995" numeric, "1996" numeric, "1997" numeric, "1998" numeric, "1999" numeric, "2000" numeric, "2001" numeric, "2002" numeric, "2003" numeric, "2004" numeric, "2005" numeric, "2006" numeric, "2007" numeric, "2008" numeric, "2009" numeric, "2010" numeric, "2011" numeric, "2012" numeric, "2013" numeric, "2014" numeric, "2015" numeric, "2016" numeric, "2017" numeric, "2018" numeric, "2019" numeric, "2020" numeric, "2021" numeric, "2022" numeric, "2023" numeric, "2024" numeric)
       ) ct_subquery
     # ./app/models/trade/shipments_comptab_export.rb:5:in `total_cnt'
     # ./spec/models/trade/shipments_net_exports_export_spec.rb:12:in `block (4 levels) in <top (required)>'

  758) Trade::ShipmentsNetExportsExport total_cnt when public
     Failure/Error: specify { subject.total_cnt.should == 4 }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function full_name_with_spp(character varying, character varying, character varying) does not exist
       LINE 9:       full_name_with_spp(ranks.name, taxon_concept_full_name...
                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       QUERY:  SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH exports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024)) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id AS country_id,
             exporter AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id,
             exporter
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           ), imports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024)) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id AS country_id,
             importer AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id,
             importer
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           )
           SELECT
             exports.year,
             exports.appendix,
             exports.taxon_concept_id,
             exports.taxon,
             exports.term_id,
             exports.term,
             exports.term_name_en,
             exports.term_name_es,
             exports.term_name_fr,
             exports.unit_id,
             exports.unit,
             exports.unit_name_en,
             exports.unit_name_es,
             exports.unit_name_fr,
             exports.country_id,
             exports.country,
             TRIM_DECIMAL_ZERO(
               CASE
                 WHEN (exports.gross_quantity - COALESCE(imports.gross_quantity, 0)) > 0
                 THEN exports.gross_quantity - COALESCE(imports.gross_quantity, 0)
                 ELSE NULL
               END
             ) AS gross_quantity
           FROM exports
           LEFT JOIN imports
           ON exports.taxon_concept_id = imports.taxon_concept_id
           AND exports.appendix = imports.appendix
           AND exports.year = imports.year
           AND exports.term_id = imports.term_id
           AND (exports.unit_id = imports.unit_id OR exports.unit_id IS NULL AND imports.unit_id IS NULL)
           AND exports.year = imports.year
           AND exports.country_id = imports.country_id
           WHERE (exports.gross_quantity - COALESCE(imports.gross_quantity, 0)) > 0
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 7
       : SELECT appendix AS "App.", taxon AS "Taxon", term_name_en AS "Term", unit_name_en AS "Unit", country AS "Country", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024" FROM (      SELECT * FROM CROSSTAB('SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH exports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024)) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id AS country_id,
             exporter AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id,
             exporter
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           ), imports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024)) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id AS country_id,
             importer AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id,
             importer
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           )
           SELECT
             exports.year,
             exports.appendix,
             exports.taxon_concept_id,
             exports.taxon,
             exports.term_id,
             exports.term,
             exports.term_name_en,
             exports.term_name_es,
             exports.term_name_fr,
             exports.unit_id,
             exports.unit,
             exports.unit_name_en,
             exports.unit_name_es,
             exports.unit_name_fr,
             exports.country_id,
             exports.country,
             TRIM_DECIMAL_ZERO(
               CASE
                 WHEN (exports.gross_quantity - COALESCE(imports.gross_quantity, 0)) > 0
                 THEN exports.gross_quantity - COALESCE(imports.gross_quantity, 0)
                 ELSE NULL
               END
             ) AS gross_quantity
           FROM exports
           LEFT JOIN imports
           ON exports.taxon_concept_id = imports.taxon_concept_id
           AND exports.appendix = imports.appendix
           AND exports.year = imports.year
           AND exports.term_id = imports.term_id
           AND (exports.unit_id = imports.unit_id OR exports.unit_id IS NULL AND imports.unit_id IS NULL)
           AND exports.year = imports.year
           AND exports.country_id = imports.country_id
           WHERE (exports.gross_quantity - COALESCE(imports.gross_quantity, 0)) > 0
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 7', 'SELECT * FROM UNNEST(ARRAY[1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024])')
             AS ct(row_name TEXT[], appendix TEXT, taxon TEXT, term_name_en TEXT, unit_name_en TEXT, country TEXT, "1975" numeric, "1976" numeric, "1977" numeric, "1978" numeric, "1979" numeric, "1980" numeric, "1981" numeric, "1982" numeric, "1983" numeric, "1984" numeric, "1985" numeric, "1986" numeric, "1987" numeric, "1988" numeric, "1989" numeric, "1990" numeric, "1991" numeric, "1992" numeric, "1993" numeric, "1994" numeric, "1995" numeric, "1996" numeric, "1997" numeric, "1998" numeric, "1999" numeric, "2000" numeric, "2001" numeric, "2002" numeric, "2003" numeric, "2004" numeric, "2005" numeric, "2006" numeric, "2007" numeric, "2008" numeric, "2009" numeric, "2010" numeric, "2011" numeric, "2012" numeric, "2013" numeric, "2014" numeric, "2015" numeric, "2016" numeric, "2017" numeric, "2018" numeric, "2019" numeric, "2020" numeric, "2021" numeric, "2022" numeric, "2023" numeric, "2024" numeric)
       ) ct_subquery
     # ./app/models/trade/shipments_comptab_export.rb:5:in `total_cnt'
     # ./spec/models/trade/shipments_net_exports_export_spec.rb:16:in `block (4 levels) in <top (required)>'

  759) Trade::ShipmentsNetExportsExport query when internal
     Failure/Error: specify { subject.query.ntuples.should == 4 }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function full_name_with_spp(character varying, character varying, character varying) does not exist
       LINE 9:       full_name_with_spp(ranks.name, taxon_concept_full_name...
                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       QUERY:  SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon_concept_id, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH exports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT  "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024) LIMIT 4 OFFSET 0) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id AS country_id,
             exporter AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id,
             exporter
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           ), imports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT  "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024) LIMIT 4 OFFSET 0) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id AS country_id,
             importer AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id,
             importer
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           )
           SELECT
             exports.year,
             exports.appendix,
             exports.taxon_concept_id,
             exports.taxon,
             exports.term_id,
             exports.term,
             exports.term_name_en,
             exports.term_name_es,
             exports.term_name_fr,
             exports.unit_id,
             exports.unit,
             exports.unit_name_en,
             exports.unit_name_es,
             exports.unit_name_fr,
             exports.country_id,
             exports.country,
             TRIM_DECIMAL_ZERO(
               CASE
                 WHEN (exports.gross_quantity - COALESCE(imports.gross_quantity, 0)) > 0
                 THEN exports.gross_quantity - COALESCE(imports.gross_quantity, 0)
                 ELSE NULL
               END
             ) AS gross_quantity
           FROM exports
           LEFT JOIN imports
           ON exports.taxon_concept_id = imports.taxon_concept_id
           AND exports.appendix = imports.appendix
           AND exports.year = imports.year
           AND exports.term_id = imports.term_id
           AND (exports.unit_id = imports.unit_id OR exports.unit_id IS NULL AND imports.unit_id IS NULL)
           AND exports.year = imports.year
           AND exports.country_id = imports.country_id
           WHERE (exports.gross_quantity - COALESCE(imports.gross_quantity, 0)) > 0
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 8
       : SELECT appendix AS "App.", taxon AS "Taxon", taxon_concept_id AS "Taxon ID", term_name_en AS "Term", unit_name_en AS "Unit", country AS "Country", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024" FROM (      SELECT * FROM CROSSTAB('SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon_concept_id, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH exports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT  "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024) LIMIT 4 OFFSET 0) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id AS country_id,
             exporter AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id,
             exporter
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           ), imports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT  "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024) LIMIT 4 OFFSET 0) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id AS country_id,
             importer AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id,
             importer
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           )
           SELECT
             exports.year,
             exports.appendix,
             exports.taxon_concept_id,
             exports.taxon,
             exports.term_id,
             exports.term,
             exports.term_name_en,
             exports.term_name_es,
             exports.term_name_fr,
             exports.unit_id,
             exports.unit,
             exports.unit_name_en,
             exports.unit_name_es,
             exports.unit_name_fr,
             exports.country_id,
             exports.country,
             TRIM_DECIMAL_ZERO(
               CASE
                 WHEN (exports.gross_quantity - COALESCE(imports.gross_quantity, 0)) > 0
                 THEN exports.gross_quantity - COALESCE(imports.gross_quantity, 0)
                 ELSE NULL
               END
             ) AS gross_quantity
           FROM exports
           LEFT JOIN imports
           ON exports.taxon_concept_id = imports.taxon_concept_id
           AND exports.appendix = imports.appendix
           AND exports.year = imports.year
           AND exports.term_id = imports.term_id
           AND (exports.unit_id = imports.unit_id OR exports.unit_id IS NULL AND imports.unit_id IS NULL)
           AND exports.year = imports.year
           AND exports.country_id = imports.country_id
           WHERE (exports.gross_quantity - COALESCE(imports.gross_quantity, 0)) > 0
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 8', 'SELECT * FROM UNNEST(ARRAY[1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024])')
             AS ct(row_name TEXT[], appendix TEXT, taxon_concept_id INT, taxon TEXT, term_name_en TEXT, unit_name_en TEXT, country TEXT, "1975" numeric, "1976" numeric, "1977" numeric, "1978" numeric, "1979" numeric, "1980" numeric, "1981" numeric, "1982" numeric, "1983" numeric, "1984" numeric, "1985" numeric, "1986" numeric, "1987" numeric, "1988" numeric, "1989" numeric, "1990" numeric, "1991" numeric, "1992" numeric, "1993" numeric, "1994" numeric, "1995" numeric, "1996" numeric, "1997" numeric, "1998" numeric, "1999" numeric, "2000" numeric, "2001" numeric, "2002" numeric, "2003" numeric, "2004" numeric, "2005" numeric, "2006" numeric, "2007" numeric, "2008" numeric, "2009" numeric, "2010" numeric, "2011" numeric, "2012" numeric, "2013" numeric, "2014" numeric, "2015" numeric, "2016" numeric, "2017" numeric, "2018" numeric, "2019" numeric, "2020" numeric, "2021" numeric, "2022" numeric, "2023" numeric, "2024" numeric)
       ) ct_subquery
     # ./app/models/trade/shipments_comptab_export.rb:9:in `query'
     # ./spec/models/trade/shipments_net_exports_export_spec.rb:23:in `block (4 levels) in <top (required)>'

  760) Trade::ShipmentsNetExportsExport query when public
     Failure/Error: specify { subject.query.ntuples.should == 3 }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function full_name_with_spp(character varying, character varying, character varying) does not exist
       LINE 9:       full_name_with_spp(ranks.name, taxon_concept_full_name...
                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       QUERY:  SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH exports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT  "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024) LIMIT 3 OFFSET 0) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id AS country_id,
             exporter AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id,
             exporter
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           ), imports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT  "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024) LIMIT 3 OFFSET 0) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id AS country_id,
             importer AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id,
             importer
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           )
           SELECT
             exports.year,
             exports.appendix,
             exports.taxon_concept_id,
             exports.taxon,
             exports.term_id,
             exports.term,
             exports.term_name_en,
             exports.term_name_es,
             exports.term_name_fr,
             exports.unit_id,
             exports.unit,
             exports.unit_name_en,
             exports.unit_name_es,
             exports.unit_name_fr,
             exports.country_id,
             exports.country,
             TRIM_DECIMAL_ZERO(
               CASE
                 WHEN (exports.gross_quantity - COALESCE(imports.gross_quantity, 0)) > 0
                 THEN exports.gross_quantity - COALESCE(imports.gross_quantity, 0)
                 ELSE NULL
               END
             ) AS gross_quantity
           FROM exports
           LEFT JOIN imports
           ON exports.taxon_concept_id = imports.taxon_concept_id
           AND exports.appendix = imports.appendix
           AND exports.year = imports.year
           AND exports.term_id = imports.term_id
           AND (exports.unit_id = imports.unit_id OR exports.unit_id IS NULL AND imports.unit_id IS NULL)
           AND exports.year = imports.year
           AND exports.country_id = imports.country_id
           WHERE (exports.gross_quantity - COALESCE(imports.gross_quantity, 0)) > 0
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 7
       : SELECT appendix AS "App.", taxon AS "Taxon", term_name_en AS "Term", unit_name_en AS "Unit", country AS "Country", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024" FROM (      SELECT * FROM CROSSTAB('SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH exports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT  "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024) LIMIT 3 OFFSET 0) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id AS country_id,
             exporter AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id,
             exporter
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           ), imports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT  "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024) LIMIT 3 OFFSET 0) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id AS country_id,
             importer AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id,
             importer
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           )
           SELECT
             exports.year,
             exports.appendix,
             exports.taxon_concept_id,
             exports.taxon,
             exports.term_id,
             exports.term,
             exports.term_name_en,
             exports.term_name_es,
             exports.term_name_fr,
             exports.unit_id,
             exports.unit,
             exports.unit_name_en,
             exports.unit_name_es,
             exports.unit_name_fr,
             exports.country_id,
             exports.country,
             TRIM_DECIMAL_ZERO(
               CASE
                 WHEN (exports.gross_quantity - COALESCE(imports.gross_quantity, 0)) > 0
                 THEN exports.gross_quantity - COALESCE(imports.gross_quantity, 0)
                 ELSE NULL
               END
             ) AS gross_quantity
           FROM exports
           LEFT JOIN imports
           ON exports.taxon_concept_id = imports.taxon_concept_id
           AND exports.appendix = imports.appendix
           AND exports.year = imports.year
           AND exports.term_id = imports.term_id
           AND (exports.unit_id = imports.unit_id OR exports.unit_id IS NULL AND imports.unit_id IS NULL)
           AND exports.year = imports.year
           AND exports.country_id = imports.country_id
           WHERE (exports.gross_quantity - COALESCE(imports.gross_quantity, 0)) > 0
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 7', 'SELECT * FROM UNNEST(ARRAY[1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024])')
             AS ct(row_name TEXT[], appendix TEXT, taxon TEXT, term_name_en TEXT, unit_name_en TEXT, country TEXT, "1975" numeric, "1976" numeric, "1977" numeric, "1978" numeric, "1979" numeric, "1980" numeric, "1981" numeric, "1982" numeric, "1983" numeric, "1984" numeric, "1985" numeric, "1986" numeric, "1987" numeric, "1988" numeric, "1989" numeric, "1990" numeric, "1991" numeric, "1992" numeric, "1993" numeric, "1994" numeric, "1995" numeric, "1996" numeric, "1997" numeric, "1998" numeric, "1999" numeric, "2000" numeric, "2001" numeric, "2002" numeric, "2003" numeric, "2004" numeric, "2005" numeric, "2006" numeric, "2007" numeric, "2008" numeric, "2009" numeric, "2010" numeric, "2011" numeric, "2012" numeric, "2013" numeric, "2014" numeric, "2015" numeric, "2016" numeric, "2017" numeric, "2018" numeric, "2019" numeric, "2020" numeric, "2021" numeric, "2022" numeric, "2023" numeric, "2024" numeric)
       ) ct_subquery
     # ./app/models/trade/shipments_comptab_export.rb:9:in `query'
     # ./spec/models/trade/shipments_net_exports_export_spec.rb:27:in `block (4 levels) in <top (required)>'

  761) Trade::ShipmentsNetImportsExport total_cnt when internal
     Failure/Error: specify { subject.total_cnt.should == 4 }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function full_name_with_spp(character varying, character varying, character varying) does not exist
       LINE 9:       full_name_with_spp(ranks.name, taxon_concept_full_name...
                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       QUERY:  SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon_concept_id, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH exports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024)) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id AS country_id,
             exporter AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id,
             exporter
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           ), imports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024)) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id AS country_id,
             importer AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id,
             importer
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           )
           SELECT
             imports.year,
             imports.appendix,
             imports.taxon_concept_id,
             imports.taxon,
             imports.term_id,
             imports.term,
             imports.term_name_en,
             imports.term_name_es,
             imports.term_name_fr,
             imports.unit_id,
             imports.unit,
             imports.unit_name_en,
             imports.unit_name_es,
             imports.unit_name_fr,
             imports.country_id,
             imports.country,
             TRIM_DECIMAL_ZERO(
               CASE
                 WHEN (imports.gross_quantity - COALESCE(exports.gross_quantity, 0)) > 0
                 THEN imports.gross_quantity - COALESCE(exports.gross_quantity, 0)
                 ELSE NULL
               END
             ) AS gross_quantity
           FROM imports
           LEFT JOIN exports
           ON exports.taxon_concept_id = imports.taxon_concept_id
           AND exports.appendix = imports.appendix
           AND exports.year = imports.year
           AND exports.term_id = imports.term_id
           AND (exports.unit_id = imports.unit_id OR exports.unit_id IS NULL AND imports.unit_id IS NULL)
           AND exports.country_id = imports.country_id
           WHERE (imports.gross_quantity - COALESCE(exports.gross_quantity, 0)) > 0
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 8
       : SELECT appendix AS "App.", taxon AS "Taxon", taxon_concept_id AS "Taxon ID", term_name_en AS "Term", unit_name_en AS "Unit", country AS "Country", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024" FROM (      SELECT * FROM CROSSTAB('SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon_concept_id, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH exports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024)) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id AS country_id,
             exporter AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id,
             exporter
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           ), imports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024)) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id AS country_id,
             importer AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id,
             importer
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           )
           SELECT
             imports.year,
             imports.appendix,
             imports.taxon_concept_id,
             imports.taxon,
             imports.term_id,
             imports.term,
             imports.term_name_en,
             imports.term_name_es,
             imports.term_name_fr,
             imports.unit_id,
             imports.unit,
             imports.unit_name_en,
             imports.unit_name_es,
             imports.unit_name_fr,
             imports.country_id,
             imports.country,
             TRIM_DECIMAL_ZERO(
               CASE
                 WHEN (imports.gross_quantity - COALESCE(exports.gross_quantity, 0)) > 0
                 THEN imports.gross_quantity - COALESCE(exports.gross_quantity, 0)
                 ELSE NULL
               END
             ) AS gross_quantity
           FROM imports
           LEFT JOIN exports
           ON exports.taxon_concept_id = imports.taxon_concept_id
           AND exports.appendix = imports.appendix
           AND exports.year = imports.year
           AND exports.term_id = imports.term_id
           AND (exports.unit_id = imports.unit_id OR exports.unit_id IS NULL AND imports.unit_id IS NULL)
           AND exports.country_id = imports.country_id
           WHERE (imports.gross_quantity - COALESCE(exports.gross_quantity, 0)) > 0
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 8', 'SELECT * FROM UNNEST(ARRAY[1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024])')
             AS ct(row_name TEXT[], appendix TEXT, taxon_concept_id INT, taxon TEXT, term_name_en TEXT, unit_name_en TEXT, country TEXT, "1975" numeric, "1976" numeric, "1977" numeric, "1978" numeric, "1979" numeric, "1980" numeric, "1981" numeric, "1982" numeric, "1983" numeric, "1984" numeric, "1985" numeric, "1986" numeric, "1987" numeric, "1988" numeric, "1989" numeric, "1990" numeric, "1991" numeric, "1992" numeric, "1993" numeric, "1994" numeric, "1995" numeric, "1996" numeric, "1997" numeric, "1998" numeric, "1999" numeric, "2000" numeric, "2001" numeric, "2002" numeric, "2003" numeric, "2004" numeric, "2005" numeric, "2006" numeric, "2007" numeric, "2008" numeric, "2009" numeric, "2010" numeric, "2011" numeric, "2012" numeric, "2013" numeric, "2014" numeric, "2015" numeric, "2016" numeric, "2017" numeric, "2018" numeric, "2019" numeric, "2020" numeric, "2021" numeric, "2022" numeric, "2023" numeric, "2024" numeric)
       ) ct_subquery
     # ./app/models/trade/shipments_comptab_export.rb:5:in `total_cnt'
     # ./spec/models/trade/shipments_net_imports_export_spec.rb:12:in `block (4 levels) in <top (required)>'

  762) Trade::ShipmentsNetImportsExport total_cnt when public
     Failure/Error: specify { subject.total_cnt.should == 4 }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function full_name_with_spp(character varying, character varying, character varying) does not exist
       LINE 9:       full_name_with_spp(ranks.name, taxon_concept_full_name...
                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       QUERY:  SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH exports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024)) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id AS country_id,
             exporter AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id,
             exporter
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           ), imports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024)) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id AS country_id,
             importer AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id,
             importer
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           )
           SELECT
             imports.year,
             imports.appendix,
             imports.taxon_concept_id,
             imports.taxon,
             imports.term_id,
             imports.term,
             imports.term_name_en,
             imports.term_name_es,
             imports.term_name_fr,
             imports.unit_id,
             imports.unit,
             imports.unit_name_en,
             imports.unit_name_es,
             imports.unit_name_fr,
             imports.country_id,
             imports.country,
             TRIM_DECIMAL_ZERO(
               CASE
                 WHEN (imports.gross_quantity - COALESCE(exports.gross_quantity, 0)) > 0
                 THEN imports.gross_quantity - COALESCE(exports.gross_quantity, 0)
                 ELSE NULL
               END
             ) AS gross_quantity
           FROM imports
           LEFT JOIN exports
           ON exports.taxon_concept_id = imports.taxon_concept_id
           AND exports.appendix = imports.appendix
           AND exports.year = imports.year
           AND exports.term_id = imports.term_id
           AND (exports.unit_id = imports.unit_id OR exports.unit_id IS NULL AND imports.unit_id IS NULL)
           AND exports.country_id = imports.country_id
           WHERE (imports.gross_quantity - COALESCE(exports.gross_quantity, 0)) > 0
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 7
       : SELECT appendix AS "App.", taxon AS "Taxon", term_name_en AS "Term", unit_name_en AS "Unit", country AS "Country", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024" FROM (      SELECT * FROM CROSSTAB('SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH exports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024)) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id AS country_id,
             exporter AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id,
             exporter
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           ), imports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024)) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id AS country_id,
             importer AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id,
             importer
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           )
           SELECT
             imports.year,
             imports.appendix,
             imports.taxon_concept_id,
             imports.taxon,
             imports.term_id,
             imports.term,
             imports.term_name_en,
             imports.term_name_es,
             imports.term_name_fr,
             imports.unit_id,
             imports.unit,
             imports.unit_name_en,
             imports.unit_name_es,
             imports.unit_name_fr,
             imports.country_id,
             imports.country,
             TRIM_DECIMAL_ZERO(
               CASE
                 WHEN (imports.gross_quantity - COALESCE(exports.gross_quantity, 0)) > 0
                 THEN imports.gross_quantity - COALESCE(exports.gross_quantity, 0)
                 ELSE NULL
               END
             ) AS gross_quantity
           FROM imports
           LEFT JOIN exports
           ON exports.taxon_concept_id = imports.taxon_concept_id
           AND exports.appendix = imports.appendix
           AND exports.year = imports.year
           AND exports.term_id = imports.term_id
           AND (exports.unit_id = imports.unit_id OR exports.unit_id IS NULL AND imports.unit_id IS NULL)
           AND exports.country_id = imports.country_id
           WHERE (imports.gross_quantity - COALESCE(exports.gross_quantity, 0)) > 0
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 7', 'SELECT * FROM UNNEST(ARRAY[1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024])')
             AS ct(row_name TEXT[], appendix TEXT, taxon TEXT, term_name_en TEXT, unit_name_en TEXT, country TEXT, "1975" numeric, "1976" numeric, "1977" numeric, "1978" numeric, "1979" numeric, "1980" numeric, "1981" numeric, "1982" numeric, "1983" numeric, "1984" numeric, "1985" numeric, "1986" numeric, "1987" numeric, "1988" numeric, "1989" numeric, "1990" numeric, "1991" numeric, "1992" numeric, "1993" numeric, "1994" numeric, "1995" numeric, "1996" numeric, "1997" numeric, "1998" numeric, "1999" numeric, "2000" numeric, "2001" numeric, "2002" numeric, "2003" numeric, "2004" numeric, "2005" numeric, "2006" numeric, "2007" numeric, "2008" numeric, "2009" numeric, "2010" numeric, "2011" numeric, "2012" numeric, "2013" numeric, "2014" numeric, "2015" numeric, "2016" numeric, "2017" numeric, "2018" numeric, "2019" numeric, "2020" numeric, "2021" numeric, "2022" numeric, "2023" numeric, "2024" numeric)
       ) ct_subquery
     # ./app/models/trade/shipments_comptab_export.rb:5:in `total_cnt'
     # ./spec/models/trade/shipments_net_imports_export_spec.rb:16:in `block (4 levels) in <top (required)>'

  763) Trade::ShipmentsNetImportsExport query when internal
     Failure/Error: specify { subject.query.ntuples.should == 4 }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function full_name_with_spp(character varying, character varying, character varying) does not exist
       LINE 9:       full_name_with_spp(ranks.name, taxon_concept_full_name...
                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       QUERY:  SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon_concept_id, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH exports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT  "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024) LIMIT 4 OFFSET 0) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id AS country_id,
             exporter AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id,
             exporter
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           ), imports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT  "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024) LIMIT 4 OFFSET 0) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id AS country_id,
             importer AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id,
             importer
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           )
           SELECT
             imports.year,
             imports.appendix,
             imports.taxon_concept_id,
             imports.taxon,
             imports.term_id,
             imports.term,
             imports.term_name_en,
             imports.term_name_es,
             imports.term_name_fr,
             imports.unit_id,
             imports.unit,
             imports.unit_name_en,
             imports.unit_name_es,
             imports.unit_name_fr,
             imports.country_id,
             imports.country,
             TRIM_DECIMAL_ZERO(
               CASE
                 WHEN (imports.gross_quantity - COALESCE(exports.gross_quantity, 0)) > 0
                 THEN imports.gross_quantity - COALESCE(exports.gross_quantity, 0)
                 ELSE NULL
               END
             ) AS gross_quantity
           FROM imports
           LEFT JOIN exports
           ON exports.taxon_concept_id = imports.taxon_concept_id
           AND exports.appendix = imports.appendix
           AND exports.year = imports.year
           AND exports.term_id = imports.term_id
           AND (exports.unit_id = imports.unit_id OR exports.unit_id IS NULL AND imports.unit_id IS NULL)
           AND exports.country_id = imports.country_id
           WHERE (imports.gross_quantity - COALESCE(exports.gross_quantity, 0)) > 0
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 8
       : SELECT appendix AS "App.", taxon AS "Taxon", taxon_concept_id AS "Taxon ID", term_name_en AS "Term", unit_name_en AS "Unit", country AS "Country", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024" FROM (      SELECT * FROM CROSSTAB('SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon_concept_id, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH exports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT  "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024) LIMIT 4 OFFSET 0) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id AS country_id,
             exporter AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id,
             exporter
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           ), imports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT  "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024) LIMIT 4 OFFSET 0) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id AS country_id,
             importer AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id,
             importer
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           )
           SELECT
             imports.year,
             imports.appendix,
             imports.taxon_concept_id,
             imports.taxon,
             imports.term_id,
             imports.term,
             imports.term_name_en,
             imports.term_name_es,
             imports.term_name_fr,
             imports.unit_id,
             imports.unit,
             imports.unit_name_en,
             imports.unit_name_es,
             imports.unit_name_fr,
             imports.country_id,
             imports.country,
             TRIM_DECIMAL_ZERO(
               CASE
                 WHEN (imports.gross_quantity - COALESCE(exports.gross_quantity, 0)) > 0
                 THEN imports.gross_quantity - COALESCE(exports.gross_quantity, 0)
                 ELSE NULL
               END
             ) AS gross_quantity
           FROM imports
           LEFT JOIN exports
           ON exports.taxon_concept_id = imports.taxon_concept_id
           AND exports.appendix = imports.appendix
           AND exports.year = imports.year
           AND exports.term_id = imports.term_id
           AND (exports.unit_id = imports.unit_id OR exports.unit_id IS NULL AND imports.unit_id IS NULL)
           AND exports.country_id = imports.country_id
           WHERE (imports.gross_quantity - COALESCE(exports.gross_quantity, 0)) > 0
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 8', 'SELECT * FROM UNNEST(ARRAY[1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024])')
             AS ct(row_name TEXT[], appendix TEXT, taxon_concept_id INT, taxon TEXT, term_name_en TEXT, unit_name_en TEXT, country TEXT, "1975" numeric, "1976" numeric, "1977" numeric, "1978" numeric, "1979" numeric, "1980" numeric, "1981" numeric, "1982" numeric, "1983" numeric, "1984" numeric, "1985" numeric, "1986" numeric, "1987" numeric, "1988" numeric, "1989" numeric, "1990" numeric, "1991" numeric, "1992" numeric, "1993" numeric, "1994" numeric, "1995" numeric, "1996" numeric, "1997" numeric, "1998" numeric, "1999" numeric, "2000" numeric, "2001" numeric, "2002" numeric, "2003" numeric, "2004" numeric, "2005" numeric, "2006" numeric, "2007" numeric, "2008" numeric, "2009" numeric, "2010" numeric, "2011" numeric, "2012" numeric, "2013" numeric, "2014" numeric, "2015" numeric, "2016" numeric, "2017" numeric, "2018" numeric, "2019" numeric, "2020" numeric, "2021" numeric, "2022" numeric, "2023" numeric, "2024" numeric)
       ) ct_subquery
     # ./app/models/trade/shipments_comptab_export.rb:9:in `query'
     # ./spec/models/trade/shipments_net_imports_export_spec.rb:23:in `block (4 levels) in <top (required)>'

  764) Trade::ShipmentsNetImportsExport query when public
     Failure/Error: specify { subject.query.ntuples.should == 3 }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function full_name_with_spp(character varying, character varying, character varying) does not exist
       LINE 9:       full_name_with_spp(ranks.name, taxon_concept_full_name...
                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       QUERY:  SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH exports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT  "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024) LIMIT 3 OFFSET 0) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id AS country_id,
             exporter AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id,
             exporter
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           ), imports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT  "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024) LIMIT 3 OFFSET 0) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id AS country_id,
             importer AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id,
             importer
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           )
           SELECT
             imports.year,
             imports.appendix,
             imports.taxon_concept_id,
             imports.taxon,
             imports.term_id,
             imports.term,
             imports.term_name_en,
             imports.term_name_es,
             imports.term_name_fr,
             imports.unit_id,
             imports.unit,
             imports.unit_name_en,
             imports.unit_name_es,
             imports.unit_name_fr,
             imports.country_id,
             imports.country,
             TRIM_DECIMAL_ZERO(
               CASE
                 WHEN (imports.gross_quantity - COALESCE(exports.gross_quantity, 0)) > 0
                 THEN imports.gross_quantity - COALESCE(exports.gross_quantity, 0)
                 ELSE NULL
               END
             ) AS gross_quantity
           FROM imports
           LEFT JOIN exports
           ON exports.taxon_concept_id = imports.taxon_concept_id
           AND exports.appendix = imports.appendix
           AND exports.year = imports.year
           AND exports.term_id = imports.term_id
           AND (exports.unit_id = imports.unit_id OR exports.unit_id IS NULL AND imports.unit_id IS NULL)
           AND exports.country_id = imports.country_id
           WHERE (imports.gross_quantity - COALESCE(exports.gross_quantity, 0)) > 0
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 7
       : SELECT appendix AS "App.", taxon AS "Taxon", term_name_en AS "Term", unit_name_en AS "Unit", country AS "Country", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024" FROM (      SELECT * FROM CROSSTAB('SELECT ARRAY[appendix, taxon, term_name_en, unit_name_en, country],
             appendix, taxon, term_name_en, unit_name_en, country, year, gross_quantity
             FROM (WITH exports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT  "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024) LIMIT 3 OFFSET 0) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id AS country_id,
             exporter AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             exporter_id,
             exporter
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           ), imports AS (
             WITH gross_net_subquery AS (
             SELECT
             year,
             appendix,
             taxon_concept_id,
             full_name_with_spp(ranks.name, taxon_concept_full_name, taxon_concept_name_status) AS taxon,
             importer_id,
             importers.iso_code2 AS importer,
             exporter_id,
             exporters.iso_code2 AS exporter,
             TRIM_DECIMAL_ZERO(
               GREATEST(
                 SUM(CASE WHEN reported_by_exporter THEN NULL ELSE quantity END),
                 SUM(CASE WHEN reported_by_exporter THEN quantity ELSE NULL END)
               )
             ) AS gross_quantity,
             term_id,
             terms.code AS term,
             terms.name_en AS term_name_en,
             terms.name_es AS term_name_es,
             terms.name_fr AS term_name_fr,
             unit_id,
             units.code AS unit,
             units.name_en AS unit_name_en,
             units.name_es AS unit_name_es,
             units.name_fr AS unit_name_fr
           FROM (SELECT  "trade_shipments".* FROM trade_shipments_with_taxa_view trade_shipments  WHERE (year >= 1975 AND year <= 2024) LIMIT 3 OFFSET 0) shipments
           JOIN ranks
             ON ranks.id = taxon_concept_rank_id
           JOIN geo_entities importers
             ON importers.id = importer_id
           JOIN geo_entities exporters
             ON exporters.id = exporter_id
           LEFT JOIN geo_entities countries_of_origin
             ON countries_of_origin.id = country_of_origin_id
           LEFT JOIN trade_codes units
             ON units.id = unit_id
           JOIN trade_codes terms
             ON terms.id = term_id
           LEFT JOIN trade_codes purposes
             ON purposes.id = purpose_id
           LEFT JOIN trade_codes sources
             ON sources.id = source_id
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon_concept_full_name,
             taxon_concept_name_status,
             ranks.name,
             importer_id,
             importers.iso_code2,
             exporter_id,
             exporters.iso_code2,
             unit_id,
             units.code,
             units.name_en,
             units.name_es,
             units.name_fr,
             term_id,
             terms.code,
             terms.name_en,
             terms.name_es,
             terms.name_fr
           )
           SELECT
             year,
             appendix,
             taxon_concept_id,
             taxon,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id AS country_id,
             importer AS country,
             TRIM_DECIMAL_ZERO(
               SUM(gross_quantity)
             ) AS gross_quantity
           FROM gross_net_subquery
           GROUP BY
             year,
             appendix,
             taxon_concept_id,
             taxon,
             taxon_concept_name_status,
             term_id,
             term,
             term_name_en,
             term_name_es,
             term_name_fr,
             unit_id,
             unit,
             unit_name_en,
             unit_name_es,
             unit_name_fr,
             importer_id,
             importer
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country
           )
           SELECT
             imports.year,
             imports.appendix,
             imports.taxon_concept_id,
             imports.taxon,
             imports.term_id,
             imports.term,
             imports.term_name_en,
             imports.term_name_es,
             imports.term_name_fr,
             imports.unit_id,
             imports.unit,
             imports.unit_name_en,
             imports.unit_name_es,
             imports.unit_name_fr,
             imports.country_id,
             imports.country,
             TRIM_DECIMAL_ZERO(
               CASE
                 WHEN (imports.gross_quantity - COALESCE(exports.gross_quantity, 0)) > 0
                 THEN imports.gross_quantity - COALESCE(exports.gross_quantity, 0)
                 ELSE NULL
               END
             ) AS gross_quantity
           FROM imports
           LEFT JOIN exports
           ON exports.taxon_concept_id = imports.taxon_concept_id
           AND exports.appendix = imports.appendix
           AND exports.year = imports.year
           AND exports.term_id = imports.term_id
           AND (exports.unit_id = imports.unit_id OR exports.unit_id IS NULL AND imports.unit_id IS NULL)
           AND exports.country_id = imports.country_id
           WHERE (imports.gross_quantity - COALESCE(exports.gross_quantity, 0)) > 0
           ORDER BY
             appendix,
             taxon,
             term,
             unit,
             country) subquery
             ORDER BY 1, 7', 'SELECT * FROM UNNEST(ARRAY[1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024])')
             AS ct(row_name TEXT[], appendix TEXT, taxon TEXT, term_name_en TEXT, unit_name_en TEXT, country TEXT, "1975" numeric, "1976" numeric, "1977" numeric, "1978" numeric, "1979" numeric, "1980" numeric, "1981" numeric, "1982" numeric, "1983" numeric, "1984" numeric, "1985" numeric, "1986" numeric, "1987" numeric, "1988" numeric, "1989" numeric, "1990" numeric, "1991" numeric, "1992" numeric, "1993" numeric, "1994" numeric, "1995" numeric, "1996" numeric, "1997" numeric, "1998" numeric, "1999" numeric, "2000" numeric, "2001" numeric, "2002" numeric, "2003" numeric, "2004" numeric, "2005" numeric, "2006" numeric, "2007" numeric, "2008" numeric, "2009" numeric, "2010" numeric, "2011" numeric, "2012" numeric, "2013" numeric, "2014" numeric, "2015" numeric, "2016" numeric, "2017" numeric, "2018" numeric, "2019" numeric, "2020" numeric, "2021" numeric, "2022" numeric, "2023" numeric, "2024" numeric)
       ) ct_subquery
     # ./app/models/trade/shipments_comptab_export.rb:9:in `query'
     # ./spec/models/trade/shipments_net_imports_export_spec.rb:27:in `block (4 levels) in <top (required)>'

  765) Trade::TaxonConceptAppendixYearValidationRule validation_errors_for_aru when CITES listed when split listing
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  766) Trade::TaxonConceptAppendixYearValidationRule validation_errors_for_aru when CITES listed when old listing
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  767) Trade::TaxonConceptAppendixYearValidationRule validation_errors_for_aru when CITES listed when old listing
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  768) Trade::TaxonConceptAppendixYearValidationRule validation_errors_for_aru when CITES listed when appendix N and CITES listed
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  769) Trade::TaxonConceptAppendixYearValidationRule validation_errors_for_aru when CITES listed when appendix N and CITES listed
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  770) Trade::TaxonConceptAppendixYearValidationRule validation_errors_for_aru when CITES listed when reported under a synonym, but otherwise fine
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  771) Trade::TaxonConceptAppendixYearValidationRule validation_errors_for_aru when CITES listed when hybrid
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  772) Trade::TaxonConceptAppendixYearValidationRule validation_errors_for_aru when not CITES listed but EU listed
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function rebuild_taxonomy() does not exist
       LINE 1: SELECT * FROM rebuild_taxonomy()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM rebuild_taxonomy()
     # ./lib/modules/sapi/stored_procedures.rb:93:in `block in run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `each'
     # ./lib/modules/sapi/stored_procedures.rb:91:in `run_procedures'
     # ./lib/modules/sapi/stored_procedures.rb:59:in `rebuild_cites_taxonomy_and_listings'
     # ./spec/shared/cedrela_montana.rb:27:in `block (2 levels) in <top (required)>'

  773) Trade::TaxonConceptAppendixYearValidationRule validation_errors_for_aru when not CITES listed and not EU listed
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::RecordInvalid:
       Validation failed: Name has already been taken
     # ./spec/support/sapi_helpers.rb:4:in `cites_eu'
     # ./spec/support/sapi_helpers.rb:303:in `block (3 levels) in <top (required)>'
     # ./spec/support/sapi_helpers.rb:236:in `cites_eu_plantae'
     # ./spec/shared/agave.rb:14:in `block (2 levels) in <top (required)>'

  774) Trade::TaxonConceptSourceValidationRule validation_errors_for_aru when species name is from Kingdom Animalia, source_code can't be A
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  775) Trade::TaxonConceptSourceValidationRule validation_errors_for_aru when species name is from Kingdom Animalia, source_code can't be A
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  776) Trade::TaxonConceptSourceValidationRule validation_errors_for_aru when species name is from Kingdom Plantae, source_code can't be C or R
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  777) Trade::ValidationRule matching_records_for_aru_and_error
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  778) Trade::ValidationRule refresh_errors_if_needed when no updates
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  779) Trade::ValidationRule refresh_errors_if_needed when updates and error fixed for all records error record is destroyed
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  780) Trade::ValidationRule refresh_errors_if_needed when updates and error fixed for some records error record is updated to reflect new error_count
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  781) Trade::ValidationRule Trade::PresenceValidationRule validation_errors_for_aru trading_partner should not be blank
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  782) Trade::ValidationRule Trade::NumericalityValidationRule validation_errors_for_aru quantity should be a number
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  783) Trade::ValidationRule Trade::FormatValidationRule validation_errors_for_aru year should be a 4 digit value
     Failure/Error: Unable to find matching line from backtrace
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function drop_trade_sandboxes() does not exist
       LINE 1: SELECT * FROM drop_trade_sandboxes()
                             ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       : SELECT * FROM drop_trade_sandboxes()
     # ./spec/spec_helper.rb:69:in `block (2 levels) in <top (required)>'

  784) EuRegulationActivationWorker Set new EU regulation to true
     Failure/Error: EventListingChangesCopyWorker.drain
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_listing_changes_across_events(integer, integer) does not exist
       LINE 1:       SELECT * FROM copy_listing_changes_across_events(
                                   ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :       SELECT * FROM copy_listing_changes_across_events(
               2441,
               2442
             )
     # ./app/workers/event_listing_changes_copy_worker.rb:6:in `perform'
     # ./spec/workers/eu_regulation_activation_worker_spec.rb:28:in `block (3 levels) in <top (required)>'

  785) EuRegulationActivationWorker Set new EU regulation to true
     Failure/Error: EventListingChangesCopyWorker.drain
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_listing_changes_across_events(integer, integer) does not exist
       LINE 1:       SELECT * FROM copy_listing_changes_across_events(
                                   ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :       SELECT * FROM copy_listing_changes_across_events(
               2443,
               2444
             )
     # ./app/workers/event_listing_changes_copy_worker.rb:6:in `perform'
     # ./spec/workers/eu_regulation_activation_worker_spec.rb:28:in `block (3 levels) in <top (required)>'

  786) EuRegulationActivationWorker Set new EU regulation to true Set old EU regulation to false
     Failure/Error: EventListingChangesCopyWorker.drain
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_listing_changes_across_events(integer, integer) does not exist
       LINE 1:       SELECT * FROM copy_listing_changes_across_events(
                                   ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :       SELECT * FROM copy_listing_changes_across_events(
               2445,
               2446
             )
     # ./app/workers/event_listing_changes_copy_worker.rb:6:in `perform'
     # ./spec/workers/eu_regulation_activation_worker_spec.rb:28:in `block (3 levels) in <top (required)>'

  787) EuRegulationActivationWorker Set new EU regulation to true Set old EU regulation to false
     Failure/Error: EventListingChangesCopyWorker.drain
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_listing_changes_across_events(integer, integer) does not exist
       LINE 1:       SELECT * FROM copy_listing_changes_across_events(
                                   ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :       SELECT * FROM copy_listing_changes_across_events(
               2447,
               2448
             )
     # ./app/workers/event_listing_changes_copy_worker.rb:6:in `perform'
     # ./spec/workers/eu_regulation_activation_worker_spec.rb:28:in `block (3 levels) in <top (required)>'

  788) EventListingChangesCopyWorker when copy into non-current regulation
     Failure/Error: before { EventListingChangesCopyWorker.new.perform(prev_eu_regulation.id, eu_regulation.id) }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_listing_changes_across_events(integer, integer) does not exist
       LINE 1:       SELECT * FROM copy_listing_changes_across_events(
                                   ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :       SELECT * FROM copy_listing_changes_across_events(
               2449,
               2450
             )
     # ./app/workers/event_listing_changes_copy_worker.rb:6:in `perform'
     # ./spec/workers/event_listing_changes_copy_worker_spec.rb:41:in `block (3 levels) in <top (required)>'

  789) EventListingChangesCopyWorker when copy into non-current regulation
     Failure/Error: before { EventListingChangesCopyWorker.new.perform(prev_eu_regulation.id, eu_regulation.id) }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_listing_changes_across_events(integer, integer) does not exist
       LINE 1:       SELECT * FROM copy_listing_changes_across_events(
                                   ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :       SELECT * FROM copy_listing_changes_across_events(
               2451,
               2452
             )
     # ./app/workers/event_listing_changes_copy_worker.rb:6:in `perform'
     # ./spec/workers/event_listing_changes_copy_worker_spec.rb:41:in `block (3 levels) in <top (required)>'

  790) EventListingChangesCopyWorker when copy into current regulation
     Failure/Error: before { EventListingChangesCopyWorker.new.perform(prev_eu_regulation.id, eu_regulation.id) }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_listing_changes_across_events(integer, integer) does not exist
       LINE 1:       SELECT * FROM copy_listing_changes_across_events(
                                   ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :       SELECT * FROM copy_listing_changes_across_events(
               2453,
               2454
             )
     # ./app/workers/event_listing_changes_copy_worker.rb:6:in `perform'
     # ./spec/workers/event_listing_changes_copy_worker_spec.rb:47:in `block (3 levels) in <top (required)>'

  791) EventListingChangesCopyWorker when copy into current regulation
     Failure/Error: before { EventListingChangesCopyWorker.new.perform(prev_eu_regulation.id, eu_regulation.id) }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_listing_changes_across_events(integer, integer) does not exist
       LINE 1:       SELECT * FROM copy_listing_changes_across_events(
                                   ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :       SELECT * FROM copy_listing_changes_across_events(
               2455,
               2456
             )
     # ./app/workers/event_listing_changes_copy_worker.rb:6:in `perform'
     # ./spec/workers/event_listing_changes_copy_worker_spec.rb:47:in `block (3 levels) in <top (required)>'

  792) EventListingChangesCopyWorker when exclusion
     Failure/Error: before { EventListingChangesCopyWorker.new.perform(prev_eu_regulation.id, eu_regulation.id) }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_listing_changes_across_events(integer, integer) does not exist
       LINE 1:       SELECT * FROM copy_listing_changes_across_events(
                                   ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :       SELECT * FROM copy_listing_changes_across_events(
               2457,
               2458
             )
     # ./app/workers/event_listing_changes_copy_worker.rb:6:in `perform'
     # ./spec/workers/event_listing_changes_copy_worker_spec.rb:69:in `block (3 levels) in <top (required)>'

  793) EventListingChangesCopyWorker when exclusion
     Failure/Error: before { EventListingChangesCopyWorker.new.perform(prev_eu_regulation.id, eu_regulation.id) }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_listing_changes_across_events(integer, integer) does not exist
       LINE 1:       SELECT * FROM copy_listing_changes_across_events(
                                   ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :       SELECT * FROM copy_listing_changes_across_events(
               2459,
               2460
             )
     # ./app/workers/event_listing_changes_copy_worker.rb:6:in `perform'
     # ./spec/workers/event_listing_changes_copy_worker_spec.rb:69:in `block (3 levels) in <top (required)>'

  794) EventListingChangesCopyWorker when exclusion
     Failure/Error: before { EventListingChangesCopyWorker.new.perform(prev_eu_regulation.id, eu_regulation.id) }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_listing_changes_across_events(integer, integer) does not exist
       LINE 1:       SELECT * FROM copy_listing_changes_across_events(
                                   ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :       SELECT * FROM copy_listing_changes_across_events(
               2461,
               2462
             )
     # ./app/workers/event_listing_changes_copy_worker.rb:6:in `perform'
     # ./spec/workers/event_listing_changes_copy_worker_spec.rb:69:in `block (3 levels) in <top (required)>'

  795) EventListingChangesCopyWorker when exclusion
     Failure/Error: before { EventListingChangesCopyWorker.new.perform(prev_eu_regulation.id, eu_regulation.id) }
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_listing_changes_across_events(integer, integer) does not exist
       LINE 1:       SELECT * FROM copy_listing_changes_across_events(
                                   ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :       SELECT * FROM copy_listing_changes_across_events(
               2463,
               2464
             )
     # ./app/workers/event_listing_changes_copy_worker.rb:6:in `perform'
     # ./spec/workers/event_listing_changes_copy_worker_spec.rb:69:in `block (3 levels) in <top (required)>'

  796) QuotasCopyWorker Copy single quota, for a given year
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults)
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:45:in `block (3 levels) in <top (required)>'

  797) QuotasCopyWorker Copy single quota, for a given year
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults)
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:45:in `block (3 levels) in <top (required)>'

  798) QuotasCopyWorker Copy single quota, for a given year
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults)
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:45:in `block (3 levels) in <top (required)>'

  799) QuotasCopyWorker Copy single quota, for a given year
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults)
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:45:in `block (3 levels) in <top (required)>'

  800) QuotasCopyWorker Try to copy quota from wrong year
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2024,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:55:in `block (3 levels) in <top (required)>'

  801) QuotasCopyWorker Try to copy quota from wrong year
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2024,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:55:in `block (3 levels) in <top (required)>'

  802) QuotasCopyWorker Try to copy quota from wrong year
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2024,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:55:in `block (3 levels) in <top (required)>'

  803) QuotasCopyWorker Copy quota when there are no current quotas
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults)
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:68:in `block (3 levels) in <top (required)>'

  804) QuotasCopyWorker Copy quota when there are no current quotas
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults)
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:68:in `block (3 levels) in <top (required)>'

  805) QuotasCopyWorker Copy quota when there are no current quotas
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults)
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:68:in `block (3 levels) in <top (required)>'

  806) QuotasCopyWorker When multiple quotas copy quota for given country
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[3416]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:86:in `block (3 levels) in <top (required)>'

  807) QuotasCopyWorker When multiple quotas copy quota for given country
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[3418]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:86:in `block (3 levels) in <top (required)>'

  808) QuotasCopyWorker When multiple quotas copy quota for given country
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[3420]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:86:in `block (3 levels) in <top (required)>'

  809) QuotasCopyWorker When multiple quotas copy quota for given country
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[3422]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:86:in `block (3 levels) in <top (required)>'

  810) QuotasCopyWorker When multiple quotas copy quota for given country
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[3424]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:86:in `block (3 levels) in <top (required)>'

  811) QuotasCopyWorker When multiple quotas copy quota for both countries
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[3426,3427]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:108:in `block (3 levels) in <top (required)>'

  812) QuotasCopyWorker When multiple quotas copy quota for both countries
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[3428,3429]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:108:in `block (3 levels) in <top (required)>'

  813) QuotasCopyWorker When multiple quotas copy quota for both countries
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[3430,3431]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:108:in `block (3 levels) in <top (required)>'

  814) QuotasCopyWorker When multiple quotas copy quota for both countries
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[3432,3433]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:108:in `block (3 levels) in <top (required)>'

  815) QuotasCopyWorker When multiple quotas copy quota for both countries
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[3434,3435]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:108:in `block (3 levels) in <top (required)>'

  816) QuotasCopyWorker When multiple quotas don't copy quota for given country
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[3437]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:130:in `block (3 levels) in <top (required)>'

  817) QuotasCopyWorker When multiple quotas don't copy quota for given country
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[3439]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:130:in `block (3 levels) in <top (required)>'

  818) QuotasCopyWorker When multiple quotas don't copy quota for given country
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[3441]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:130:in `block (3 levels) in <top (required)>'

  819) QuotasCopyWorker When multiple quotas don't copy quota for given country
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[3443]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:130:in `block (3 levels) in <top (required)>'

  820) QuotasCopyWorker When multiple quotas don't copy quota for given country
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[3445]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:130:in `block (3 levels) in <top (required)>'

  821) QuotasCopyWorker When multiple quotas copy quota for given taxon_concept
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[34866]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:151:in `block (3 levels) in <top (required)>'

  822) QuotasCopyWorker When multiple quotas copy quota for given taxon_concept
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[34873]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:151:in `block (3 levels) in <top (required)>'

  823) QuotasCopyWorker When multiple quotas copy quota for given taxon_concept
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[34884]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:151:in `block (3 levels) in <top (required)>'

  824) QuotasCopyWorker When multiple quotas copy quota for given taxon_concept
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[34901]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:151:in `block (3 levels) in <top (required)>'

  825) QuotasCopyWorker When multiple quotas copy quota for given taxon_concept
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[34906]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:151:in `block (3 levels) in <top (required)>'

  826) QuotasCopyWorker When multiple quotas copy quota for both taxon_concepts
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[34916,34923]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:173:in `block (3 levels) in <top (required)>'

  827) QuotasCopyWorker When multiple quotas copy quota for both taxon_concepts
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[34929,34931]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:173:in `block (3 levels) in <top (required)>'

  828) QuotasCopyWorker When multiple quotas copy quota for both taxon_concepts
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[34933,34941]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:173:in `block (3 levels) in <top (required)>'

  829) QuotasCopyWorker When multiple quotas copy quota for both taxon_concepts
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[34950,34957]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:173:in `block (3 levels) in <top (required)>'

  830) QuotasCopyWorker When multiple quotas copy quota for both taxon_concepts
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[34962,34967]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:173:in `block (3 levels) in <top (required)>'

  831) QuotasCopyWorker When multiple quotas don't copy quota for given taxon_concept
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[34975]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:194:in `block (3 levels) in <top (required)>'

  832) QuotasCopyWorker When multiple quotas don't copy quota for given taxon_concept
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[34984]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:194:in `block (3 levels) in <top (required)>'

  833) QuotasCopyWorker When multiple quotas don't copy quota for given taxon_concept
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[34991]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:194:in `block (3 levels) in <top (required)>'

  834) QuotasCopyWorker When multiple quotas don't copy quota for given taxon_concept
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[35002]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:194:in `block (3 levels) in <top (required)>'

  835) QuotasCopyWorker When multiple quotas don't copy quota for given taxon_concept
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[35014]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:194:in `block (3 levels) in <top (required)>'

  836) QuotasCopyWorker When text to replace passed, should be replaced
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 'Caviar Quota Forever',
                 'Salmon is my favourite fish',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:216:in `block (3 levels) in <top (required)>'

  837) QuotasCopyWorker When text to replace passed, should be replaced
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 'Caviar Quota Forever',
                 'Salmon is my favourite fish',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:216:in `block (3 levels) in <top (required)>'

  838) QuotasCopyWorker When text to replace passed, should be replaced
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 'Caviar Quota Forever',
                 'Salmon is my favourite fish',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:216:in `block (3 levels) in <top (required)>'

  839) QuotasCopyWorker When text to replace passed, should be replaced
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 'Caviar Quota Forever',
                 'Salmon is my favourite fish',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:216:in `block (3 levels) in <top (required)>'

  840) QuotasCopyWorker When text to replace passed, should be replaced
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 'Caviar Quota Forever',
                 'Salmon is my favourite fish',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:216:in `block (3 levels) in <top (required)>'

  841) QuotasCopyWorker When text to replace passed, should be replaced
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 'Caviar Quota Forever',
                 'Salmon is my favourite fish',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:216:in `block (3 levels) in <top (required)>'

  842) QuotasCopyWorker When text to replace passed, should be replaced
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 'Caviar Quota Forever',
                 'Salmon is my favourite fish',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:216:in `block (3 levels) in <top (required)>'

  843) QuotasCopyWorker When text to replace passed, should be replaced
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 'Caviar Quota Forever',
                 'Salmon is my favourite fish',
                 NULL,
                 ''
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:216:in `block (3 levels) in <top (required)>'

  844) QuotasCopyWorker When url passed, should be replaced
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({ "url" => 'http://myurl.co.uk' }))
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 'http://myurl.co.uk'
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:243:in `block (3 levels) in <top (required)>'

  845) QuotasCopyWorker When url passed, should be replaced
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({ "url" => 'http://myurl.co.uk' }))
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 'http://myurl.co.uk'
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:243:in `block (3 levels) in <top (required)>'

  846) QuotasCopyWorker When url passed, should be replaced
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({ "url" => 'http://myurl.co.uk' }))
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 'http://myurl.co.uk'
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:243:in `block (3 levels) in <top (required)>'

  847) QuotasCopyWorker When url passed, should be replaced
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({ "url" => 'http://myurl.co.uk' }))
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 'http://myurl.co.uk'
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:243:in `block (3 levels) in <top (required)>'

  848) QuotasCopyWorker When url passed, should be replaced
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({ "url" => 'http://myurl.co.uk' }))
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 'http://myurl.co.uk'
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:243:in `block (3 levels) in <top (required)>'

  849) QuotasCopyWorker When url passed, should be replaced
     Failure/Error: QuotasCopyWorker.new.perform(job_defaults.merge({ "url" => 'http://myurl.co.uk' }))
     ActiveRecord::StatementInvalid:
       PG::UndefinedFunction: ERROR:  function copy_quotas_across_years(integer, unknown, unknown, unknown, integer[], integer[], integer[], integer[], unknown, unknown, unknown, unknown) does not exist
       LINE 1:         SELECT * FROM copy_quotas_across_years(
                                     ^
       HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
       :         SELECT * FROM copy_quotas_across_years(
                 2023,
                 '2024-01-04',
                 '2024-01-05',
                 '2024-01-04',
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 ARRAY[NULL]::integer[],
                 '',
                 '',
                 NULL,
                 'http://myurl.co.uk'
               )
     # ./app/workers/quotas_copy_worker.rb:22:in `perform'
     # ./spec/workers/quotas_copy_worker_spec.rb:243:in `block (3 levels) in <top (required)>'

Deprecation Warnings:

Requiring `rspec/autorun` when running RSpec via the `rspec` command is deprecated. Called from /usr/local/bundle/gems/activesupport-4.1.16/lib/active_support/dependencies.rb:247:in `require'.

Using `any_instance` from rspec-mocks' old `:should` syntax without explicitly enabling the syntax is deprecated. Use the new `:expect` syntax or explicitly enable `:should` instead. Called from /SAPI/spec/controllers/admin/exports_controller_spec.rb:20:in `block (4 levels) in <top (required)>'.

Using `should` from rspec-expectations' old `:should` syntax without explicitly enabling the syntax is deprecated. Use the new `:expect` syntax or explicitly enable `:should` instead. Called from /SAPI/spec/controllers/admin/change_types_controller_spec.rb:14:in `block (3 levels) in <top (required)>'.

`failure_message_for_should_not` is deprecated. Use `failure_message_when_negated` instead. Called from /usr/local/bundle/gems/cancan-1.6.10/lib/cancan/matchers.rb:11:in `block in <top (required)>'.

`failure_message_for_should` is deprecated. Use `failure_message` instead. Called from /usr/local/bundle/gems/cancan-1.6.10/lib/cancan/matchers.rb:7:in `block in <top (required)>'.


If you need more of the backtrace for any of these deprecations to
identify where to make the necessary changes, you can configure
`config.raise_errors_for_deprecations!`, and it will turn the
deprecation warnings into errors, giving you the full backtrace.

5 deprecation warnings total

Finished in 13 minutes 38 seconds (files took 23.1 seconds to load)
2138 examples, 849 failures, 20 pending

Failed examples:

rspec ./spec/controllers/admin/documents_controller_spec.rb:35 # Admin::DocumentsController index GET index search runs a full text search on title
rspec ./spec/controllers/admin/event_documents_controller_spec.rb:22 # Admin::EventDocumentsController ordering POST update_order updates sort index for collection of documents
rspec ./spec/controllers/admin/exports_controller_spec.rb:18 # Admin::ExportsController GET download with data_type=Names all returns taxon concepts names file
rspec ./spec/controllers/admin/exports_controller_spec.rb:31 # Admin::ExportsController GET download with data_type=Names CITES_EU returns CITES_EU taxon concepts names file
rspec ./spec/controllers/admin/exports_controller_spec.rb:44 # Admin::ExportsController GET download with data_type=Names CMS returns CMS taxon concepts names file
rspec ./spec/controllers/admin/exports_controller_spec.rb:62 # Admin::ExportsController GET download with data_type=Distributions all returns taxon concepts distributions file
rspec ./spec/controllers/admin/exports_controller_spec.rb:76 # Admin::ExportsController GET download with data_type=Distributions CITES_EU returns CITES_EU taxon concepts distributions file
rspec ./spec/controllers/admin/exports_controller_spec.rb:90 # Admin::ExportsController GET download with data_type=Distributions CMS returns CMS taxon concepts distributions file
rspec ./spec/controllers/api/auto_complete_taxon_concepts_controller_spec.rb:7 # Api::V1::AutoCompleteTaxonConceptsController GET index returns 1 result when searching for species name and filtering for rank SPECIES
rspec ./spec/controllers/api/auto_complete_taxon_concepts_controller_spec.rb:14 # Api::V1::AutoCompleteTaxonConceptsController GET index returns 3 results when searching for species name and not filtering by rank
rspec ./spec/controllers/api/document_geo_entities_controller_spec.rb:26 # Api::V1::DocumentGeoEntitiesController when searching by taxon concept name returns Poland when searching by wolf
rspec ./spec/controllers/api/document_geo_entities_controller_spec.rb:31 # Api::V1::DocumentGeoEntitiesController when searching by taxon concept name returns 0 geo entities when no match for taxon name
rspec ./spec/controllers/api/document_geo_entities_controller_spec.rb:36 # Api::V1::DocumentGeoEntitiesController when searching by taxon concept name returns all geo entities when no taxon name given
rspec ./spec/controllers/api/events_controller_spec.rb:10 # Api::V1::EventsController GET index returns only E-library events most recent first
rspec ./spec/controllers/api/purposes_controller_spec.rb:8 # Api::V1::PurposesController GET index returns purposes
rspec ./spec/controllers/api/sources_controller_spec.rb:8 # Api::V1::SourcesController GET index returns sources
rspec ./spec/controllers/api/taxon_concepts_controller_spec.rb:5 # Api::V1::TaxonConceptsController GET index  logs with Ahoy with different parameters
rspec ./spec/controllers/api/terms_controller_spec.rb:8 # Api::V1::TermsController GET index returns terms
rspec ./spec/controllers/api/units_controller_spec.rb:8 # Api::V1::UnitsController GET index returns units
rspec ./spec/controllers/checklist/taxon_concepts_controller_spec.rb:6 # Checklist::TaxonConceptsController XHR GET JSON autocomplete when searching by accepted name returns 1 result
rspec ./spec/controllers/checklist/taxon_concepts_controller_spec.rb:13 # Checklist::TaxonConceptsController XHR GET JSON autocomplete when query blank returns 0 results
rspec ./spec/controllers/cites_trade/exports_controller_spec.rb:14 # CitesTrade::ExportsController GET download comptab returns comptab shipments file
rspec ./spec/controllers/cites_trade/exports_controller_spec.rb:23 # CitesTrade::ExportsController GET download comptab logs download information from public interface to the TradeDataDownload model
rspec ./spec/controllers/cites_trade/shipments_controller_spec.rb:28 # CitesTrade::ShipmentsController GET index should return all comptab shipments
rspec ./spec/controllers/cites_trade/shipments_controller_spec.rb:32 # CitesTrade::ShipmentsController GET index should return all gross_exports shipments
rspec ./spec/controllers/cites_trade/shipments_controller_spec.rb:40 # CitesTrade::ShipmentsController GET index should return genus & species shipments when searching by genus
rspec ./spec/controllers/cites_trade/shipments_controller_spec.rb:47 # CitesTrade::ShipmentsController GET index should return family, genus & species shipments when searching by family
rspec ./spec/controllers/cites_trade/shipments_controller_spec.rb:54 # CitesTrade::ShipmentsController GET index should return genus shipments when searching by taxon
rspec ./spec/controllers/cites_trade/shipments_controller_spec.rb:9 # CitesTrade::ShipmentsController GET index serializer should return comptab export when report_type invalid
rspec ./spec/controllers/cites_trade/shipments_controller_spec.rb:15 # CitesTrade::ShipmentsController GET index serializer should return comptab export when report_type = comptab
rspec ./spec/controllers/cites_trade/shipments_controller_spec.rb:21 # CitesTrade::ShipmentsController GET index serializer should return gross net export when report_type = gross_exports
rspec ./spec/controllers/registrations_controller_spec.rb:49 # RegistrationsController when signing up should create an account with the role set to api
rspec ./spec/controllers/trade/annual_report_uploads_controller_spec.rb:35 # Trade::AnnualReportUploadsController GET index should return all annual report uploads
rspec ./spec/controllers/trade/annual_report_uploads_controller_spec.rb:39 # Trade::AnnualReportUploadsController GET index should return annual report uploads in progress
rspec ./spec/controllers/trade/annual_report_uploads_controller_spec.rb:46 # Trade::AnnualReportUploadsController GET show should return success
rspec ./spec/controllers/trade/annual_report_uploads_controller_spec.rb:53 # Trade::AnnualReportUploadsController POST create should return success in jQuery File Upload way
rspec ./spec/controllers/trade/sandbox_shipments_controller_spec.rb:35 # Trade::SandboxShipmentsController PUT update should return success when taxon_name not set
rspec ./spec/controllers/trade/sandbox_shipments_controller_spec.rb:42 # Trade::SandboxShipmentsController PUT update should return success when taxon_name does not exist
rspec ./spec/controllers/trade/sandbox_shipments_controller_spec.rb:52 # Trade::SandboxShipmentsController DELETE destroy should return success
rspec ./spec/controllers/trade/sandbox_shipments_controller_spec.rb:61 # Trade::SandboxShipmentsController POST update_batch should return success
rspec ./spec/controllers/trade/sandbox_shipments_controller_spec.rb:74 # Trade::SandboxShipmentsController POST destroy_batch should return success
rspec ./spec/controllers/trade/shipments_controller_spec.rb:10 # Trade::ShipmentsController GET index should return all shipments
rspec ./spec/controllers/trade/shipments_controller_spec.rb:14 # Trade::ShipmentsController GET index should return genus & species shipments when searching by genus
rspec ./spec/controllers/trade/shipments_controller_spec.rb:19 # Trade::ShipmentsController GET index should return 1 shipment when searching for reporter_type I
rspec ./spec/controllers/trade/shipments_controller_spec.rb:28 # Trade::ShipmentsController PUT update should auto resolve accepted taxon when blank
rspec ./spec/controllers/trade/shipments_controller_spec.rb:35 # Trade::ShipmentsController PUT update should not auto resolve accepted taxon when given
rspec ./spec/controllers/trade/shipments_controller_spec.rb:43 # Trade::ShipmentsController PUT update should delete orphaned permits
rspec ./spec/controllers/trade/shipments_controller_spec.rb:54 # Trade::ShipmentsController POST update_batch should change reporter type from I to E
rspec ./spec/controllers/trade/shipments_controller_spec.rb:71 # Trade::ShipmentsController POST update_batch should change reporter type from E to I
rspec ./spec/controllers/trade/shipments_controller_spec.rb:89 # Trade::ShipmentsController POST update_batch should update year
rspec ./spec/controllers/trade/shipments_controller_spec.rb:106 # Trade::ShipmentsController POST update_batch should auto resolve accepted taxon when blank
rspec ./spec/controllers/trade/shipments_controller_spec.rb:122 # Trade::ShipmentsController POST update_batch should not auto resolve accepted taxon when given
rspec ./spec/controllers/trade/shipments_controller_spec.rb:139 # Trade::ShipmentsController POST update_batch should set permit number to blank and delete orphaned permits
rspec ./spec/controllers/trade/shipments_controller_spec.rb:161 # Trade::ShipmentsController POST destroy_batch should delete 1 shipment
rspec ./spec/controllers/trade/shipments_controller_spec.rb:172 # Trade::ShipmentsController POST destroy_batch should delete 5 shipment
rspec ./spec/controllers/trade/shipments_controller_spec.rb:183 # Trade::ShipmentsController POST destroy_batch should delete 2 shipments
rspec ./spec/controllers/trade/shipments_controller_spec.rb:188 # Trade::ShipmentsController POST destroy_batch should delete 1 shipments
rspec ./spec/controllers/trade/shipments_controller_spec.rb:193 # Trade::ShipmentsController POST destroy_batch should delete all shipments
rspec ./spec/controllers/trade/shipments_controller_spec.rb:198 # Trade::ShipmentsController POST destroy_batch shouldn't delete any shipments
rspec ./spec/controllers/trade/shipments_controller_spec.rb:203 # Trade::ShipmentsController POST destroy_batch should delete 1 shipment
rspec ./spec/controllers/trade/shipments_controller_spec.rb:208 # Trade::ShipmentsController POST destroy_batch should delete 3 shipment
rspec ./spec/controllers/trade/shipments_controller_spec.rb:213 # Trade::ShipmentsController POST destroy_batch should delete 0 shipments
rspec ./spec/controllers/trade/shipments_controller_spec.rb:219 # Trade::ShipmentsController POST destroy_batch should delete 4 shipments
rspec ./spec/controllers/trade/shipments_controller_spec.rb:225 # Trade::ShipmentsController POST destroy_batch should delete orphaned permits
rspec ./spec/controllers/trade/shipments_controller_spec.rb:241 # Trade::ShipmentsController DELETE destroy should delete 1 shipment
rspec ./spec/controllers/trade/shipments_controller_spec.rb:245 # Trade::ShipmentsController DELETE destroy should delete orphaned permits
rspec ./spec/controllers/trade/validation_errors_controller_spec.rb:34 # Trade::ValidationErrorsController PUT update should update is_ignored
rspec ./spec/controllers/trade/validation_errors_controller_spec.rb:45 # Trade::ValidationErrorsController GET show should return success
rspec ./spec/models/api_request_spec.rb:63 # ApiRequest recent_requests
rspec ./spec/models/checklist/annotations_spec.rb:16 # Checklist ann_symbol for species Caiman latirostris
rspec ./spec/models/checklist/annotations_spec.rb:20 # Checklist ann_symbol for species Panax ginseng
rspec ./spec/models/checklist/appendix_population_and_region_spec.rb:14 # Checklist search by cites populations when America
rspec ./spec/models/checklist/appendix_population_and_region_spec.rb:25 # Checklist search by cites populations when Mexico
rspec ./spec/models/checklist/appendix_population_and_region_spec.rb:36 # Checklist search by cites populations when Canada
rspec ./spec/models/checklist/appendix_population_and_region_spec.rb:47 # Checklist search by cites populations when Argentina
rspec ./spec/models/checklist/appendix_population_and_region_spec.rb:58 # Checklist search by cites populations when South America
rspec ./spec/models/checklist/appendix_population_and_region_spec.rb:69 # Checklist search by cites populations when North America
rspec ./spec/models/checklist/appendix_population_and_region_spec.rb:81 # Checklist search by cites populations when North America and Argentina
rspec ./spec/models/checklist/appendix_population_spec.rb:15 # Checklist search by cites populations when Nepal
rspec ./spec/models/checklist/appendix_population_spec.rb:26 # Checklist search by cites populations when Poland
rspec ./spec/models/checklist/appendix_population_spec.rb:40 # Checklist search by cites appendices when App I
rspec ./spec/models/checklist/appendix_population_spec.rb:51 # Checklist search by cites appendices when App II
rspec ./spec/models/checklist/appendix_population_spec.rb:62 # Checklist search by cites appendices when App III
rspec ./spec/models/checklist/appendix_population_spec.rb:78 # Checklist search by cites populations and appendices when Nepal when App I
rspec ./spec/models/checklist/appendix_population_spec.rb:90 # Checklist search by cites populations and appendices when Nepal when App II
rspec ./spec/models/checklist/appendix_population_spec.rb:104 # Checklist search by cites populations and appendices when Poland when App I
rspec ./spec/models/checklist/appendix_population_spec.rb:116 # Checklist search by cites populations and appendices when Poland when App II
rspec ./spec/models/checklist/appendix_population_spec.rb:130 # Checklist search by cites populations and appendices when Poland or Nepal when App I
rspec ./spec/models/checklist/appendix_population_spec.rb:142 # Checklist search by cites populations and appendices when Poland or Nepal when App II
rspec ./spec/models/checklist/appendix_population_spec.rb:156 # Checklist search by cites populations and appendices when App I or II when Poland
rspec ./spec/models/checklist/appendix_population_spec.rb:168 # Checklist search by cites populations and appendices when App I or II when Nepal
rspec ./spec/models/checklist/appendix_spec.rb:14 # Checklist when filtering by appendix I should return Cacatua goffiniana
rspec ./spec/models/checklist/appendix_spec.rb:18 # Checklist when filtering by appendix I should not return Agapornis roseicollis
rspec ./spec/models/checklist/common_names_spec.rb:19 # Checklist when common names displayed should return all English names for Arctocephalus australis: 'South American Fur Seal, Southern Fur Seal'
rspec ./spec/models/checklist/common_names_spec.rb:23 # Checklist when common names displayed should return all Spanish names for Arctocephalus australis: 'Lobo fino sudamericano, Oso marino austral'
rspec ./spec/models/checklist/common_names_spec.rb:27 # Checklist when common names displayed should return all French names for Arctocephalus australis: 'Otarie à fourrure australe'
rspec ./spec/models/checklist/common_names_spec.rb:31 # Checklist when common names displayed should return all English names for Arctocephalus spp.: 'Fur seals, Southern fur seals'
rspec ./spec/models/checklist/common_names_spec.rb:35 # Checklist when common names displayed should return all Spanish names for Arctocephalus spp.: 'Osos marinos'
rspec ./spec/models/checklist/common_names_spec.rb:39 # Checklist when common names displayed should return all French names for Arctocephalus spp.: 'Arctocéphales du sud, Otaries à fourrure, Otaries à fourrure du sud'
rspec ./spec/models/checklist/common_names_spec.rb:43 # Checklist when common names displayed should include a species without any common names defined
rspec ./spec/models/checklist/higher_taxa_injector_spec.rb:122 # Checklist::HigherTaxaInjector run when same phylum when two species from different classes
rspec ./spec/models/checklist/higher_taxa_injector_spec.rb:139 # Checklist::HigherTaxaInjector run when same phylum when two species from different classes and expand_headers set
rspec ./spec/models/checklist/higher_taxa_injector_spec.rb:158 # Checklist::HigherTaxaInjector run when same order when two species from different families
rspec ./spec/models/checklist/higher_taxa_injector_spec.rb:171 # Checklist::HigherTaxaInjector run when same order when two species from different families and skip family set
rspec ./spec/models/checklist/higher_taxa_injector_spec.rb:188 # Checklist::HigherTaxaInjector higher_taxa_headers when same genus when one species
rspec ./spec/models/checklist/higher_taxa_injector_spec.rb:201 # Checklist::HigherTaxaInjector higher_taxa_headers when same genus when one species and skip family set
rspec ./spec/models/checklist/higher_taxa_injector_spec.rb:213 # Checklist::HigherTaxaInjector higher_taxa_headers when same genus when one species and expand headers set
rspec ./spec/models/checklist/higher_taxa_injector_spec.rb:228 # Checklist::HigherTaxaInjector higher_taxa_headers when same genus when two species
rspec ./spec/models/checklist/higher_taxa_injector_spec.rb:241 # Checklist::HigherTaxaInjector higher_taxa_headers when same genus when species and subspecies
rspec ./spec/models/checklist/higher_taxa_injector_spec.rb:256 # Checklist::HigherTaxaInjector higher_taxa_headers when same family when two species from different genera
rspec ./spec/models/checklist/higher_taxa_injector_spec.rb:271 # Checklist::HigherTaxaInjector higher_taxa_headers when same order when two species from different families
rspec ./spec/models/checklist/higher_taxa_injector_spec.rb:286 # Checklist::HigherTaxaInjector higher_taxa_headers when same order when two species from different families and expand headers set
rspec ./spec/models/checklist/higher_taxa_injector_spec.rb:301 # Checklist::HigherTaxaInjector higher_taxa_headers when same order when genus and different family
rspec ./spec/models/checklist/higher_taxa_injector_spec.rb:316 # Checklist::HigherTaxaInjector higher_taxa_headers when same order when family and genus in different family
rspec ./spec/models/checklist/higher_taxa_injector_spec.rb:333 # Checklist::HigherTaxaInjector higher_taxa_headers when same class when order and genus from different order
rspec ./spec/models/checklist/higher_taxa_injector_spec.rb:348 # Checklist::HigherTaxaInjector higher_taxa_headers when same class when order and genus from different order and expand headers set
rspec ./spec/models/checklist/order_spec.rb:17 # Checklist when taxonomic order Plantae should include Agave (Agavaceae) before Panax (Araliaceae)
rspec ./spec/models/checklist/order_spec.rb:28 # Checklist when taxonomic order Animalia should include birds after last mammal
rspec ./spec/models/checklist/order_spec.rb:32 # Checklist when taxonomic order Animalia should include Falconiformes (Aves) before Psittaciformes (Aves)
rspec ./spec/models/checklist/order_spec.rb:36 # Checklist when taxonomic order Animalia should include Cathartidae within Falconiformes
rspec ./spec/models/checklist/order_spec.rb:42 # Checklist when taxonomic order Animalia should include Cathartidae (Falconiformes) before Falconidae (Falconiformes)
rspec ./spec/models/checklist/order_spec.rb:46 # Checklist when taxonomic order Animalia should include Cathartidae (Falconiformes) before Cacatuidae (Psittaciformes)
rspec ./spec/models/checklist/order_spec.rb:50 # Checklist when taxonomic order Animalia should include Hirudo medicinalis at the very end (after all Chordata)
rspec ./spec/models/checklist/order_spec.rb:61 # Checklist when alphabetical order should include Falconiformes (Aves) before Psittaciformes (Aves)
rspec ./spec/models/checklist/order_spec.rb:65 # Checklist when alphabetical order should include Cathartidae before Falconiformes
rspec ./spec/models/checklist/order_spec.rb:69 # Checklist when alphabetical order should include Cathartidae (Falconiformes) before Falconidae (Falconiformes)
rspec ./spec/models/checklist/order_spec.rb:73 # Checklist when alphabetical order should include Cathartidae (Falconiformes) after Cacatuidae (Psittaciformes)
rspec ./spec/models/checklist/pdf/history_annotations_key_spec.rb:59 # Checklist::Pdf::HistoryAnnotationsKey hash_annotations_key
rspec ./spec/models/checklist/pdf/history_spec.rb:38 # Checklist::Pdf::History higher_taxon_name when family
rspec ./spec/models/checklist/pdf/history_spec.rb:56 # Checklist::Pdf::History listed_taxon_name when family
rspec ./spec/models/checklist/pdf/history_spec.rb:71 # Checklist::Pdf::History listed_taxon_name when genus
rspec ./spec/models/checklist/pdf/history_spec.rb:99 # Checklist::Pdf::History annotation_for_language annotation with footnote
rspec ./spec/models/checklist/pdf/index_annotations_key_spec.rb:46 # Checklist::Pdf::IndexAnnotationsKey hash_annotations_key
rspec ./spec/models/checklist/pdf/index_annotations_key_spec.rb:102 # Checklist::Pdf::IndexAnnotationsKey non_hash_annotations_key
rspec ./spec/models/checklist/pdf/index_fetcher_spec.rb:49 # Checklist::Pdf::IndexFetcher with common names
rspec ./spec/models/checklist/pdf/index_fetcher_spec.rb:77 # Checklist::Pdf::IndexFetcher with synonyms and authors
rspec ./spec/models/checklist/scientific_name_spec.rb:15 # Checklist when filtering by name by scientific name
rspec ./spec/models/checklist/scientific_name_spec.rb:28 # Checklist when filtering by name by common name
rspec ./spec/models/checklist/synonyms_spec.rb:15 # Checklist when synonyms displayed should return Alligator cynocephalus as synonym for Caiman latirostris
rspec ./spec/models/checklist/taxon_concept_prefix_matcher_spec.rb:13 # Species::TaxonConceptPrefixMatcher results when query in capital letters
rspec ./spec/models/checklist/taxon_concept_prefix_matcher_spec.rb:22 # Species::TaxonConceptPrefixMatcher results when match on accepted name
rspec ./spec/models/checklist/taxon_concept_prefix_matcher_spec.rb:31 # Species::TaxonConceptPrefixMatcher results when match on synonym
rspec ./spec/models/checklist/taxon_concept_prefix_matcher_spec.rb:40 # Species::TaxonConceptPrefixMatcher results when match on common name
rspec ./spec/models/checklist/timeline_spec.rb:23 # Checklist::Timeline when deleted
rspec ./spec/models/checklist/timeline_spec.rb:24 # Checklist::Timeline when deleted
rspec ./spec/models/checklist/timeline_spec.rb:25 # Checklist::Timeline when deleted
rspec ./spec/models/checklist/timeline_spec.rb:83 # Checklist::Timeline when deleted from III multiple times
rspec ./spec/models/checklist/timeline_spec.rb:84 # Checklist::Timeline when deleted from III multiple times
rspec ./spec/models/checklist/timeline_spec.rb:85 # Checklist::Timeline when deleted from III multiple times
rspec ./spec/models/checklist/timeline_spec.rb:112 # Checklist::Timeline when deleted and then readded
rspec ./spec/models/checklist/timeline_spec.rb:113 # Checklist::Timeline when deleted and then readded
rspec ./spec/models/checklist/timeline_spec.rb:114 # Checklist::Timeline when deleted and then readded
rspec ./spec/models/checklist/timeline_spec.rb:154 # Checklist::Timeline when reservation withdrawn
rspec ./spec/models/checklist/timeline_spec.rb:155 # Checklist::Timeline when reservation withdrawn
rspec ./spec/models/checklist/timeline_spec.rb:156 # Checklist::Timeline when reservation withdrawn
rspec ./spec/models/checklist/timeline_spec.rb:202 # Checklist::Timeline when reservation withdrawn and then readded
rspec ./spec/models/checklist/timeline_spec.rb:203 # Checklist::Timeline when reservation withdrawn and then readded
rspec ./spec/models/checklist/timeline_spec.rb:204 # Checklist::Timeline when reservation withdrawn and then readded
rspec ./spec/models/checklist/timeline_spec.rb:205 # Checklist::Timeline when reservation withdrawn and then readded
rspec ./spec/models/checklist/timeline_spec.rb:227 # Checklist::Timeline when added multiple times
rspec ./spec/models/checklist/timeline_spec.rb:231 # Checklist::Timeline when added multiple times
rspec ./spec/models/checklist/timeline_spec.rb:232 # Checklist::Timeline when added multiple times
rspec ./spec/models/checklist/timeline_spec.rb:256 # Checklist::Timeline when automatic deletion from ancestor listing
rspec ./spec/models/checklist/timeline_spec.rb:260 # Checklist::Timeline when automatic deletion from ancestor listing
rspec ./spec/models/checklist/timeline_spec.rb:261 # Checklist::Timeline when automatic deletion from ancestor listing
rspec ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:25 # Checklist::TimelinesForTaxonConcept timelines when Appendix I
rspec ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:26 # Checklist::TimelinesForTaxonConcept timelines when Appendix I
rspec ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:46 # Checklist::TimelinesForTaxonConcept timelines when Appendix III
rspec ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:47 # Checklist::TimelinesForTaxonConcept timelines when Appendix III
rspec ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:67 # Checklist::TimelinesForTaxonConcept timelines when Appendix III reservation
rspec ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:68 # Checklist::TimelinesForTaxonConcept timelines when Appendix III reservation
rspec ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:69 # Checklist::TimelinesForTaxonConcept timelines when Appendix III reservation
rspec ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:81 # Checklist::TimelinesForTaxonConcept timeline_years when in 1990
rspec ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:82 # Checklist::TimelinesForTaxonConcept timeline_years when in 1990
rspec ./spec/models/checklist/timelines_for_taxon_concept_spec.rb:83 # Checklist::TimelinesForTaxonConcept timeline_years when in 1990
rspec ./spec/models/cites_suspension_notification_spec.rb:85 # CitesSuspensionNotification destroy when dependent objects attached when confirmation notification, make sure it gets destroyed
rspec ./spec/models/dashboard_stats_species_spec.rb:35 # DashboardStats#species has one results for argentina
rspec ./spec/models/dashboard_stats_species_spec.rb:38 # DashboardStats#species has no results for ghana
rspec ./spec/models/dashboard_stats_trade_spec.rb:46 # DashboardStats#trade when no time range specified argentina should have 40 exported animals and no imports
rspec ./spec/models/dashboard_stats_trade_spec.rb:60 # DashboardStats#trade when time range specified argentina should have no exports in 2012-2012
rspec ./spec/models/eu_decision_spec.rb:68 # EuDecision create downloads cache should be populated
rspec ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:101 # NomenclatureChange::ReassignmentCopyProcessor run when legislation
rspec ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:102 # NomenclatureChange::ReassignmentCopyProcessor run when legislation
rspec ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:108 # NomenclatureChange::ReassignmentCopyProcessor run when legislation
rspec ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:115 # NomenclatureChange::ReassignmentCopyProcessor run when legislation
rspec ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:122 # NomenclatureChange::ReassignmentCopyProcessor run when legislation
rspec ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:129 # NomenclatureChange::ReassignmentCopyProcessor run when legislation
rspec ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:136 # NomenclatureChange::ReassignmentCopyProcessor run when legislation
rspec ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:142 # NomenclatureChange::ReassignmentCopyProcessor run when legislation
rspec ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:149 # NomenclatureChange::ReassignmentCopyProcessor run when legislation
rspec ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:150 # NomenclatureChange::ReassignmentCopyProcessor run when legislation
rspec ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:156 # NomenclatureChange::ReassignmentCopyProcessor run when legislation
rspec ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:163 # NomenclatureChange::ReassignmentCopyProcessor run when legislation
rspec ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:170 # NomenclatureChange::ReassignmentCopyProcessor run when legislation
rspec ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:177 # NomenclatureChange::ReassignmentCopyProcessor run when legislation
rspec ./spec/models/nomenclature_change/reassignment_copy_processor_spec.rb:26 # NomenclatureChange::ReassignmentCopyProcessor run when legislation
rspec ./spec/models/nomenclature_change/reassignment_copy_processor_spec.rb:27 # NomenclatureChange::ReassignmentCopyProcessor run when legislation
rspec ./spec/models/nomenclature_change/reassignment_copy_processor_spec.rb:28 # NomenclatureChange::ReassignmentCopyProcessor run when legislation
rspec ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:101 # NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
rspec ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:102 # NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
rspec ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:108 # NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
rspec ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:115 # NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
rspec ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:122 # NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
rspec ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:129 # NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
rspec ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:136 # NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
rspec ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:142 # NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
rspec ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:149 # NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
rspec ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:150 # NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
rspec ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:156 # NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
rspec ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:163 # NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
rspec ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:170 # NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
rspec ./spec/models/nomenclature_change/shared/legislation_reassignments_processor_examples.rb:177 # NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
rspec ./spec/models/nomenclature_change/reassignment_transfer_processor_spec.rb:26 # NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
rspec ./spec/models/nomenclature_change/reassignment_transfer_processor_spec.rb:27 # NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
rspec ./spec/models/nomenclature_change/reassignment_transfer_processor_spec.rb:28 # NomenclatureChange::ReassignmentTransferProcessor run input reassignments when legislation
rspec ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:70 # NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
rspec ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:71 # NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
rspec ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:77 # NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
rspec ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:84 # NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
rspec ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:91 # NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
rspec ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:98 # NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
rspec ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:104 # NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
rspec ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:111 # NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
rspec ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:112 # NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
rspec ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:118 # NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
rspec ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:125 # NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
rspec ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:132 # NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
rspec ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:139 # NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
rspec ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:140 # NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
rspec ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:141 # NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
rspec ./spec/models/nomenclature_change/shared/output_legislation_reassignments_processor_examples.rb:142 # NomenclatureChange::ReassignmentTransferProcessor run output reassignments when legislation
rspec ./spec/models/species/common_names_export_spec.rb:32 # Species::CommonNamesExport export when results when file not cached
rspec ./spec/models/species/hybrid_prefix_matcher_spec.rb:14 # Species::TaxonConceptPrefixMatcher results when searching for hybrid when trade visibility
rspec ./spec/models/species/hybrid_prefix_matcher_spec.rb:24 # Species::TaxonConceptPrefixMatcher results when searching for hybrid when trade internal visibility
rspec ./spec/models/species/hybrid_prefix_matcher_spec.rb:33 # Species::TaxonConceptPrefixMatcher results when searching for hybrid when speciesplus visibility
rspec ./spec/models/species/invisible_subspecies_search_spec.rb:8 # Species::Search results when searching by scientific name when subspecies never listed
rspec ./spec/models/species/invisible_subspecies_search_spec.rb:9 # Species::Search results when searching by scientific name when subspecies never listed
rspec ./spec/models/species/listings_export_spec.rb:10 # Species::ListingsExport path
rspec ./spec/models/species/listings_export_spec.rb:21 # Species::ListingsExport export when no results
rspec ./spec/models/species/listings_export_spec.rb:42 # Species::ListingsExport export when results when file not cached
rspec ./spec/models/species/listings_export_spec.rb:48 # Species::ListingsExport export when results when file cached
rspec ./spec/models/species/listings_export_spec.rb:65 # Species::ListingsExport query when CITES when Appendix I
rspec ./spec/models/species/listings_export_spec.rb:75 # Species::ListingsExport query when CITES when Appendix I when Poland
rspec ./spec/models/species/listings_export_spec.rb:86 # Species::ListingsExport query when CITES when Appendix I when Nepal
rspec ./spec/models/species/listings_export_spec.rb:96 # Species::ListingsExport query when CITES when higher taxon ids
rspec ./spec/models/species/listings_export_spec.rb:111 # Species::ListingsExport query when CITES when implicitly listed subspecies present
rspec ./spec/models/species/listings_export_spec.rb:122 # Species::ListingsExport query when EU when Annex A
rspec ./spec/models/species/listings_export_spec.rb:132 # Species::ListingsExport query when EU when Annex A when Spain
rspec ./spec/models/species/listings_export_spec.rb:143 # Species::ListingsExport query when EU when Annex A when Nepal
rspec ./spec/models/species/listings_export_spec.rb:153 # Species::ListingsExport query when EU when higher taxon ids
rspec ./spec/models/species/orphaned_taxon_concepts_export_spec.rb:33 # Species::OrphanedTaxonConceptsExport export when results when file not cached
rspec ./spec/models/species/search_spec.rb:8 # Species::Search results when searching by scientific name when regular query
rspec ./spec/models/species/search_spec.rb:12 # Species::Search results when searching by scientific name when malicious query
rspec ./spec/models/species/search_spec.rb:16 # Species::Search results when searching by scientific name when leading whitespace
rspec ./spec/models/species/search_spec.rb:20 # Species::Search results when searching by scientific name when trailing whitespace
rspec ./spec/models/species/species_reference_output_spec.rb:32 # Species::SpeciesReferenceOutputExport export when results when file not cached
rspec ./spec/models/species/standard_reference_output_spec.rb:32 # Species::StandardReferenceOutputExport export when results when file not cached
rspec ./spec/models/species/synonyms_and_trade_names_export_spec.rb:38 # Species::SynonymsAndTradeNamesExport export when results when file not cached
rspec ./spec/models/species/taxon_concept_prefix_matcher_spec.rb:14 # Species::TaxonConceptPrefixMatcher results when searching by common name when searching by hyphenated common name
rspec ./spec/models/species/taxon_concept_prefix_matcher_spec.rb:23 # Species::TaxonConceptPrefixMatcher results when searching by common name when searching by hyphenated common name without hyphens
rspec ./spec/models/species/taxon_concept_prefix_matcher_spec.rb:32 # Species::TaxonConceptPrefixMatcher results when searching by common name when searching by part of hyphenated common name
rspec ./spec/models/species/taxon_concept_prefix_matcher_spec.rb:43 # Species::TaxonConceptPrefixMatcher results when searching by scientific name when regular query
rspec ./spec/models/species/taxon_concept_prefix_matcher_spec.rb:52 # Species::TaxonConceptPrefixMatcher results when searching by scientific name when malicious query
rspec ./spec/models/species/taxon_concept_prefix_matcher_spec.rb:61 # Species::TaxonConceptPrefixMatcher results when searching by scientific name when leading whitespace
rspec ./spec/models/species/taxon_concept_prefix_matcher_spec.rb:70 # Species::TaxonConceptPrefixMatcher results when searching by scientific name when trailing whitespace
rspec ./spec/models/species/taxon_concept_prefix_matcher_spec.rb:79 # Species::TaxonConceptPrefixMatcher results when searching by scientific name when implicitly listed subspecies
rspec ./spec/models/species/taxon_concept_prefix_matcher_spec.rb:88 # Species::TaxonConceptPrefixMatcher results when searching by scientific name when explicitly listed subspecies
rspec ./spec/models/species/taxon_concept_prefix_matcher_spec.rb:97 # Species::TaxonConceptPrefixMatcher results when searching by scientific name when implicitly listed higher taxon (without an explicitly listed ancestor)
rspec ./spec/models/species/taxon_concept_prefix_matcher_spec.rb:106 # Species::TaxonConceptPrefixMatcher results when searching by scientific name when explicitly listed higher taxon
rspec ./spec/models/species/taxon_concept_prefix_matcher_spec.rb:117 # Species::TaxonConceptPrefixMatcher results when searching by scientific name when explicitly listed higher taxon but ranks expected FAMILY
rspec ./spec/models/species/taxon_concept_prefix_matcher_spec.rb:127 # Species::TaxonConceptPrefixMatcher results when searching by scientific name when explicitly listed higher taxon but ranks expected SPECIES
rspec ./spec/models/species/taxon_concept_prefix_matcher_spec.rb:137 # Species::TaxonConceptPrefixMatcher results when searching by scientific name when searching for name that matches Species and Subspecies but  ranks expected SUBSPECIES
rspec ./spec/models/species/taxon_concepts_export_spec.rb:32 # Species::TaxonConceptsNamesExport export when results when file not cached
rspec ./spec/models/species/trade_name_prefix_matcher_spec.rb:39 # Species::TaxonConceptPrefixMatcher results when searching for status N species when trade visibility
rspec ./spec/models/species/trade_name_prefix_matcher_spec.rb:49 # Species::TaxonConceptPrefixMatcher results when searching for status N species when trade internal visibility
rspec ./spec/models/species/trade_name_prefix_matcher_spec.rb:58 # Species::TaxonConceptPrefixMatcher results when searching for status N species when speciesplus visibility
rspec ./spec/models/species/trade_name_prefix_matcher_spec.rb:70 # Species::TaxonConceptPrefixMatcher results when searching for trade name when trade visibility
rspec ./spec/models/species/trade_name_prefix_matcher_spec.rb:71 # Species::TaxonConceptPrefixMatcher results when searching for trade name when trade visibility
rspec ./spec/models/species/trade_name_prefix_matcher_spec.rb:81 # Species::TaxonConceptPrefixMatcher results when searching for trade name when trade internal visibility
rspec ./spec/models/species/trade_name_prefix_matcher_spec.rb:82 # Species::TaxonConceptPrefixMatcher results when searching for trade name when trade internal visibility
rspec ./spec/models/species/trade_name_prefix_matcher_spec.rb:91 # Species::TaxonConceptPrefixMatcher results when searching for trade name when speciesplus visibility
rspec ./spec/models/species/trade_name_prefix_matcher_spec.rb:92 # Species::TaxonConceptPrefixMatcher results when searching for trade name when speciesplus visibility
rspec ./spec/models/species/visible_subspecies_search_spec.rb:8 # Species::Search results when searching by scientific name when subspecies previously listed
rspec ./spec/models/taxon_concept/agalychnis_spec.rb:10 # TaxonConcept Agalychnis REFERENCES cites_accepted for class Amphibia
rspec ./spec/models/taxon_concept/agalychnis_spec.rb:13 # TaxonConcept Agalychnis REFERENCES cites_accepted for family Hylidae
rspec ./spec/models/taxon_concept/agalychnis_spec.rb:16 # TaxonConcept Agalychnis REFERENCES cites_accepted for genus Agalychnis
rspec ./spec/models/taxon_concept/agalychnis_spec.rb:21 # TaxonConcept Agalychnis REFERENCES standard_taxon_concept_references for class Amphibia
rspec ./spec/models/taxon_concept/agalychnis_spec.rb:24 # TaxonConcept Agalychnis REFERENCES standard_taxon_concept_references for family Hylidae
rspec ./spec/models/taxon_concept/agalychnis_spec.rb:27 # TaxonConcept Agalychnis REFERENCES standard_taxon_concept_references for genus Agalychnis
rspec ./spec/models/taxon_concept/agalychnis_spec.rb:34 # TaxonConcept Agalychnis LISTING cites_listing for genus Agalychnis
rspec ./spec/models/taxon_concept/agalychnis_spec.rb:40 # TaxonConcept Agalychnis LISTING eu_listing for genus Agalychnis
rspec ./spec/models/taxon_concept/agalychnis_spec.rb:46 # TaxonConcept Agalychnis LISTING cites_listed for family Hylidae
rspec ./spec/models/taxon_concept/agalychnis_spec.rb:49 # TaxonConcept Agalychnis LISTING cites_listed for genus Agalychnis
rspec ./spec/models/taxon_concept/agalychnis_spec.rb:55 # TaxonConcept Agalychnis LISTING eu_listed for family Hylidae
rspec ./spec/models/taxon_concept/agalychnis_spec.rb:58 # TaxonConcept Agalychnis LISTING eu_listed for genus Agalychnis
rspec ./spec/models/taxon_concept/agave_spec.rb:10 # TaxonConcept Agave LISTING cites_listing for species Agave parviflora
rspec ./spec/models/taxon_concept/agave_spec.rb:13 # TaxonConcept Agave LISTING cites_listing for species Agave arizonica
rspec ./spec/models/taxon_concept/agave_spec.rb:19 # TaxonConcept Agave LISTING cites_listed for species Agave parviflora
rspec ./spec/models/taxon_concept/agave_spec.rb:22 # TaxonConcept Agave LISTING cites_listed for species Agave arizonica
rspec ./spec/models/taxon_concept/agave_spec.rb:28 # TaxonConcept Agave LISTING cites_show for species Agave parviflora
rspec ./spec/models/taxon_concept/agave_spec.rb:31 # TaxonConcept Agave LISTING cites_show for species Agave arizonica
rspec ./spec/models/taxon_concept/agave_spec.rb:37 # TaxonConcept Agave LISTING eu_listing for species Agave parviflora
rspec ./spec/models/taxon_concept/agave_spec.rb:40 # TaxonConcept Agave LISTING eu_listing for species Agave arizonica
rspec ./spec/models/taxon_concept/agave_spec.rb:46 # TaxonConcept Agave LISTING eu_listed for species Agave parviflora
rspec ./spec/models/taxon_concept/agave_spec.rb:49 # TaxonConcept Agave LISTING eu_listed for species Agave arizonica
rspec ./spec/models/taxon_concept/agave_spec.rb:55 # TaxonConcept Agave LISTING eu_show for species Agave parviflora
rspec ./spec/models/taxon_concept/agave_spec.rb:58 # TaxonConcept Agave LISTING eu_show for species Agave arizonica
rspec ./spec/models/taxon_concept/ailuropoda_spec.rb:10 # TaxonConcept Ailuropoda LISTING cites_listing for species Ailuropoda melanoleuca
rspec ./spec/models/taxon_concept/ailuropoda_spec.rb:13 # TaxonConcept Ailuropoda LISTING cites_listing for genus level Ailuropoda
rspec ./spec/models/taxon_concept/ailuropoda_spec.rb:19 # TaxonConcept Ailuropoda LISTING eu_listing for species Ailuropoda melanoleuca
rspec ./spec/models/taxon_concept/ailuropoda_spec.rb:22 # TaxonConcept Ailuropoda LISTING eu_listing for genus level Ailuropoda
rspec ./spec/models/taxon_concept/ailuropoda_spec.rb:28 # TaxonConcept Ailuropoda LISTING cites_listed for genus Ailuropoda
rspec ./spec/models/taxon_concept/ailuropoda_spec.rb:31 # TaxonConcept Ailuropoda LISTING cites_listed for species Ailuropoda melanoleuca
rspec ./spec/models/taxon_concept/ailuropoda_spec.rb:37 # TaxonConcept Ailuropoda LISTING eu_listed for genus Ailuropoda
rspec ./spec/models/taxon_concept/ailuropoda_spec.rb:40 # TaxonConcept Ailuropoda LISTING eu_listed for species Ailuropoda melanoleuca
rspec ./spec/models/taxon_concept/arctocephalus_spec.rb:9 # TaxonConcept Arctocephalus LISTING cites_listing should be II at species level Arctocephalus australis
rspec ./spec/models/taxon_concept/arctocephalus_spec.rb:12 # TaxonConcept Arctocephalus LISTING cites_listing should be I at species level Arctocephalus townsendi
rspec ./spec/models/taxon_concept/arctocephalus_spec.rb:15 # TaxonConcept Arctocephalus LISTING cites_listing should be I/II at genus level Arctocephalus
rspec ./spec/models/taxon_concept/arctocephalus_spec.rb:21 # TaxonConcept Arctocephalus LISTING cites_listed should be true for genus Arctocephalus
rspec ./spec/models/taxon_concept/arctocephalus_spec.rb:24 # TaxonConcept Arctocephalus LISTING cites_listed should be true for species Arctocephalus townsendi
rspec ./spec/models/taxon_concept/arctocephalus_spec.rb:27 # TaxonConcept Arctocephalus LISTING cites_listed should be false for species Arctocephalus australis (inclusion in higher taxa listing)
rspec ./spec/models/taxon_concept/arctocephalus_spec.rb:33 # TaxonConcept Arctocephalus LISTING eu_listed should be true for genus Arctocephalus
rspec ./spec/models/taxon_concept/arctocephalus_spec.rb:36 # TaxonConcept Arctocephalus LISTING eu_listed should be true for species Arctocephalus townsendi
rspec ./spec/models/taxon_concept/arctocephalus_spec.rb:39 # TaxonConcept Arctocephalus LISTING eu_listed should be false for species Arctocephalus australis (inclusion in higher taxa listing)
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:9 # TaxonConcept Boa constrictor TAXONOMY full_name for subspecies Boa constrictor occidentalis
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:12 # TaxonConcept Boa constrictor TAXONOMY full_name for species Boa constrictor
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:15 # TaxonConcept Boa constrictor TAXONOMY full_name for genus Boa
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:21 # TaxonConcept Boa constrictor TAXONOMY ancestors family
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:24 # TaxonConcept Boa constrictor TAXONOMY ancestors order
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:27 # TaxonConcept Boa constrictor TAXONOMY ancestors class
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:35 # TaxonConcept Boa constrictor LISTING cites_listing for subspecies Boa constrictor occidentalis
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:38 # TaxonConcept Boa constrictor LISTING cites_listing for subspecies Boa constrictor constrictor
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:41 # TaxonConcept Boa constrictor LISTING cites_listing for species Boa constrictor
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:47 # TaxonConcept Boa constrictor LISTING eu_listing for subspecies Boa constrictor occidentalis
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:50 # TaxonConcept Boa constrictor LISTING eu_listing for subspecies Boa constrictor constrictor
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:53 # TaxonConcept Boa constrictor LISTING eu_listing for species Boa constrictor
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:59 # TaxonConcept Boa constrictor LISTING cites_listed for family Boidae
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:62 # TaxonConcept Boa constrictor LISTING cites_listed for genus Boa
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:65 # TaxonConcept Boa constrictor LISTING cites_listed for species Boa constrictor (inclusion in higher taxa listing)
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:68 # TaxonConcept Boa constrictor LISTING cites_listed for subspecies Boa constrictor occidentalis
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:71 # TaxonConcept Boa constrictor LISTING cites_listed for subspecies Boa constrictor constrictor
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:77 # TaxonConcept Boa constrictor LISTING cites_show for family Boidae
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:80 # TaxonConcept Boa constrictor LISTING cites_show for genus Boa
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:83 # TaxonConcept Boa constrictor LISTING cites_show for species Boa constrictor (inclusion in higher taxa listing)
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:86 # TaxonConcept Boa constrictor LISTING cites_show for subspecies Boa constrictor occidentalis
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:89 # TaxonConcept Boa constrictor LISTING cites_show for subspecies Boa constrictor constrictor
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:95 # TaxonConcept Boa constrictor LISTING cites_listed_descendants for family Boidae
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:98 # TaxonConcept Boa constrictor LISTING cites_listed_descendants for genus Boa
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:101 # TaxonConcept Boa constrictor LISTING cites_listed_descendants for species Boa constrictor (inclusion in higher taxa listing)
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:104 # TaxonConcept Boa constrictor LISTING cites_listed_descendants for subspecies Boa constrictor occidentalis
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:110 # TaxonConcept Boa constrictor LISTING eu_listed for family Boidae
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:113 # TaxonConcept Boa constrictor LISTING eu_listed for genus Boa
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:116 # TaxonConcept Boa constrictor LISTING eu_listed for species Boa constrictor (inclusion in higher taxa listing)
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:119 # TaxonConcept Boa constrictor LISTING eu_listed for subspecies Boa constrictor occidentalis
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:125 # TaxonConcept Boa constrictor LISTING show_in_species_plus_ac for family Boidae
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:128 # TaxonConcept Boa constrictor LISTING show_in_species_plus_ac for genus Boa
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:131 # TaxonConcept Boa constrictor LISTING show_in_species_plus_ac for species Boa constrictor (inclusion in higher taxa listing)
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:134 # TaxonConcept Boa constrictor LISTING show_in_species_plus_ac for subspecies Boa constrictor occidentalis
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:137 # TaxonConcept Boa constrictor LISTING show_in_species_plus_ac for subspecies Boa constrictor constrictor
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:143 # TaxonConcept Boa constrictor LISTING show_in_checklist_ac for family Boidae
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:146 # TaxonConcept Boa constrictor LISTING show_in_checklist_ac for genus Boa
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:149 # TaxonConcept Boa constrictor LISTING show_in_checklist_ac for species Boa constrictor (inclusion in higher taxa listing)
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:152 # TaxonConcept Boa constrictor LISTING show_in_checklist_ac for subspecies Boa constrictor occidentalis
rspec ./spec/models/taxon_concept/boa_constrictor_spec.rb:155 # TaxonConcept Boa constrictor LISTING show_in_checklist_ac for subspecies Boa constrictor constrictor
rspec ./spec/models/taxon_concept/caiman_latirostris_spec.rb:10 # TaxonConcept Caiman latirostris TAXONOMY full_name for species synonym Alligator cynocephalus
rspec ./spec/models/taxon_concept/caiman_latirostris_spec.rb:15 # TaxonConcept Caiman latirostris TAXONOMY rank_name for species synonym Alligator cynocephalus
rspec ./spec/models/taxon_concept/caiman_latirostris_spec.rb:23 # TaxonConcept Caiman latirostris REFERENCES cites_accepted for species Caiman latirostris
rspec ./spec/models/taxon_concept/caiman_latirostris_spec.rb:26 # TaxonConcept Caiman latirostris REFERENCES cites_accepted for synonym species Alligator cynocephalus
rspec ./spec/models/taxon_concept/caiman_latirostris_spec.rb:31 # TaxonConcept Caiman latirostris REFERENCES standard_taxon_concept_references for species Caiman latirostris
rspec ./spec/models/taxon_concept/caiman_latirostris_spec.rb:38 # TaxonConcept Caiman latirostris LISTING cites_listing for species Caiman latirostris
rspec ./spec/models/taxon_concept/caiman_latirostris_spec.rb:44 # TaxonConcept Caiman latirostris LISTING eu_listing for species Caiman latirostris
rspec ./spec/models/taxon_concept/caiman_latirostris_spec.rb:50 # TaxonConcept Caiman latirostris LISTING cites_listed for order Crocodylia
rspec ./spec/models/taxon_concept/caiman_latirostris_spec.rb:53 # TaxonConcept Caiman latirostris LISTING cites_listed for family Alligatoridae
rspec ./spec/models/taxon_concept/caiman_latirostris_spec.rb:56 # TaxonConcept Caiman latirostris LISTING cites_listed for genus Caiman
rspec ./spec/models/taxon_concept/caiman_latirostris_spec.rb:59 # TaxonConcept Caiman latirostris LISTING cites_listed for species Caiman latoristris
rspec ./spec/models/taxon_concept/caiman_latirostris_spec.rb:65 # TaxonConcept Caiman latirostris LISTING eu_listed for order Crocodylia
rspec ./spec/models/taxon_concept/caiman_latirostris_spec.rb:68 # TaxonConcept Caiman latirostris LISTING eu_listed for family Alligatoridae
rspec ./spec/models/taxon_concept/caiman_latirostris_spec.rb:71 # TaxonConcept Caiman latirostris LISTING eu_listed for genus Caiman
rspec ./spec/models/taxon_concept/caiman_latirostris_spec.rb:74 # TaxonConcept Caiman latirostris LISTING eu_listed for species Caiman latoristris
rspec ./spec/models/taxon_concept/caiman_latirostris_spec.rb:80 # TaxonConcept Caiman latirostris LISTING cites_show for order Crocodylia
rspec ./spec/models/taxon_concept/caiman_latirostris_spec.rb:83 # TaxonConcept Caiman latirostris LISTING cites_show for family Alligatoridae
rspec ./spec/models/taxon_concept/caiman_latirostris_spec.rb:86 # TaxonConcept Caiman latirostris LISTING cites_show for genus Caiman
rspec ./spec/models/taxon_concept/caiman_latirostris_spec.rb:89 # TaxonConcept Caiman latirostris LISTING cites_show for species Caiman latoristris
rspec ./spec/models/taxon_concept/caiman_latirostris_spec.rb:92 # TaxonConcept Caiman latirostris LISTING cites_show for synonym species Alligator cynocephalus
rspec ./spec/models/taxon_concept/caiman_latirostris_spec.rb:98 # TaxonConcept Caiman latirostris LISTING ann_symbol for species Caiman latirostris
rspec ./spec/models/taxon_concept/caiman_latirostris_spec.rb:104 # TaxonConcept Caiman latirostris LISTING hash_ann_symbol for species Caiman latirostris
rspec ./spec/models/taxon_concept/canis_lupus_spec.rb:9 # TaxonConcept Canis lupus LISTING cites_listing for species Canis lupus (population split listing)
rspec ./spec/models/taxon_concept/canis_lupus_spec.rb:15 # TaxonConcept Canis lupus LISTING eu_listing for species Canis lupus (population split listing)
rspec ./spec/models/taxon_concept/canis_lupus_spec.rb:21 # TaxonConcept Canis lupus LISTING cites_listed for species Canis lupus
rspec ./spec/models/taxon_concept/canis_lupus_spec.rb:24 # TaxonConcept Canis lupus LISTING cites_listed for subspecies Canis lupus crassodon
rspec ./spec/models/taxon_concept/canis_lupus_spec.rb:30 # TaxonConcept Canis lupus LISTING eu_listed for species Canis lupus
rspec ./spec/models/taxon_concept/canis_lupus_spec.rb:36 # TaxonConcept Canis lupus LISTING show_in_species_plus_ac for species Canis lupus
rspec ./spec/models/taxon_concept/canis_lupus_spec.rb:39 # TaxonConcept Canis lupus LISTING show_in_species_plus_ac for subspecies Canis lupus crassodon
rspec ./spec/models/taxon_concept/canis_lupus_spec.rb:45 # TaxonConcept Canis lupus LISTING show_in_checklist_ac for species Canis lupus
rspec ./spec/models/taxon_concept/canis_lupus_spec.rb:48 # TaxonConcept Canis lupus LISTING show_in_checklist_ac for subspecies Canis lupus crassodon
rspec ./spec/models/taxon_concept/canis_lupus_spec.rb:54 # TaxonConcept Canis lupus LISTING show_in_species_plus for species Canis lupus
rspec ./spec/models/taxon_concept/canis_lupus_spec.rb:57 # TaxonConcept Canis lupus LISTING show_in_species_plus for subspecies Canis lupus crassodon
rspec ./spec/models/taxon_concept/caretta_caretta_cms_spec.rb:10 # TaxonConcept Caretta caretta CMS LISTING cms_listing for family Cheloniidae
rspec ./spec/models/taxon_concept/caretta_caretta_cms_spec.rb:13 # TaxonConcept Caretta caretta CMS LISTING cms_listing for species Caretta caretta
rspec ./spec/models/taxon_concept/caretta_caretta_cms_spec.rb:19 # TaxonConcept Caretta caretta CMS LISTING cms_listed for family Cheloniidae
rspec ./spec/models/taxon_concept/caretta_caretta_cms_spec.rb:22 # TaxonConcept Caretta caretta CMS LISTING cms_listed for species Caretta caretta
rspec ./spec/models/taxon_concept/caretta_caretta_cms_spec.rb:30 # TaxonConcept Caretta caretta CMS CASCADING LISTING current_cms_additions for family Cheloniidae
rspec ./spec/models/taxon_concept/caretta_caretta_cms_spec.rb:35 # TaxonConcept Caretta caretta CMS CASCADING LISTING current_cms_additions for species Caretta caretta
rspec ./spec/models/taxon_concept/cedrela_montana_spec.rb:10 # TaxonConcept Cedrela montana LISTING cites_listing for species Cedrela montana
rspec ./spec/models/taxon_concept/cedrela_montana_spec.rb:16 # TaxonConcept Cedrela montana LISTING cites_listed for species Cedrela montana
rspec ./spec/models/taxon_concept/cedrela_montana_spec.rb:22 # TaxonConcept Cedrela montana LISTING cites_show for species Cedrela montana
rspec ./spec/models/taxon_concept/cedrela_montana_spec.rb:28 # TaxonConcept Cedrela montana LISTING eu_listing for species Cedrela montana
rspec ./spec/models/taxon_concept/cedrela_montana_spec.rb:34 # TaxonConcept Cedrela montana LISTING eu_listed for species Cedrela montana
rspec ./spec/models/taxon_concept/cedrela_montana_spec.rb:40 # TaxonConcept Cedrela montana LISTING eu_show for species Cedrela montana
rspec ./spec/models/taxon_concept/cervus_elaphus_cms_spec.rb:10 # TaxonConcept Cervus elphus CMS LISTING cms_listing for species Cervus elaphus
rspec ./spec/models/taxon_concept/cervus_elaphus_cms_spec.rb:13 # TaxonConcept Cervus elphus CMS LISTING cms_listing for subspecies Cervus elaphus bactrianus
rspec ./spec/models/taxon_concept/cervus_elaphus_cms_spec.rb:16 # TaxonConcept Cervus elphus CMS LISTING cms_listing for subspecies Cervus elaphus barbarus
rspec ./spec/models/taxon_concept/cervus_elaphus_cms_spec.rb:22 # TaxonConcept Cervus elphus CMS LISTING show_in_species_plus_ac for subspecies Cervus elaphus bactrianus (instrument)
rspec ./spec/models/taxon_concept/cervus_elaphus_cms_spec.rb:25 # TaxonConcept Cervus elphus CMS LISTING show_in_species_plus_ac for subspecies Cervus elaphus barbarus (listing)
rspec ./spec/models/taxon_concept/cervus_elaphus_cms_spec.rb:31 # TaxonConcept Cervus elphus CMS LISTING show_in_species_plus for subspecies Cervus elaphus bactrianus (instrument)
rspec ./spec/models/taxon_concept/cervus_elaphus_cms_spec.rb:34 # TaxonConcept Cervus elphus CMS LISTING show_in_species_plus for subspecies Cervus elaphus barbarus (listing)
rspec ./spec/models/taxon_concept/cervus_elaphus_spec.rb:10 # TaxonConcept Cervus elaphus TAXONOMY full_name for subspecies Cervus elaphus bactrianus
rspec ./spec/models/taxon_concept/cervus_elaphus_spec.rb:13 # TaxonConcept Cervus elaphus TAXONOMY full_name for species Cervus elaphus
rspec ./spec/models/taxon_concept/cervus_elaphus_spec.rb:16 # TaxonConcept Cervus elaphus TAXONOMY full_name for genus Cervus
rspec ./spec/models/taxon_concept/cervus_elaphus_spec.rb:24 # TaxonConcept Cervus elaphus LISTING cites_listing for species Cervus elaphus
rspec ./spec/models/taxon_concept/cervus_elaphus_spec.rb:27 # TaxonConcept Cervus elaphus LISTING cites_listing for subspecies Cervus elaphus bactrianus
rspec ./spec/models/taxon_concept/cervus_elaphus_spec.rb:30 # TaxonConcept Cervus elaphus LISTING cites_listing for subspecies Cervus elaphus barbarus
rspec ./spec/models/taxon_concept/cervus_elaphus_spec.rb:33 # TaxonConcept Cervus elaphus LISTING cites_listing for subspecies Cervus elaphus hanglu
rspec ./spec/models/taxon_concept/cervus_elaphus_spec.rb:36 # TaxonConcept Cervus elaphus LISTING cites_listing for subspecies Cervus elaphus canadensis
rspec ./spec/models/taxon_concept/cervus_elaphus_spec.rb:42 # TaxonConcept Cervus elaphus LISTING eu_listing for species Cervus elaphus
rspec ./spec/models/taxon_concept/cervus_elaphus_spec.rb:45 # TaxonConcept Cervus elaphus LISTING eu_listing for subspecies Cervus elaphus bactrianus
rspec ./spec/models/taxon_concept/cervus_elaphus_spec.rb:48 # TaxonConcept Cervus elaphus LISTING eu_listing for subspecies Cervus elaphus barbarus
rspec ./spec/models/taxon_concept/cervus_elaphus_spec.rb:51 # TaxonConcept Cervus elaphus LISTING eu_listing for subspecies Cervus elaphus hanglu
rspec ./spec/models/taxon_concept/cervus_elaphus_spec.rb:54 # TaxonConcept Cervus elaphus LISTING eu_listing for subspecies Cervus elaphus canadensis
rspec ./spec/models/taxon_concept/cervus_elaphus_spec.rb:60 # TaxonConcept Cervus elaphus LISTING cites_listed for order Artiodactyla
rspec ./spec/models/taxon_concept/cervus_elaphus_spec.rb:63 # TaxonConcept Cervus elaphus LISTING cites_listed for family Cervidae
rspec ./spec/models/taxon_concept/cervus_elaphus_spec.rb:66 # TaxonConcept Cervus elaphus LISTING cites_listed for genus Cervus
rspec ./spec/models/taxon_concept/cervus_elaphus_spec.rb:69 # TaxonConcept Cervus elaphus LISTING cites_listed for species Cervus elaphus
rspec ./spec/models/taxon_concept/cervus_elaphus_spec.rb:72 # TaxonConcept Cervus elaphus LISTING cites_listed for subspecies Cervus elaphus bactrianus
rspec ./spec/models/taxon_concept/cervus_elaphus_spec.rb:75 # TaxonConcept Cervus elaphus LISTING cites_listed for subspecies Cervus elaphus barbarus
rspec ./spec/models/taxon_concept/cervus_elaphus_spec.rb:78 # TaxonConcept Cervus elaphus LISTING cites_listed for subspecies Cervus elaphus hanglu
rspec ./spec/models/taxon_concept/cervus_elaphus_spec.rb:81 # TaxonConcept Cervus elaphus LISTING cites_listed for subspecies Cervus elaphus canadensis
rspec ./spec/models/taxon_concept/cervus_elaphus_spec.rb:87 # TaxonConcept Cervus elaphus LISTING eu_listed for order Artiodactyla
rspec ./spec/models/taxon_concept/cervus_elaphus_spec.rb:90 # TaxonConcept Cervus elaphus LISTING eu_listed for family Cervidae
rspec ./spec/models/taxon_concept/cervus_elaphus_spec.rb:93 # TaxonConcept Cervus elaphus LISTING eu_listed for genus Cervus
rspec ./spec/models/taxon_concept/cervus_elaphus_spec.rb:96 # TaxonConcept Cervus elaphus LISTING eu_listed for species Cervus elaphus
rspec ./spec/models/taxon_concept/cervus_elaphus_spec.rb:99 # TaxonConcept Cervus elaphus LISTING eu_listed for subspecies Cervus elaphus bactrianus
rspec ./spec/models/taxon_concept/cervus_elaphus_spec.rb:102 # TaxonConcept Cervus elaphus LISTING eu_listed for subspecies Cervus elaphus barbarus
rspec ./spec/models/taxon_concept/cervus_elaphus_spec.rb:105 # TaxonConcept Cervus elaphus LISTING eu_listed for subspecies Cervus elaphus hanglu
rspec ./spec/models/taxon_concept/cervus_elaphus_spec.rb:108 # TaxonConcept Cervus elaphus LISTING eu_listed for subspecies Cervus elaphus canadensis
rspec ./spec/models/taxon_concept/cervus_elaphus_spec.rb:114 # TaxonConcept Cervus elaphus LISTING cites_show for subspecies Cervus elaphus hanglu
rspec ./spec/models/taxon_concept/cervus_elaphus_spec.rb:117 # TaxonConcept Cervus elaphus LISTING cites_show for subspecies Cervus elaphus canadensis
rspec ./spec/models/taxon_concept/colophon_spec.rb:10 # TaxonConcept Colophon LISTING cites_listing for genus Colophon
rspec ./spec/models/taxon_concept/colophon_spec.rb:13 # TaxonConcept Colophon LISTING cites_listing for species Colophon barnardi
rspec ./spec/models/taxon_concept/colophon_spec.rb:19 # TaxonConcept Colophon LISTING eu_listing for genus Colophon
rspec ./spec/models/taxon_concept/colophon_spec.rb:22 # TaxonConcept Colophon LISTING eu_listing for species Colophon barnardi
rspec ./spec/models/taxon_concept/colophon_spec.rb:28 # TaxonConcept Colophon LISTING cites_listed for genus Colophon
rspec ./spec/models/taxon_concept/colophon_spec.rb:31 # TaxonConcept Colophon LISTING cites_listed for species Colophon barnardi
rspec ./spec/models/taxon_concept/colophon_spec.rb:37 # TaxonConcept Colophon LISTING eu_listed for genus Colophon
rspec ./spec/models/taxon_concept/colophon_spec.rb:40 # TaxonConcept Colophon LISTING eu_listed for species Colophon barnardi
rspec ./spec/models/taxon_concept/colophon_spec.rb:46 # TaxonConcept Colophon LISTING cites_show for order Coleoptera
rspec ./spec/models/taxon_concept/colophon_spec.rb:49 # TaxonConcept Colophon LISTING cites_show for family Lucanidae
rspec ./spec/models/taxon_concept/colophon_spec.rb:55 # TaxonConcept Colophon LISTING current_party_ids for genus Colophon
rspec ./spec/models/taxon_concept/colophon_spec.rb:58 # TaxonConcept Colophon LISTING current_party_ids for species Colophon barnardi
rspec ./spec/models/taxon_concept/dalbergia_spec.rb:10 # TaxonConcept Dalbergia LISTING cites_listing for species Dalbergia abbreviata
rspec ./spec/models/taxon_concept/dalbergia_spec.rb:13 # TaxonConcept Dalbergia LISTING cites_listing for species Dalbergia abrahamii
rspec ./spec/models/taxon_concept/dalbergia_spec.rb:19 # TaxonConcept Dalbergia LISTING cites_listed for species Dalbergia abbreviata
rspec ./spec/models/taxon_concept/dalbergia_spec.rb:22 # TaxonConcept Dalbergia LISTING cites_listed for species Dalbergia abrahamii
rspec ./spec/models/taxon_concept/dalbergia_spec.rb:28 # TaxonConcept Dalbergia LISTING cites_show for species Dalbergia abbreviata
rspec ./spec/models/taxon_concept/dalbergia_spec.rb:31 # TaxonConcept Dalbergia LISTING cites_show for species Dalbergia abrahamii
rspec ./spec/models/taxon_concept/diospyros_spec.rb:10 # TaxonConcept Diospyros LISTING cites_listing for species Diospyros aculeata
rspec ./spec/models/taxon_concept/diospyros_spec.rb:13 # TaxonConcept Diospyros LISTING cites_listing for species Diospyros acuta
rspec ./spec/models/taxon_concept/diospyros_spec.rb:19 # TaxonConcept Diospyros LISTING cites_listed for species Diospyros aculeata
rspec ./spec/models/taxon_concept/diospyros_spec.rb:22 # TaxonConcept Diospyros LISTING cites_listed for species Diospyros acuta
rspec ./spec/models/taxon_concept/diospyros_spec.rb:28 # TaxonConcept Diospyros LISTING cites_show for species Diospyros aculeata
rspec ./spec/models/taxon_concept/diospyros_spec.rb:31 # TaxonConcept Diospyros LISTING cites_show for species Diospyros acuta
rspec ./spec/models/taxon_concept/diospyros_spec.rb:37 # TaxonConcept Diospyros LISTING eu_listing for species Diospyros aculeata
rspec ./spec/models/taxon_concept/diospyros_spec.rb:40 # TaxonConcept Diospyros LISTING eu_listing for species Diospyros acuta
rspec ./spec/models/taxon_concept/diospyros_spec.rb:46 # TaxonConcept Diospyros LISTING eu_listed for species Diospyros aculeata
rspec ./spec/models/taxon_concept/diospyros_spec.rb:49 # TaxonConcept Diospyros LISTING eu_listed for species Diospyros acuta
rspec ./spec/models/taxon_concept/diospyros_spec.rb:55 # TaxonConcept Diospyros LISTING eu_show for species Diospyros aculeata
rspec ./spec/models/taxon_concept/diospyros_spec.rb:58 # TaxonConcept Diospyros LISTING eu_show for species Diospyros acuta
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:10 # TaxonConcept Falconiformes TAXONOMY rank_name for Falco hybrid
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:18 # TaxonConcept Falconiformes LISTING cites_listing for order Falconiformes
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:21 # TaxonConcept Falconiformes LISTING cites_listing for species Falco araea
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:24 # TaxonConcept Falconiformes LISTING cites_listing for species Falco alopex (H)
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:27 # TaxonConcept Falconiformes LISTING cites_listing for species Gymnogyps californianus
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:30 # TaxonConcept Falconiformes LISTING cites_listing for species Sarcoramphus papa
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:33 # TaxonConcept Falconiformes LISTING cites_listing for species Vultur atratus
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:39 # TaxonConcept Falconiformes LISTING eu_listing for order Falconiformes
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:42 # TaxonConcept Falconiformes LISTING eu_listing for species Falco araea
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:45 # TaxonConcept Falconiformes LISTING eu_listing for species Falco alopex (H)
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:48 # TaxonConcept Falconiformes LISTING eu_listing for species Gymnogyps californianus
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:51 # TaxonConcept Falconiformes LISTING eu_listing for species Sarcoramphus papa
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:54 # TaxonConcept Falconiformes LISTING eu_listing for species Vultur atratus
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:60 # TaxonConcept Falconiformes LISTING cites_status for genus Vultur
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:63 # TaxonConcept Falconiformes LISTING cites_status for species Vultur atratus
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:69 # TaxonConcept Falconiformes LISTING cites_listed for order Falconiformes
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:72 # TaxonConcept Falconiformes LISTING cites_listed for family Falconidae (inclusion in higher taxa listing)
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:75 # TaxonConcept Falconiformes LISTING cites_listed for genus Falco
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:78 # TaxonConcept Falconiformes LISTING cites_listed for species Falco araea
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:81 # TaxonConcept Falconiformes LISTING cites_listed for species Falco alopex
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:84 # TaxonConcept Falconiformes LISTING cites_listed for species Vultur atratus
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:87 # TaxonConcept Falconiformes LISTING cites_listed for subspecies Falco peregrinus peregrinus
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:93 # TaxonConcept Falconiformes LISTING eu_listed for order Falconiformes
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:96 # TaxonConcept Falconiformes LISTING eu_listed for family Falconidae (inclusion in higher taxa listing)
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:99 # TaxonConcept Falconiformes LISTING eu_listed for genus Falco
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:102 # TaxonConcept Falconiformes LISTING eu_listed for species Falco araea
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:105 # TaxonConcept Falconiformes LISTING eu_listed for species Falco alopex
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:108 # TaxonConcept Falconiformes LISTING eu_listed for species Vultur atratus
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:111 # TaxonConcept Falconiformes LISTING eu_listed for subspecies Falco peregrinus peregrinus
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:117 # TaxonConcept Falconiformes LISTING cites_show for order Falconiformes
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:120 # TaxonConcept Falconiformes LISTING cites_show for family Falconidae
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:123 # TaxonConcept Falconiformes LISTING cites_show for Falco hybrid
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:129 # TaxonConcept Falconiformes LISTING show_in_checklist_ac for subspecies Falco peregrinus peregrinus
rspec ./spec/models/taxon_concept/falconiformes_spec.rb:135 # TaxonConcept Falconiformes LISTING show_in_species_plus_ac for subspecies Falco peregrinus peregrinus
rspec ./spec/models/taxon_concept/loxodonta_africana_cms_spec.rb:9 # TaxonConcept Loxodonta africana CMS TAXONOMY full_name for species Loxodonta africana
rspec ./spec/models/taxon_concept/loxodonta_africana_cms_spec.rb:12 # TaxonConcept Loxodonta africana CMS TAXONOMY full_name for genus Loxodonta
rspec ./spec/models/taxon_concept/loxodonta_africana_cms_spec.rb:17 # TaxonConcept Loxodonta africana CMS TAXONOMY rank for species Loxodonta africana
rspec ./spec/models/taxon_concept/loxodonta_africana_cms_spec.rb:22 # TaxonConcept Loxodonta africana CMS TAXONOMY ancestors family
rspec ./spec/models/taxon_concept/loxodonta_africana_cms_spec.rb:25 # TaxonConcept Loxodonta africana CMS TAXONOMY ancestors order
rspec ./spec/models/taxon_concept/loxodonta_africana_cms_spec.rb:28 # TaxonConcept Loxodonta africana CMS TAXONOMY ancestors class
rspec ./spec/models/taxon_concept/loxodonta_africana_cms_spec.rb:36 # TaxonConcept Loxodonta africana CMS LISTING cms_listing for species Loxodonta africana
rspec ./spec/models/taxon_concept/loxodonta_africana_cms_spec.rb:42 # TaxonConcept Loxodonta africana CMS LISTING cms_listed for species Loxodonta africana
rspec ./spec/models/taxon_concept/loxodonta_africana_spec.rb:9 # TaxonConcept Loxodonta africana TAXONOMY full_name for species Loxodonta africana
rspec ./spec/models/taxon_concept/loxodonta_africana_spec.rb:12 # TaxonConcept Loxodonta africana TAXONOMY full_name for genus Loxodonta
rspec ./spec/models/taxon_concept/loxodonta_africana_spec.rb:17 # TaxonConcept Loxodonta africana TAXONOMY rank for species Loxodonta africana
rspec ./spec/models/taxon_concept/loxodonta_africana_spec.rb:22 # TaxonConcept Loxodonta africana TAXONOMY ancestors family
rspec ./spec/models/taxon_concept/loxodonta_africana_spec.rb:25 # TaxonConcept Loxodonta africana TAXONOMY ancestors order
rspec ./spec/models/taxon_concept/loxodonta_africana_spec.rb:28 # TaxonConcept Loxodonta africana TAXONOMY ancestors class
rspec ./spec/models/taxon_concept/loxodonta_africana_spec.rb:36 # TaxonConcept Loxodonta africana LISTING cites_listing for species Loxodonta africana (population split listing)
rspec ./spec/models/taxon_concept/loxodonta_africana_spec.rb:42 # TaxonConcept Loxodonta africana LISTING eu_listing for species Loxodonta africana (population split listing)
rspec ./spec/models/taxon_concept/loxodonta_africana_spec.rb:48 # TaxonConcept Loxodonta africana LISTING cites_listed for species Loxodonta africana
rspec ./spec/models/taxon_concept/loxodonta_africana_spec.rb:51 # TaxonConcept Loxodonta africana LISTING cites_listed for family Elephantidae
rspec ./spec/models/taxon_concept/loxodonta_africana_spec.rb:57 # TaxonConcept Loxodonta africana LISTING eu_listed for species Loxodonta africana
rspec ./spec/models/taxon_concept/loxodonta_africana_spec.rb:60 # TaxonConcept Loxodonta africana LISTING eu_listed for family Elephantidae
rspec ./spec/models/taxon_concept/mellivora_capensis_spec.rb:9 # TaxonConcept Mellivora capensis LISTING cites_listing for species Mellivora capensis
rspec ./spec/models/taxon_concept/mellivora_capensis_spec.rb:15 # TaxonConcept Mellivora capensis LISTING eu_listing for species Mellivora capensis
rspec ./spec/models/taxon_concept/mellivora_capensis_spec.rb:21 # TaxonConcept Mellivora capensis LISTING cites_listed for family Mustelinae
rspec ./spec/models/taxon_concept/mellivora_capensis_spec.rb:24 # TaxonConcept Mellivora capensis LISTING cites_listed for genus Mellivora
rspec ./spec/models/taxon_concept/mellivora_capensis_spec.rb:27 # TaxonConcept Mellivora capensis LISTING cites_listed for species Mellivora capensis
rspec ./spec/models/taxon_concept/mellivora_capensis_spec.rb:33 # TaxonConcept Mellivora capensis LISTING eu_listed for family Mustelinae
rspec ./spec/models/taxon_concept/mellivora_capensis_spec.rb:36 # TaxonConcept Mellivora capensis LISTING eu_listed for genus Mellivora
rspec ./spec/models/taxon_concept/mellivora_capensis_spec.rb:39 # TaxonConcept Mellivora capensis LISTING eu_listed for species Mellivora capensis
rspec ./spec/models/taxon_concept/mellivora_capensis_spec.rb:45 # TaxonConcept Mellivora capensis LISTING current_party_ids for species Mellivora capensis
rspec ./spec/models/taxon_concept/moschus_spec.rb:10 # TaxonConcept Moschus LISTING cites_listing for genus Moschus
rspec ./spec/models/taxon_concept/moschus_spec.rb:13 # TaxonConcept Moschus LISTING cites_listing for species Moschus leucogaster
rspec ./spec/models/taxon_concept/moschus_spec.rb:16 # TaxonConcept Moschus LISTING cites_listing for species Moschus moschiferus
rspec ./spec/models/taxon_concept/moschus_spec.rb:19 # TaxonConcept Moschus LISTING cites_listing for subspecies Moschus moschiferus moschiferus
rspec ./spec/models/taxon_concept/moschus_spec.rb:25 # TaxonConcept Moschus LISTING cites_listed for genus Moschus
rspec ./spec/models/taxon_concept/moschus_spec.rb:28 # TaxonConcept Moschus LISTING cites_listed for species Moschus leucogaster
rspec ./spec/models/taxon_concept/moschus_spec.rb:31 # TaxonConcept Moschus LISTING cites_listed for species Moschus moschiferus
rspec ./spec/models/taxon_concept/moschus_spec.rb:34 # TaxonConcept Moschus LISTING cites_listed for subspecies Moschus moschiferus moschiferus
rspec ./spec/models/taxon_concept/moschus_spec.rb:42 # TaxonConcept Moschus CASCADING LISTING current_cites_additions for species Moschus leucogaster
rspec ./spec/models/taxon_concept/moschus_spec.rb:51 # TaxonConcept Moschus CASCADING LISTING current_cites_additions for species Moschus moschiferus
rspec ./spec/models/taxon_concept/moschus_spec.rb:60 # TaxonConcept Moschus CASCADING LISTING current_cites_additions for subspecies Moschus moschiferus moschiferus
rspec ./spec/models/taxon_concept/natator_depressus_spec.rb:10 # TaxonConcept Natator depressus LISTING cites_listing for family Cheloniidae
rspec ./spec/models/taxon_concept/natator_depressus_spec.rb:13 # TaxonConcept Natator depressus LISTING cites_listing for species Natator depressus
rspec ./spec/models/taxon_concept/notomys_aquilo_spec.rb:10 # TaxonConcept Notomys aquilo LISTING cites_listing for genus Notomys
rspec ./spec/models/taxon_concept/notomys_aquilo_spec.rb:13 # TaxonConcept Notomys aquilo LISTING cites_listing for species Notomys aquilo
rspec ./spec/models/taxon_concept/notomys_aquilo_spec.rb:19 # TaxonConcept Notomys aquilo LISTING cites_show for genus Notomys
rspec ./spec/models/taxon_concept/notomys_aquilo_spec.rb:22 # TaxonConcept Notomys aquilo LISTING cites_show for species Notomys aquilo
rspec ./spec/models/taxon_concept/panax_ginseng_spec.rb:11 # TaxonConcept Panax ginseng LISTING cites_listed for species Panax ginseng
rspec ./spec/models/taxon_concept/panax_ginseng_spec.rb:14 # TaxonConcept Panax ginseng LISTING cites_listed for genus Panax
rspec ./spec/models/taxon_concept/panax_ginseng_spec.rb:20 # TaxonConcept Panax ginseng LISTING eu_listed for species Panax ginseng
rspec ./spec/models/taxon_concept/panax_ginseng_spec.rb:23 # TaxonConcept Panax ginseng LISTING eu_listed for genus Panax
rspec ./spec/models/taxon_concept/panax_ginseng_spec.rb:29 # TaxonConcept Panax ginseng LISTING cites_listing for species Panax ginseng
rspec ./spec/models/taxon_concept/panax_ginseng_spec.rb:35 # TaxonConcept Panax ginseng LISTING eu_listing for species Panax ginseng
rspec ./spec/models/taxon_concept/panax_ginseng_spec.rb:41 # TaxonConcept Panax ginseng LISTING ann_symbol for species Panax ginseng
rspec ./spec/models/taxon_concept/panax_ginseng_spec.rb:47 # TaxonConcept Panax ginseng LISTING hash_ann_symbol for species Panax ginseng
rspec ./spec/models/taxon_concept/pereskia_spec.rb:10 # TaxonConcept Pereskia LISTING cites_listing for genus Pereskia (not listed, shown)
rspec ./spec/models/taxon_concept/pereskia_spec.rb:13 # TaxonConcept Pereskia LISTING cites_listing for genus Ariocarpus
rspec ./spec/models/taxon_concept/pereskia_spec.rb:16 # TaxonConcept Pereskia LISTING cites_listing for family Cactaceae
rspec ./spec/models/taxon_concept/pereskia_spec.rb:22 # TaxonConcept Pereskia LISTING eu_listing for genus Pereskia (not listed, shown)
rspec ./spec/models/taxon_concept/pereskia_spec.rb:25 # TaxonConcept Pereskia LISTING eu_listing for genus Ariocarpus
rspec ./spec/models/taxon_concept/pereskia_spec.rb:28 # TaxonConcept Pereskia LISTING eu_listing for family Cactaceae
rspec ./spec/models/taxon_concept/pereskia_spec.rb:34 # TaxonConcept Pereskia LISTING cites_listed for family Cactaceae
rspec ./spec/models/taxon_concept/pereskia_spec.rb:37 # TaxonConcept Pereskia LISTING cites_listed for genus Pereskia
rspec ./spec/models/taxon_concept/pereskia_spec.rb:43 # TaxonConcept Pereskia LISTING eu_listed for family Cactaceae
rspec ./spec/models/taxon_concept/pereskia_spec.rb:46 # TaxonConcept Pereskia LISTING eu_listed for genus Pereskia
rspec ./spec/models/taxon_concept/pereskia_spec.rb:52 # TaxonConcept Pereskia LISTING cites_status for genus Pereskia
rspec ./spec/models/taxon_concept/pereskia_spec.rb:58 # TaxonConcept Pereskia LISTING cites_show for genus Pereskia
rspec ./spec/models/taxon_concept/platysternon_megacephalum_spec.rb:10 # TaxonConcept Platysternon megacephalum LISTING cites_listing for family Platysternidae
rspec ./spec/models/taxon_concept/platysternon_megacephalum_spec.rb:13 # TaxonConcept Platysternon megacephalum LISTING cites_listing for species Platysternon megacephalum
rspec ./spec/models/taxon_concept/platysternon_megacephalum_spec.rb:19 # TaxonConcept Platysternon megacephalum LISTING cites_listed for species Platysternon megacephalum
rspec ./spec/models/taxon_concept/platysternon_megacephalum_spec.rb:25 # TaxonConcept Platysternon megacephalum LISTING cites_show for species Platysternon megacephalum
rspec ./spec/models/taxon_concept/platysternon_megacephalum_spec.rb:31 # TaxonConcept Platysternon megacephalum LISTING eu_listing for family Platysternidae
rspec ./spec/models/taxon_concept/platysternon_megacephalum_spec.rb:34 # TaxonConcept Platysternon megacephalum LISTING eu_listing for species Platysternon megacephalum
rspec ./spec/models/taxon_concept/platysternon_megacephalum_spec.rb:40 # TaxonConcept Platysternon megacephalum LISTING eu_listed for species Platysternon megacephalum
rspec ./spec/models/taxon_concept/platysternon_megacephalum_spec.rb:46 # TaxonConcept Platysternon megacephalum LISTING eu_show for species Platysternon megacephalum
rspec ./spec/models/taxon_concept/pristis_microdon_spec.rb:10 # TaxonConcept Pristis microdon LISTING cites_listing for family Pristidae
rspec ./spec/models/taxon_concept/pristis_microdon_spec.rb:13 # TaxonConcept Pristis microdon LISTING cites_listing for species Pristis microdon
rspec ./spec/models/taxon_concept/pristis_microdon_spec.rb:19 # TaxonConcept Pristis microdon LISTING cites_listed for species Pristis microdon
rspec ./spec/models/taxon_concept/pristis_microdon_spec.rb:25 # TaxonConcept Pristis microdon LISTING cites_show for species Pristis microdon
rspec ./spec/models/taxon_concept/pristis_microdon_spec.rb:31 # TaxonConcept Pristis microdon LISTING eu_listing for family Pristidae
rspec ./spec/models/taxon_concept/pristis_microdon_spec.rb:34 # TaxonConcept Pristis microdon LISTING eu_listing for species Pristis microdon
rspec ./spec/models/taxon_concept/pristis_microdon_spec.rb:40 # TaxonConcept Pristis microdon LISTING eu_listed for species Pristis microdon
rspec ./spec/models/taxon_concept/pristis_microdon_spec.rb:46 # TaxonConcept Pristis microdon LISTING eu_show for species Pristis microdon
rspec ./spec/models/taxon_concept/pseudomys_fieldi_spec.rb:10 # TaxonConcept Pseudomys fieldi LISTING cites_listing for subspecies Pseudomys fieldi preaconis
rspec ./spec/models/taxon_concept/pseudomys_fieldi_spec.rb:13 # TaxonConcept Pseudomys fieldi LISTING cites_listing for species Pseudomys fieldi
rspec ./spec/models/taxon_concept/pseudomys_fieldi_spec.rb:19 # TaxonConcept Pseudomys fieldi LISTING eu_listing for subspecies Pseudomys fieldi preaconis
rspec ./spec/models/taxon_concept/pseudomys_fieldi_spec.rb:22 # TaxonConcept Pseudomys fieldi LISTING eu_listing for species Pseudomys fieldi
rspec ./spec/models/taxon_concept/pseudomys_fieldi_spec.rb:28 # TaxonConcept Pseudomys fieldi LISTING cites_show for subspecies Pseudomys fieldi preaconis
rspec ./spec/models/taxon_concept/pseudomys_fieldi_spec.rb:31 # TaxonConcept Pseudomys fieldi LISTING cites_show for species Pseudomys fieldi
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:10 # TaxonConcept Psittaciformes LISTING cites_listing for order Psittaciformes
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:13 # TaxonConcept Psittaciformes LISTING cites_listing for species Cacatua goffiniana
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:16 # TaxonConcept Psittaciformes LISTING cites_listing for species Cacatua ducorpsi (H)
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:19 # TaxonConcept Psittaciformes LISTING cites_listing for species Probosciger aterrimus
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:22 # TaxonConcept Psittaciformes LISTING cites_listing for species Amazona aestiva
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:25 # TaxonConcept Psittaciformes LISTING cites_listing for species Agapornis roseicollis (DEL II, not listed, not shown)
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:28 # TaxonConcept Psittaciformes LISTING cites_listing for species Psittacula krameri (DEL III, not listed, not shown)
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:31 # TaxonConcept Psittaciformes LISTING cites_listing for subspecies Amazona festiva festiva
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:37 # TaxonConcept Psittaciformes LISTING eu_listing for order Psittaciformes
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:40 # TaxonConcept Psittaciformes LISTING eu_listing for species Cacatua goffiniana
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:43 # TaxonConcept Psittaciformes LISTING eu_listing for species Cacatua ducorpsi (H)
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:46 # TaxonConcept Psittaciformes LISTING eu_listing for species Probosciger aterrimus
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:49 # TaxonConcept Psittaciformes LISTING eu_listing for species Amazona aestiva
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:52 # TaxonConcept Psittaciformes LISTING eu_listing for species Agapornis roseicollis (DEL II, not listed, not shown)
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:55 # TaxonConcept Psittaciformes LISTING eu_listing for species Psittacula krameri (DEL III, not listed, not shown)
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:58 # TaxonConcept Psittaciformes LISTING eu_listing for subspecies Amazona festiva festiva
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:64 # TaxonConcept Psittaciformes LISTING cites_listed for order Psittaciformes
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:67 # TaxonConcept Psittaciformes LISTING cites_listed for family Cacatuidae
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:70 # TaxonConcept Psittaciformes LISTING cites_listed for genus Cacatua
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:73 # TaxonConcept Psittaciformes LISTING cites_listed for species Cacatua goffiniana
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:76 # TaxonConcept Psittaciformes LISTING cites_listed for species Cacatua ducorpsi
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:79 # TaxonConcept Psittaciformes LISTING cites_listed for subspecies Amazona festiva festiva
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:85 # TaxonConcept Psittaciformes LISTING eu_listed for order Psittaciformes
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:88 # TaxonConcept Psittaciformes LISTING eu_listed for family Cacatuidae
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:91 # TaxonConcept Psittaciformes LISTING eu_listed for genus Cacatua
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:94 # TaxonConcept Psittaciformes LISTING eu_listed for species Cacatua goffiniana
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:97 # TaxonConcept Psittaciformes LISTING eu_listed for species Cacatua ducorpsi
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:100 # TaxonConcept Psittaciformes LISTING eu_listed for subspecies Amazona festiva festiva
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:106 # TaxonConcept Psittaciformes LISTING cites_show for species Agapornis roseicollis (DEL II)
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:109 # TaxonConcept Psittaciformes LISTING cites_show for species Amazona aestiva
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:112 # TaxonConcept Psittaciformes LISTING cites_show for species Psittacula krameri (DEL III)
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:118 # TaxonConcept Psittaciformes LISTING cites_status for species Agapornis roseicollis (DEL II)
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:121 # TaxonConcept Psittaciformes LISTING cites_status for species Psittacula krameri (DEL III)
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:127 # TaxonConcept Psittaciformes LISTING show_in_checklist_ac for subspecies Amazona festiva festiva
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:133 # TaxonConcept Psittaciformes LISTING show_in_species_plus_ac for subspecies Amazona festiva festiva
rspec ./spec/models/taxon_concept/psittaciformes_spec.rb:139 # TaxonConcept Psittaciformes LISTING show_in_species_plus for subspecies Amazona festiva festiva
rspec ./spec/models/taxon_concept/synonyms_spec.rb:93 # TaxonConcept create when has accepted parent overnight calculations
rspec ./spec/models/taxon_concept/tapiridae_spec.rb:9 # TaxonConcept Tapiridae TAXONOMY full_name for family Tapiridae
rspec ./spec/models/taxon_concept/tapiridae_spec.rb:14 # TaxonConcept Tapiridae TAXONOMY rank for family Tapiridae
rspec ./spec/models/taxon_concept/tapiridae_spec.rb:19 # TaxonConcept Tapiridae TAXONOMY ancestors order
rspec ./spec/models/taxon_concept/tapiridae_spec.rb:22 # TaxonConcept Tapiridae TAXONOMY ancestors class
rspec ./spec/models/taxon_concept/tapiridae_spec.rb:30 # TaxonConcept Tapiridae LISTING cites_listing for family Tapiridae
rspec ./spec/models/taxon_concept/tapiridae_spec.rb:33 # TaxonConcept Tapiridae LISTING cites_listing for species Tapirus terrestris
rspec ./spec/models/taxon_concept/tapiridae_spec.rb:39 # TaxonConcept Tapiridae LISTING eu_listing for family Tapiridae
rspec ./spec/models/taxon_concept/tapiridae_spec.rb:42 # TaxonConcept Tapiridae LISTING eu_listing for species Tapirus terrestris
rspec ./spec/models/taxon_concept/tapiridae_spec.rb:48 # TaxonConcept Tapiridae LISTING cites_listed for family Tapiridae
rspec ./spec/models/taxon_concept/tapiridae_spec.rb:51 # TaxonConcept Tapiridae LISTING cites_listed for genus Tapirus
rspec ./spec/models/taxon_concept/tapiridae_spec.rb:54 # TaxonConcept Tapiridae LISTING cites_listed for species Tapirus terrestris
rspec ./spec/models/taxon_concept/tapiridae_spec.rb:60 # TaxonConcept Tapiridae LISTING eu_listed for family Tapiridae
rspec ./spec/models/taxon_concept/tapiridae_spec.rb:63 # TaxonConcept Tapiridae LISTING eu_listed for genus Tapirus
rspec ./spec/models/taxon_concept/tapiridae_spec.rb:66 # TaxonConcept Tapiridae LISTING eu_listed for species Tapirus terrestris
rspec ./spec/models/taxon_concept/trade_names_spec.rb:93 # TaxonConcept create when has accepted parent overnight calculations
rspec ./spec/models/taxon_concept/uroplatus_spec.rb:10 # TaxonConcept Uroplatus REFERENCES cites_accepted for genus Uroplatus
rspec ./spec/models/taxon_concept/uroplatus_spec.rb:13 # TaxonConcept Uroplatus REFERENCES cites_accepted for species Uroplatus alluaudi
rspec ./spec/models/taxon_concept/uroplatus_spec.rb:16 # TaxonConcept Uroplatus REFERENCES cites_accepted for species Uroplatus giganteus
rspec ./spec/models/taxon_concept/uroplatus_spec.rb:21 # TaxonConcept Uroplatus REFERENCES standard_taxon_concept_references for family Gekkonidae
rspec ./spec/models/taxon_concept/uroplatus_spec.rb:24 # TaxonConcept Uroplatus REFERENCES standard_taxon_concept_references for genus Uroplatus
rspec ./spec/models/taxon_concept/uroplatus_spec.rb:27 # TaxonConcept Uroplatus REFERENCES standard_taxon_concept_references for species Uroplatus alluaudi
rspec ./spec/models/taxon_concept/uroplatus_spec.rb:30 # TaxonConcept Uroplatus REFERENCES standard_taxon_concept_references for species Uroplatus giganteus
rspec ./spec/models/taxon_concept/uroplatus_spec.rb:37 # TaxonConcept Uroplatus LISTING cites_listing for genus Uroplatus
rspec ./spec/models/taxon_concept/uroplatus_spec.rb:40 # TaxonConcept Uroplatus LISTING cites_listing for species Uroplatus giganteus
rspec ./spec/models/taxon_concept/uroplatus_spec.rb:46 # TaxonConcept Uroplatus LISTING eu_listing for genus Uroplatus
rspec ./spec/models/taxon_concept/uroplatus_spec.rb:49 # TaxonConcept Uroplatus LISTING eu_listing for species Uroplatus giganteus
rspec ./spec/models/taxon_concept/uroplatus_spec.rb:55 # TaxonConcept Uroplatus LISTING cites_listed for family Gekkonidae
rspec ./spec/models/taxon_concept/uroplatus_spec.rb:58 # TaxonConcept Uroplatus LISTING cites_listed for genus Uroplatus
rspec ./spec/models/taxon_concept/uroplatus_spec.rb:61 # TaxonConcept Uroplatus LISTING cites_listed for species Uroplatus giganteus
rspec ./spec/models/taxon_concept/uroplatus_spec.rb:67 # TaxonConcept Uroplatus LISTING eu_listed for family Gekkonidae
rspec ./spec/models/taxon_concept/uroplatus_spec.rb:70 # TaxonConcept Uroplatus LISTING eu_listed for genus Uroplatus
rspec ./spec/models/taxon_concept/uroplatus_spec.rb:73 # TaxonConcept Uroplatus LISTING eu_listed for species Uroplatus giganteus
rspec ./spec/models/taxon_concept/varanidae_spec.rb:10 # TaxonConcept Varanidae REFERENCES cites_accepted for species Varanus bengalensis
rspec ./spec/models/taxon_concept/varanidae_spec.rb:15 # TaxonConcept Varanidae REFERENCES standard_taxon_concept_references for order Sauria
rspec ./spec/models/taxon_concept/varanidae_spec.rb:18 # TaxonConcept Varanidae REFERENCES standard_taxon_concept_references for family Varanidae
rspec ./spec/models/taxon_concept/varanidae_spec.rb:21 # TaxonConcept Varanidae REFERENCES standard_taxon_concept_references for species Varanus bengalensis
rspec ./spec/models/taxon_concept/varanidae_spec.rb:24 # TaxonConcept Varanidae REFERENCES standard_taxon_concept_references for species Varanus bushi
rspec ./spec/models/taxon_concept/varanidae_spec.rb:25 # TaxonConcept Varanidae REFERENCES standard_taxon_concept_references for species Varanus bushi
rspec ./spec/models/taxon_concept/varanidae_spec.rb:32 # TaxonConcept Varanidae LISTING cites_listing for genus Varanus
rspec ./spec/models/taxon_concept/varanidae_spec.rb:35 # TaxonConcept Varanidae LISTING cites_listing for species Varanus bengalensis
rspec ./spec/models/taxon_concept/varanidae_spec.rb:41 # TaxonConcept Varanidae LISTING eu_listing for genus Varanus
rspec ./spec/models/taxon_concept/varanidae_spec.rb:44 # TaxonConcept Varanidae LISTING eu_listing for species Varanus bengalensis
rspec ./spec/models/taxon_concept/varanidae_spec.rb:50 # TaxonConcept Varanidae LISTING cites_listed for family Varanidae
rspec ./spec/models/taxon_concept/varanidae_spec.rb:53 # TaxonConcept Varanidae LISTING cites_listed for genus Varanus
rspec ./spec/models/taxon_concept/varanidae_spec.rb:56 # TaxonConcept Varanidae LISTING cites_listed for species Varanus bengalensis
rspec ./spec/models/taxon_concept/varanidae_spec.rb:62 # TaxonConcept Varanidae LISTING eu_listed for family Varanidae
rspec ./spec/models/taxon_concept/varanidae_spec.rb:65 # TaxonConcept Varanidae LISTING eu_listed for genus Varanus
rspec ./spec/models/taxon_concept/varanidae_spec.rb:68 # TaxonConcept Varanidae LISTING eu_listed for species Varanus bengalensis
rspec ./spec/models/trade/annual_report_upload_spec.rb:54 # Trade::AnnualReportUpload valid? when uploaded file as exporter with exporter column headers
rspec ./spec/models/trade/annual_report_upload_spec.rb:64 # Trade::AnnualReportUpload valid? when uploaded file as importer with exporter column headers
rspec ./spec/models/trade/annual_report_upload_spec.rb:74 # Trade::AnnualReportUpload valid? when uploaded file as importer with importer column headers
rspec ./spec/models/trade/annual_report_upload_spec.rb:84 # Trade::AnnualReportUpload valid? when uploaded file as exporter with importer column headers
rspec ./spec/models/trade/annual_report_upload_spec.rb:99 # Trade::AnnualReportUpload validation_errors
rspec ./spec/models/trade/annual_report_upload_spec.rb:112 # Trade::AnnualReportUpload create when blank lines in import file
rspec ./spec/models/trade/annual_report_upload_spec.rb:127 # Trade::AnnualReportUpload destroy
rspec ./spec/models/trade/distinct_values_validation_rule_spec.rb:52 # Trade::DistinctValuesValidationRule validation_errors_for_aru exporter should not equal importer (E)
rspec ./spec/models/trade/distinct_values_validation_rule_spec.rb:69 # Trade::DistinctValuesValidationRule validation_errors_for_aru exporter should not equal importer (I)
rspec ./spec/models/trade/distinct_values_validation_rule_spec.rb:82 # Trade::DistinctValuesValidationRule validation_errors_for_aru exporter should not equal country of origin
rspec ./spec/models/trade/filter_spec.rb:15 # Trade::Filter results when searching by taxon concepts ids in the public interface at GENUS rank
rspec ./spec/models/trade/filter_spec.rb:16 # Trade::Filter results when searching by taxon concepts ids in the public interface at GENUS rank
rspec ./spec/models/trade/filter_spec.rb:17 # Trade::Filter results when searching by taxon concepts ids in the public interface at GENUS rank
rspec ./spec/models/trade/filter_spec.rb:25 # Trade::Filter results when searching by taxon concepts ids in the public interface at FAMILY rank
rspec ./spec/models/trade/filter_spec.rb:34 # Trade::Filter results when searching by taxon concepts ids in the admin interface at GENUS rank
rspec ./spec/models/trade/filter_spec.rb:35 # Trade::Filter results when searching by taxon concepts ids in the admin interface at GENUS rank
rspec ./spec/models/trade/filter_spec.rb:36 # Trade::Filter results when searching by taxon concepts ids in the admin interface at GENUS rank
rspec ./spec/models/trade/filter_spec.rb:43 # Trade::Filter results when searching by taxon concepts ids in the admin interface at FAMILY rank
rspec ./spec/models/trade/filter_spec.rb:44 # Trade::Filter results when searching by taxon concepts ids in the admin interface at FAMILY rank
rspec ./spec/models/trade/filter_spec.rb:45 # Trade::Filter results when searching by taxon concepts ids in the admin interface at FAMILY rank
rspec ./spec/models/trade/filter_spec.rb:54 # Trade::Filter results when searching by taxon concepts ids in the admin interface at mixed ranks
rspec ./spec/models/trade/filter_spec.rb:55 # Trade::Filter results when searching by taxon concepts ids in the admin interface at mixed ranks
rspec ./spec/models/trade/filter_spec.rb:56 # Trade::Filter results when searching by taxon concepts ids in the admin interface at mixed ranks
rspec ./spec/models/trade/filter_spec.rb:68 # Trade::Filter results when searching by taxon concepts ids when status N shipments present
rspec ./spec/models/trade/filter_spec.rb:79 # Trade::Filter results when searching by taxon concepts ids when subspecies shipments present
rspec ./spec/models/trade/filter_spec.rb:95 # Trade::Filter results when searching by taxon concepts ids when synonym subspecies shipments present when searching by taxonomic parent
rspec ./spec/models/trade/filter_spec.rb:103 # Trade::Filter results when searching by taxon concepts ids when synonym subspecies shipments present when searching by accepted name
rspec ./spec/models/trade/filter_spec.rb:122 # Trade::Filter results when searching by reported taxon concepts ids when trade names shipments present
rspec ./spec/models/trade/inclusion_validation_rule_spec.rb:65 # Trade::InclusionValidationRule matching_records_for_aru_and_error
rspec ./spec/models/trade/inclusion_validation_rule_spec.rb:104 # Trade::InclusionValidationRule refresh_errors_if_needed when no updates
rspec ./spec/models/trade/inclusion_validation_rule_spec.rb:112 # Trade::InclusionValidationRule refresh_errors_if_needed when updates and error fixed for all records error record is destroyed
rspec ./spec/models/trade/inclusion_validation_rule_spec.rb:123 # Trade::InclusionValidationRule refresh_errors_if_needed when updates and error fixed for some records error record is updated to reflect new error_count
rspec ./spec/models/trade/inclusion_validation_rule_spec.rb:148 # Trade::InclusionValidationRule validation_errors_for_aru species name may have extra whitespace between name segments
rspec ./spec/models/trade/inclusion_validation_rule_spec.rb:175 # Trade::InclusionValidationRule validation_errors_for_aru trading partner should be a valid iso code
rspec ./spec/models/trade/inclusion_validation_rule_spec.rb:202 # Trade::InclusionValidationRule validation_errors_for_aru term can only be paired with unit as defined by term_trade_codes_pairs table when invalid combination
rspec ./spec/models/trade/inclusion_validation_rule_spec.rb:214 # Trade::InclusionValidationRule validation_errors_for_aru term can only be paired with unit as defined by term_trade_codes_pairs table when required unit blank
rspec ./spec/models/trade/inclusion_validation_rule_spec.rb:234 # Trade::InclusionValidationRule validation_errors_for_aru term can only be paired with purpose as defined by term_trade_codes_pairs table
rspec ./spec/models/trade/inclusion_validation_rule_spec.rb:255 # Trade::InclusionValidationRule validation_errors_for_aru taxon_concept_id can only be paired with term as defined by trade_taxon_concept_term_pairs table when accepted name
rspec ./spec/models/trade/inclusion_validation_rule_spec.rb:272 # Trade::InclusionValidationRule validation_errors_for_aru taxon_concept_id can only be paired with term as defined by trade_taxon_concept_term_pairs table when hybrid
rspec ./spec/models/trade/pov_inclusion_validation_rule_spec.rb:74 # Trade::InclusionValidationRule validation_errors_for_aru when W source and country of origin blank and exporter doesn't match distribution (E)
rspec ./spec/models/trade/pov_inclusion_validation_rule_spec.rb:97 # Trade::InclusionValidationRule validation_errors_for_aru when W source and country of origin blank and exporter doesn't match distribution (I)
rspec ./spec/models/trade/pov_inclusion_validation_rule_spec.rb:120 # Trade::InclusionValidationRule validation_errors_for_aru when W source and country XX
rspec ./spec/models/trade/pov_inclusion_validation_rule_spec.rb:143 # Trade::InclusionValidationRule validation_errors_for_aru when W source and country doesn't match distribution of higher taxa
rspec ./spec/models/trade/pov_inclusion_validation_rule_spec.rb:160 # Trade::InclusionValidationRule validation_errors_for_aru when invalid scope specified
rspec ./spec/models/trade/sandbox_filter_spec.rb:64 # Trade::SandboxFilter results
rspec ./spec/models/trade/sandbox_filter_spec.rb:65 # Trade::SandboxFilter results
rspec ./spec/models/trade/sandbox_spec.rb:47 # Trade::Sandbox destroy
rspec ./spec/models/trade/sandbox_template_spec.rb:56 # Trade::SandboxTemplate update
rspec ./spec/models/trade/sandbox_template_spec.rb:78 # Trade::SandboxTemplate update_batch
rspec ./spec/models/trade/scoped_inclusion_validation_rule_spec.rb:21 # Trade::InclusionValidationRule validation_errors when W source and country of origin matches distribution
rspec ./spec/models/trade/scoped_inclusion_validation_rule_spec.rb:48 # Trade::InclusionValidationRule validation_errors when W source and country of origin blank
rspec ./spec/models/trade/shipment_spec.rb:123 # Trade::Shipment secondary validations when species name + appendix + year invalid
rspec ./spec/models/trade/shipment_spec.rb:132 # Trade::Shipment secondary validations when species name + appendix + year invalid
rspec ./spec/models/trade/shipment_spec.rb:141 # Trade::Shipment secondary validations when species name + appendix + year valid
rspec ./spec/models/trade/shipment_spec.rb:163 # Trade::Shipment secondary validations when species name + appendix N + year valid
rspec ./spec/models/trade/shipment_spec.rb:184 # Trade::Shipment secondary validations when species name + appendix N + year not CITES listed and not EU listed
rspec ./spec/models/trade/shipment_spec.rb:445 # Trade::Shipment secondary validations when species name + source code invalid
rspec ./spec/models/trade/shipment_spec.rb:455 # Trade::Shipment secondary validations when species name + source code valid
rspec ./spec/models/trade/shipments_comptab_export_spec.rb:12 # Trade::ShipmentsComptabExport total_cnt when internal
rspec ./spec/models/trade/shipments_comptab_export_spec.rb:16 # Trade::ShipmentsComptabExport total_cnt when public
rspec ./spec/models/trade/shipments_comptab_export_spec.rb:23 # Trade::ShipmentsComptabExport query when internal
rspec ./spec/models/trade/shipments_comptab_export_spec.rb:27 # Trade::ShipmentsComptabExport query when public
rspec ./spec/models/trade/shipments_export_spec.rb:23 # Trade::ShipmentsExport query when internal
rspec ./spec/models/trade/shipments_export_spec.rb:27 # Trade::ShipmentsExport query when public
rspec ./spec/models/trade/shipments_gross_exports_export_spec.rb:12 # Trade::ShipmentsGrossExportsExport total_cnt when internal
rspec ./spec/models/trade/shipments_gross_exports_export_spec.rb:16 # Trade::ShipmentsGrossExportsExport total_cnt when public
rspec ./spec/models/trade/shipments_gross_exports_export_spec.rb:23 # Trade::ShipmentsGrossExportsExport query when internal
rspec ./spec/models/trade/shipments_gross_exports_export_spec.rb:27 # Trade::ShipmentsGrossExportsExport query when public
rspec ./spec/models/trade/shipments_gross_imports_export_spec.rb:12 # Trade::ShipmentsGrossImportsExport total_cnt when internal
rspec ./spec/models/trade/shipments_gross_imports_export_spec.rb:16 # Trade::ShipmentsGrossImportsExport total_cnt when public
rspec ./spec/models/trade/shipments_gross_imports_export_spec.rb:23 # Trade::ShipmentsGrossImportsExport query when internal
rspec ./spec/models/trade/shipments_gross_imports_export_spec.rb:27 # Trade::ShipmentsGrossImportsExport query when public
rspec ./spec/models/trade/shipments_net_exports_export_spec.rb:12 # Trade::ShipmentsNetExportsExport total_cnt when internal
rspec ./spec/models/trade/shipments_net_exports_export_spec.rb:16 # Trade::ShipmentsNetExportsExport total_cnt when public
rspec ./spec/models/trade/shipments_net_exports_export_spec.rb:23 # Trade::ShipmentsNetExportsExport query when internal
rspec ./spec/models/trade/shipments_net_exports_export_spec.rb:27 # Trade::ShipmentsNetExportsExport query when public
rspec ./spec/models/trade/shipments_net_imports_export_spec.rb:12 # Trade::ShipmentsNetImportsExport total_cnt when internal
rspec ./spec/models/trade/shipments_net_imports_export_spec.rb:16 # Trade::ShipmentsNetImportsExport total_cnt when public
rspec ./spec/models/trade/shipments_net_imports_export_spec.rb:23 # Trade::ShipmentsNetImportsExport query when internal
rspec ./spec/models/trade/shipments_net_imports_export_spec.rb:27 # Trade::ShipmentsNetImportsExport query when public
rspec ./spec/models/trade/taxon_concept_appendix_year_validation_rule_spec.rb:77 # Trade::TaxonConceptAppendixYearValidationRule validation_errors_for_aru when CITES listed when split listing
rspec ./spec/models/trade/taxon_concept_appendix_year_validation_rule_spec.rb:94 # Trade::TaxonConceptAppendixYearValidationRule validation_errors_for_aru when CITES listed when old listing
rspec ./spec/models/trade/taxon_concept_appendix_year_validation_rule_spec.rb:98 # Trade::TaxonConceptAppendixYearValidationRule validation_errors_for_aru when CITES listed when old listing
rspec ./spec/models/trade/taxon_concept_appendix_year_validation_rule_spec.rb:113 # Trade::TaxonConceptAppendixYearValidationRule validation_errors_for_aru when CITES listed when appendix N and CITES listed
rspec ./spec/models/trade/taxon_concept_appendix_year_validation_rule_spec.rb:117 # Trade::TaxonConceptAppendixYearValidationRule validation_errors_for_aru when CITES listed when appendix N and CITES listed
rspec ./spec/models/trade/taxon_concept_appendix_year_validation_rule_spec.rb:132 # Trade::TaxonConceptAppendixYearValidationRule validation_errors_for_aru when CITES listed when reported under a synonym, but otherwise fine
rspec ./spec/models/trade/taxon_concept_appendix_year_validation_rule_spec.rb:169 # Trade::TaxonConceptAppendixYearValidationRule validation_errors_for_aru when CITES listed when hybrid
rspec ./spec/models/trade/taxon_concept_appendix_year_validation_rule_spec.rb:185 # Trade::TaxonConceptAppendixYearValidationRule validation_errors_for_aru when not CITES listed but EU listed
rspec ./spec/models/trade/taxon_concept_appendix_year_validation_rule_spec.rb:200 # Trade::TaxonConceptAppendixYearValidationRule validation_errors_for_aru when not CITES listed and not EU listed
rspec ./spec/models/trade/taxon_concept_source_validation_rule_spec.rb:42 # Trade::TaxonConceptSourceValidationRule validation_errors_for_aru when species name is from Kingdom Animalia, source_code can't be A
rspec ./spec/models/trade/taxon_concept_source_validation_rule_spec.rb:46 # Trade::TaxonConceptSourceValidationRule validation_errors_for_aru when species name is from Kingdom Animalia, source_code can't be A
rspec ./spec/models/trade/taxon_concept_source_validation_rule_spec.rb:63 # Trade::TaxonConceptSourceValidationRule validation_errors_for_aru when species name is from Kingdom Plantae, source_code can't be C or R
rspec ./spec/models/trade/validation_rule_spec.rb:56 # Trade::ValidationRule matching_records_for_aru_and_error
rspec ./spec/models/trade/validation_rule_spec.rb:94 # Trade::ValidationRule refresh_errors_if_needed when no updates
rspec ./spec/models/trade/validation_rule_spec.rb:102 # Trade::ValidationRule refresh_errors_if_needed when updates and error fixed for all records error record is destroyed
rspec ./spec/models/trade/validation_rule_spec.rb:113 # Trade::ValidationRule refresh_errors_if_needed when updates and error fixed for some records error record is updated to reflect new error_count
rspec ./spec/models/trade/validation_rule_spec.rb:136 # Trade::ValidationRule Trade::PresenceValidationRule validation_errors_for_aru trading_partner should not be blank
rspec ./spec/models/trade/validation_rule_spec.rb:157 # Trade::ValidationRule Trade::NumericalityValidationRule validation_errors_for_aru quantity should be a number
rspec ./spec/models/trade/validation_rule_spec.rb:174 # Trade::ValidationRule Trade::FormatValidationRule validation_errors_for_aru year should be a 4 digit value
rspec ./spec/workers/eu_regulation_activation_worker_spec.rb:32 # EuRegulationActivationWorker Set new EU regulation to true
rspec ./spec/workers/eu_regulation_activation_worker_spec.rb:33 # EuRegulationActivationWorker Set new EU regulation to true
rspec ./spec/workers/eu_regulation_activation_worker_spec.rb:40 # EuRegulationActivationWorker Set new EU regulation to true Set old EU regulation to false
rspec ./spec/workers/eu_regulation_activation_worker_spec.rb:41 # EuRegulationActivationWorker Set new EU regulation to true Set old EU regulation to false
rspec ./spec/workers/event_listing_changes_copy_worker_spec.rb:42 # EventListingChangesCopyWorker when copy into non-current regulation
rspec ./spec/workers/event_listing_changes_copy_worker_spec.rb:43 # EventListingChangesCopyWorker when copy into non-current regulation
rspec ./spec/workers/event_listing_changes_copy_worker_spec.rb:48 # EventListingChangesCopyWorker when copy into current regulation
rspec ./spec/workers/event_listing_changes_copy_worker_spec.rb:49 # EventListingChangesCopyWorker when copy into current regulation
rspec ./spec/workers/event_listing_changes_copy_worker_spec.rb:70 # EventListingChangesCopyWorker when exclusion
rspec ./spec/workers/event_listing_changes_copy_worker_spec.rb:71 # EventListingChangesCopyWorker when exclusion
rspec ./spec/workers/event_listing_changes_copy_worker_spec.rb:72 # EventListingChangesCopyWorker when exclusion
rspec ./spec/workers/event_listing_changes_copy_worker_spec.rb:73 # EventListingChangesCopyWorker when exclusion
rspec ./spec/workers/quotas_copy_worker_spec.rb:47 # QuotasCopyWorker Copy single quota, for a given year
rspec ./spec/workers/quotas_copy_worker_spec.rb:48 # QuotasCopyWorker Copy single quota, for a given year
rspec ./spec/workers/quotas_copy_worker_spec.rb:49 # QuotasCopyWorker Copy single quota, for a given year
rspec ./spec/workers/quotas_copy_worker_spec.rb:50 # QuotasCopyWorker Copy single quota, for a given year
rspec ./spec/workers/quotas_copy_worker_spec.rb:59 # QuotasCopyWorker Try to copy quota from wrong year
rspec ./spec/workers/quotas_copy_worker_spec.rb:60 # QuotasCopyWorker Try to copy quota from wrong year
rspec ./spec/workers/quotas_copy_worker_spec.rb:61 # QuotasCopyWorker Try to copy quota from wrong year
rspec ./spec/workers/quotas_copy_worker_spec.rb:70 # QuotasCopyWorker Copy quota when there are no current quotas
rspec ./spec/workers/quotas_copy_worker_spec.rb:71 # QuotasCopyWorker Copy quota when there are no current quotas
rspec ./spec/workers/quotas_copy_worker_spec.rb:72 # QuotasCopyWorker Copy quota when there are no current quotas
rspec ./spec/workers/quotas_copy_worker_spec.rb:90 # QuotasCopyWorker When multiple quotas copy quota for given country
rspec ./spec/workers/quotas_copy_worker_spec.rb:91 # QuotasCopyWorker When multiple quotas copy quota for given country
rspec ./spec/workers/quotas_copy_worker_spec.rb:92 # QuotasCopyWorker When multiple quotas copy quota for given country
rspec ./spec/workers/quotas_copy_worker_spec.rb:93 # QuotasCopyWorker When multiple quotas copy quota for given country
rspec ./spec/workers/quotas_copy_worker_spec.rb:94 # QuotasCopyWorker When multiple quotas copy quota for given country
rspec ./spec/workers/quotas_copy_worker_spec.rb:112 # QuotasCopyWorker When multiple quotas copy quota for both countries
rspec ./spec/workers/quotas_copy_worker_spec.rb:113 # QuotasCopyWorker When multiple quotas copy quota for both countries
rspec ./spec/workers/quotas_copy_worker_spec.rb:114 # QuotasCopyWorker When multiple quotas copy quota for both countries
rspec ./spec/workers/quotas_copy_worker_spec.rb:115 # QuotasCopyWorker When multiple quotas copy quota for both countries
rspec ./spec/workers/quotas_copy_worker_spec.rb:116 # QuotasCopyWorker When multiple quotas copy quota for both countries
rspec ./spec/workers/quotas_copy_worker_spec.rb:134 # QuotasCopyWorker When multiple quotas don't copy quota for given country
rspec ./spec/workers/quotas_copy_worker_spec.rb:135 # QuotasCopyWorker When multiple quotas don't copy quota for given country
rspec ./spec/workers/quotas_copy_worker_spec.rb:136 # QuotasCopyWorker When multiple quotas don't copy quota for given country
rspec ./spec/workers/quotas_copy_worker_spec.rb:137 # QuotasCopyWorker When multiple quotas don't copy quota for given country
rspec ./spec/workers/quotas_copy_worker_spec.rb:138 # QuotasCopyWorker When multiple quotas don't copy quota for given country
rspec ./spec/workers/quotas_copy_worker_spec.rb:155 # QuotasCopyWorker When multiple quotas copy quota for given taxon_concept
rspec ./spec/workers/quotas_copy_worker_spec.rb:156 # QuotasCopyWorker When multiple quotas copy quota for given taxon_concept
rspec ./spec/workers/quotas_copy_worker_spec.rb:157 # QuotasCopyWorker When multiple quotas copy quota for given taxon_concept
rspec ./spec/workers/quotas_copy_worker_spec.rb:158 # QuotasCopyWorker When multiple quotas copy quota for given taxon_concept
rspec ./spec/workers/quotas_copy_worker_spec.rb:159 # QuotasCopyWorker When multiple quotas copy quota for given taxon_concept
rspec ./spec/workers/quotas_copy_worker_spec.rb:177 # QuotasCopyWorker When multiple quotas copy quota for both taxon_concepts
rspec ./spec/workers/quotas_copy_worker_spec.rb:178 # QuotasCopyWorker When multiple quotas copy quota for both taxon_concepts
rspec ./spec/workers/quotas_copy_worker_spec.rb:179 # QuotasCopyWorker When multiple quotas copy quota for both taxon_concepts
rspec ./spec/workers/quotas_copy_worker_spec.rb:180 # QuotasCopyWorker When multiple quotas copy quota for both taxon_concepts
rspec ./spec/workers/quotas_copy_worker_spec.rb:181 # QuotasCopyWorker When multiple quotas copy quota for both taxon_concepts
rspec ./spec/workers/quotas_copy_worker_spec.rb:198 # QuotasCopyWorker When multiple quotas don't copy quota for given taxon_concept
rspec ./spec/workers/quotas_copy_worker_spec.rb:199 # QuotasCopyWorker When multiple quotas don't copy quota for given taxon_concept
rspec ./spec/workers/quotas_copy_worker_spec.rb:200 # QuotasCopyWorker When multiple quotas don't copy quota for given taxon_concept
rspec ./spec/workers/quotas_copy_worker_spec.rb:201 # QuotasCopyWorker When multiple quotas don't copy quota for given taxon_concept
rspec ./spec/workers/quotas_copy_worker_spec.rb:202 # QuotasCopyWorker When multiple quotas don't copy quota for given taxon_concept
rspec ./spec/workers/quotas_copy_worker_spec.rb:222 # QuotasCopyWorker When text to replace passed, should be replaced
rspec ./spec/workers/quotas_copy_worker_spec.rb:223 # QuotasCopyWorker When text to replace passed, should be replaced
rspec ./spec/workers/quotas_copy_worker_spec.rb:224 # QuotasCopyWorker When text to replace passed, should be replaced
rspec ./spec/workers/quotas_copy_worker_spec.rb:225 # QuotasCopyWorker When text to replace passed, should be replaced
rspec ./spec/workers/quotas_copy_worker_spec.rb:226 # QuotasCopyWorker When text to replace passed, should be replaced
rspec ./spec/workers/quotas_copy_worker_spec.rb:227 # QuotasCopyWorker When text to replace passed, should be replaced
rspec ./spec/workers/quotas_copy_worker_spec.rb:228 # QuotasCopyWorker When text to replace passed, should be replaced
rspec ./spec/workers/quotas_copy_worker_spec.rb:229 # QuotasCopyWorker When text to replace passed, should be replaced
rspec ./spec/workers/quotas_copy_worker_spec.rb:245 # QuotasCopyWorker When url passed, should be replaced
rspec ./spec/workers/quotas_copy_worker_spec.rb:246 # QuotasCopyWorker When url passed, should be replaced
rspec ./spec/workers/quotas_copy_worker_spec.rb:247 # QuotasCopyWorker When url passed, should be replaced
rspec ./spec/workers/quotas_copy_worker_spec.rb:248 # QuotasCopyWorker When url passed, should be replaced
rspec ./spec/workers/quotas_copy_worker_spec.rb:249 # QuotasCopyWorker When url passed, should be replaced
rspec ./spec/workers/quotas_copy_worker_spec.rb:250 # QuotasCopyWorker When url passed, should be replaced
[Coveralls] Outside the Travis environment, not sending data.
Coverage report generated for RSpec to /SAPI/coverage. 7170 / 10441 LOC (68.67%) covered.
